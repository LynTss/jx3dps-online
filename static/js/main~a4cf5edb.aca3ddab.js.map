{"version":3,"file":"static/js/main~a4cf5edb.aca3ddab.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/main.ts"],"sourcesContent":["/**\n * 定义模拟循环类\n */\n\nimport {\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  起手留客雨BUFF,\n  转化buff和增益名称,\n} from './utils'\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n} from './type'\n\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport 获取技能信息 from '@/数据/数据工具/获取技能等级信息'\n\nimport 流血 from './DOT类/流血'\nimport 截辕 from './DOT类/截辕'\nimport 行云势一 from './技能类/行云势一'\nimport 行云势二 from './技能类/行云势二'\nimport 行云势三 from './技能类/行云势三'\nimport 决云势一 from './技能类/决云势一'\nimport 决云势二 from './技能类/决云势二'\nimport 横云势一 from './技能类/横云势一'\nimport 横云势二 from './技能类/横云势二'\nimport 停云势 from './技能类/停云势'\nimport 留客雨 from './技能类/留客雨'\nimport 孤风破浪 from './技能类/孤风破浪'\nimport 灭影追风 from './技能类/灭影追风'\n\nconst { 技能系数 } = 获取当前数据()\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  起手留层数: number\n  大橙武模拟: boolean\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    锐意: 60,\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  云刀上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n\n    // !无界体感延迟多一段，这里比PC多按1帧延迟计算\n    this.网络延迟 = props.网络延迟 + 1\n\n    this.Buff和Dot数据 = 根据奇穴修改buff数据()\n    this.技能基础数据 = 根据奇穴修改技能数据()\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.当前自身buff列表 = props.起手留层数\n      ? { ...起手留客雨BUFF(this.Buff和Dot数据, props.起手留层数) }\n      : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      锐意: 60,\n    }\n    this.重置循环执行结果()\n  }\n\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      '行云势·一': new 行云势一(this),\n      '行云势·二': new 行云势二(this),\n      '行云势·三': new 行云势三(this),\n      '决云势·一': new 决云势一(this),\n      '决云势·二': new 决云势二(this),\n      '横云势·一': new 横云势一(this),\n      '横云势·二': new 横云势二(this),\n      停云势: new 停云势(this),\n      留客雨: new 留客雨(this),\n      孤风破浪: new 孤风破浪(this),\n      灭影追风: new 灭影追风(this),\n      流血: new 流血(this),\n      截辕: new 截辕(this),\n    }\n  }\n\n  添加buff({ 名称, 对象 = '目标', 事件时间 = this.当前时间, 新增层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if (新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (对象 === '自身') {\n      this.当前自身buff列表[名称] = { ...新buff对象 }\n    } else {\n      this.当前目标buff列表[名称] = { ...新buff对象 }\n    }\n  }\n\n  卸除buff({ 名称, buff刷新时间 = 0, 对象 = '目标', 事件时间 = this.当前时间, 卸除层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    if (当前层数 && 当前层数 >= 0) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        const 新buff对象 = {\n          ...this.Buff和Dot数据[名称],\n          当前层数: 当前层数 - 卸除层数,\n          刷新时间: buff刷新时间 || 事件时间,\n        }\n        if (对象 === '自身') {\n          this.当前自身buff列表[名称] = { ...新buff对象 }\n        } else {\n          this.当前目标buff列表[名称] = { ...新buff对象 }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (对象 === '自身') {\n          delete this.当前自身buff列表[名称]\n        } else {\n          delete this.当前目标buff列表[名称]\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    this.跳过全部GCD时间(time)\n    // 增加时间\n    this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n    this.DOT结算与更新()\n    this.清空已经消失的buff()\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // if (当前技能.技能GCD组 === '自身') {\n      //   GCD = GCD + 3\n      // }\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      const 当前技能 = this.技能基础数据?.find((item) => item.技能名称 === key)\n      if (实例?.技能运行数据) {\n        const 最大充能层数 = 当前技能?.最大充能层数 || 1\n        const 当前层数 = 实例?.技能运行数据?.当前层数\n        const 计划下次充能时间点 = 实例?.技能运行数据?.计划下次充能时间点 || 0\n        if (当前层数 < 最大充能层数) {\n          // 当前有层数，检查充能度过情况，更新层数和充能时间\n          let 新层数 = 当前层数\n          let 新充能时间点 = 计划下次充能时间点\n          const 充能 = () => {\n            if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n              新层数 = 新层数 + 1\n              // 没充满，继续跑充能CD\n              if (新层数 < 最大充能层数) {\n                新充能时间点 = 新充能时间点 + (当前技能?.技能CD || 0)\n              }\n              if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n                充能()\n              }\n            }\n          }\n          if (新充能时间点 && 新充能时间点 <= this.当前时间) {\n            充能()\n            实例?.更新技能运行数据({ 当前层数: 新层数, 计划下次充能时间点: 新充能时间点 })\n          }\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 计划下次充能时间点 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n      // 当前层数为-1，说明未初始化实例，设置为最大层数\n      if (当前层数 <= 0) {\n        // 当前没有层数可用，需要等待充能\n        if (计划下次充能时间点 > 可以释放时间) {\n          等待CD时间 = 计划下次充能时间点 - 可以释放时间\n        }\n        if (计划下次充能时间点 <= 可以释放时间) {\n          const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n          技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能释放后更新运行数据(\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型,\n    增加CD?: number\n  ) {\n    const 实际增加CD = 增加CD || 当前技能?.技能CD || 0\n    if (技能实例?.技能运行数据) {\n      const 最大充能层数 = 当前技能?.最大充能层数 || 1\n      const 是否为充满后第一次释放 = 技能实例?.技能运行数据?.当前层数 === 最大充能层数\n      const 释放后层数 = 技能实例?.技能运行数据?.当前层数 - 1\n      const 当前时间 = this.当前时间 || 0\n      if (是否为充满后第一次释放) {\n        技能实例?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 当前时间 + 实际增加CD,\n        })\n      } else {\n        if (释放后层数 <= 0) {\n          const 原充能时间 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n          const 计算充能时间 = 原充能时间 <= 当前时间 ? 当前时间 + 实际增加CD : 原充能时间\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 计算充能时间,\n          })\n        } else {\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    DOT伤害 = false\n  ) {\n    const 对应技能 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 获取技能信息(对应技能)?.技能增益列表 || []\n\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        ?.map((item) => {\n          // DOT伤害实时部分buff吃快照，由额外增益列表传入\n          if (\n            (['灭影追风·悟', '大橙武增伤']?.includes(item?.增益名称) ||\n              item?.增益名称?.includes('披靡·悟')) &&\n            DOT伤害\n          ) {\n            return ''\n          } else {\n            return item.增益名称\n          }\n        })\n        .filter((item) => !!item) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    this.添加战斗日志({\n      日志: 来源,\n      日志类型: '造成伤害',\n      日志时间: 造成时间,\n      buff列表: 总增益列表 || [],\n      其他数据: {\n        伤害次数: 伤害次数,\n      },\n    })\n  }\n\n  增加锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}回复锐意【${锐意值}】点`,\n      日志类型: '回复锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) + 锐意值\n    this.角色状态信息.锐意 = Math.min(更新后锐意, 60)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  减少锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}消耗锐意【${锐意值}】点`,\n      日志类型: '消耗锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) - 锐意值\n    this.角色状态信息.锐意 = Math.max(更新后锐意, 0)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    // const 延迟等待 = this.当前时间 && (GCD || 等待CD) ? this.网络延迟 : 0\n    const 延迟等待 = this.当前时间 ? this.网络延迟 : 0\n\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例) {\n    this.增加技能GCD(当前技能)\n    this.增加技能CD(当前技能, 技能实例)\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(当前技能: 循环基础技能数据类型, 计划释放时间: number, 开始释放时间: number, 技能实例) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      技能释放记录结果,\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.流血?.结算流血伤害()\n    this.技能类实例集合?.截辕?.结算截辕伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    this.重置循环执行结果()\n    this.DOT结算与更新()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 释放判断结果.可以释放,\n      异常信息: 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 是否为读条技能 = !!技能实例?.读条时间?.()\n          if (是否为读条技能) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          this.技能成功开始释放(当前技能, 技能实例)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          this.清空已经消失的buff()\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.()\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(当前技能, 技能计划释放时间, 开始释放时间, 技能实例)\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n\n    return 各技能当前运行状态\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n"],"names":["技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","异常信息","测试循环","奇穴","加速等级","网络延迟","角色状态信息","锐意","当前自身buff列表","当前目标buff列表","当前时间","开始释放上一个技能的时间","战斗日志","技能释放记录","Buff和Dot数据","技能基础数据","GCD组","公共","技能类实例集合","云刀上次造成伤害时间","undefined","大橙武模拟","this","获取加速等级","加速值","根据奇穴修改buff数据","根据奇穴修改技能数据","初始化技能实例类","起手留层数","起手留客雨BUFF","重置循环执行结果","行云势一","行云势二","行云势三","决云势一","决云势二","横云势一","横云势二","停云势","留客雨","孤风破浪","灭影追风","流血","截辕","名称","对象","事件时间","新增层数","当前层数","新buff对象","Math","min","最大层数","刷新时间","添加战斗日志","日志","日志类型","日志时间","buff刷新时间","卸除层数","待判断奇穴","includes","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","Object","keys","map","key","max","当前技能","校验GCD组","技能GCD组","技能名称","forEach","实例","find","item","技能运行数据","最大充能层数","计划下次充能时间点","新层数","新充能时间点","充能","技能CD","更新技能运行数据","技能实例","GCD","等待CD时间","可以释放时间","增加CD","实际增加CD","是否为充满后第一次释放","释放后层数","原充能时间","计算充能时间","log","rest","来源","伤害次数","额外增益列表","造成时间","DOT伤害","对应技能","技能增益列表","获取技能信息","有关的buff列表","filter","当前增益数据","转化buff和增益名称","增益名称","增益消失时间","最大持续时间","总增益列表","concat","buff列表","其他数据","锐意值","更新后锐意","i","检查GCD","技能释放前检查GCD统一方法","等待CD","技能释放前检查运行数据","延迟等待","技能计划释放时间","技能预估释放时间","时间差","增加时间","待更新GCD组","技能释放后添加GCD","增加技能GCD","增加技能CD","技能释放后更新运行数据","计划释放时间","开始释放时间","技能释放记录结果","获取技能释放记录结果","push","实际释放时间","buff对象","buff应该消失时间","消失层数","自然消失失去层数","卸除buff","清空buff调用函数","结算流血伤害","结算截辕伤害","对所有有CD技能检查和充能","释放判断结果","释放","可以释放","校验结果","本轮模拟开始前","释放前初始化","技能释放前","读条时间","读条","技能GCD和CD处理","技能成功开始释放","释放校验结果","技能释放校验","是否为最后一个技能","length","技能释放异常","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","sort","a","b","各技能当前运行状态"],"sourceRoot":""}