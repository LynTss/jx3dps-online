{"version":3,"file":"static/js/main~d7740178.d9ce5f6b.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AutoSkillListContent/index.tsx","功能模块/基础设置/基础设置标题/保存方案/SaveCustomProjectModal/index.tsx","功能模块/系统工具/页面右上角工具/OCR识别装备对比/index.tsx","组件/Layout/背景图/index.ts","组件/Layout/index.tsx","组件/Layout/default.ts","组件/ValueCheckBox/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '行云势·一' && !!模拟信息?.当前自身buff列表?.['行链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·二' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 1\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·三' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 2\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '决云势·二' && !模拟信息?.当前自身buff列表?.['决链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '横云势·二' && !模拟信息?.当前自身buff列表?.['横链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.消耗锐意 && (模拟信息?.角色状态信息?.锐意 || 0) < 技能?.消耗锐意) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能运行状态?.当前层数 !== undefined ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '横留横',\n    技能序列: ['横云势·一', '留客雨', '横云势·二'],\n    color: 'blue',\n  },\n  {\n    名称: '停留',\n    技能序列: ['停云势', '留客雨'],\n    color: 'purple',\n  },\n  {\n    名称: '行行行',\n    技能序列: ['行云势·一', '行云势·二', '行云势·三'],\n    color: 'magenta',\n  },\n  {\n    名称: '灭孤',\n    技能序列: ['灭影追风', '孤风破浪'],\n    color: 'red',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Radio, Row, Space, Tag, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  开启武学助手: boolean\n  设置开启武学助手: (e: boolean) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 开启武学助手, 设置开启武学助手 } =\n    props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>傍身技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '傍身')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>对阵技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '对阵')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>绝技技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '绝技')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} style={{ width: 200 }} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={12} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n      <div className={'cycle-simulator-radio-item'}>\n        <p className={'cycle-simulator-radio-item-title'}>武学助手模式</p>\n        <Tooltip\n          title={\n            <div>\n              <p>由于现在武学助手完全没有规律</p>\n              <p>各种Bug包括但不限于</p>\n              <p>1、异常跳过技能不按顺序释放</p>\n              <p>2、相同武学助手打出不同效果</p>\n              <p>所以暂时不放开武学助手的顺序编辑功能，等待后续机制修改和研究明白再放出。</p>\n              <p style={{ fontWeight: 500 }}>\n                目前经过欧测试，武学助手自带-1段加速，开启后将增加1帧延迟\n              </p>\n            </div>\n          }\n        >\n          <Radio.Group\n            value={开启武学助手}\n            onChange={(e) => 设置开启武学助手(e?.target?.value)}\n            size='small'\n            optionType='button'\n            buttonStyle='solid'\n            // disabled\n          >\n            <Radio value={true}>开启</Radio>\n            <Radio value={false}>关闭</Radio>\n          </Radio.Group>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","/**\n * 无界武学助手技能释放序列\n */\nimport React from 'react'\n\nfunction AutoSkillListContent() {\n  return <div />\n}\n\nexport default AutoSkillListContent\n","import { Alert, Form, Input, Modal, Select, Tabs, Tooltip, message } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新全部方案数据, 更新选中的方案数据 } from '@/store/data'\nimport { DEFAULT_PROJECT_NAME } from '@/数据/常量'\nimport './index.css'\n\ninterface SaveCustomProjectModalProps {\n  自定义方案保存弹窗: boolean\n  设置自定义方案保存弹窗: (e: boolean) => void\n  保存自定义方案: (名称) => void\n}\n\n// 最多保存数量\nconst LIMIT_NUM = 10\n\nfunction SaveCustomProjectModal(props: SaveCustomProjectModalProps) {\n  const { 自定义方案保存弹窗, 设置自定义方案保存弹窗, 保存自定义方案 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义方案类型, 设置自定义方案类型] = useState<string>()\n  // 自定义方案名称保存输入\n  const [自定义方案名称输入, 设置自定义方案名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖方案名, 设置覆盖方案名] = useState<string>()\n\n  const 全部方案数据 = useAppSelector((state) => state?.data?.全部方案数据)\n  const 当前方案名称 = useAppSelector((state) => state?.data?.当前方案名称)\n\n  const dispatch = useAppDispatch()\n\n  const 全部方案列表 = useMemo(() => {\n    return Object.keys(全部方案数据).map((item) => {\n      return 全部方案数据[item]\n    })\n  }, [全部方案数据])\n\n  useEffect(() => {\n    if (自定义方案保存弹窗) {\n      if (全部方案列表?.length) {\n        设置自定义方案类型('覆盖')\n      } else {\n        设置自定义方案类型('新增')\n      }\n    } else {\n      设置自定义方案类型(undefined)\n      设置自定义方案名称输入(undefined)\n      设置覆盖方案名(undefined)\n    }\n  }, [自定义方案保存弹窗, 全部方案列表])\n\n  const 保存自定义方案前 = () => {\n    const 名称 = 自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入\n    if (\n      自定义方案类型 === '新增' &&\n      全部方案列表?.some((item) => item?.方案名称 === 自定义方案名称输入)\n    ) {\n      message.error('已存在相同的方案名称，请更换')\n      return\n    }\n    保存自定义方案(名称)\n  }\n\n  // 删除自定义方案\n  const 删除方案前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除方案【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除方案(名称)\n      },\n    })\n  }\n\n  const 删除方案 = (名称) => {\n    const 新全部方案数据 = { ...全部方案数据 }\n    delete 新全部方案数据[名称]\n\n    dispatch(更新全部方案数据(新全部方案数据))\n\n    if (当前方案名称 === 名称) {\n      更新方案(DEFAULT_PROJECT_NAME)\n    }\n  }\n\n  const 更新方案 = (e) => {\n    dispatch(更新选中的方案数据(e))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义方案'\n      okButtonProps={{\n        disabled: !(自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入),\n      }}\n      open={自定义方案保存弹窗}\n      onCancel={() => 设置自定义方案保存弹窗(false)}\n      onOk={保存自定义方案前}\n      destroyOnClose\n      width={600}\n      className={'project-custom-save-modal'}\n    >\n      <Alert\n        type='success'\n        style={{ marginBottom: 12 }}\n        message='目前方案会保存当前的【装备信息】【奇穴信息】【增益信息】【选中的循环】'\n      />\n      <Tabs\n        className={'project-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义方案类型}\n        onChange={设置自定义方案类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖方案名}\n            onChange={设置覆盖方案名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的方案'}\n          >\n            {全部方案列表.map((item) => {\n              return (\n                <Select.Option value={item.方案名称} key={item.方案名称} label={item.方案名称}>\n                  <div className={'project-custom-save-label'}>\n                    <span>{item.方案名称}</span>\n                    {item.方案名称 !== DEFAULT_PROJECT_NAME ? (\n                      <span\n                        onClick={(e) => 删除方案前提示(e, item.方案名称)}\n                        className={'project-custom-save-delete'}\n                      >\n                        删除\n                      </span>\n                    ) : null}\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane\n          tab={\n            <Tooltip\n              title={全部方案列表?.length >= LIMIT_NUM ? `最多保存${LIMIT_NUM}个自定义方案` : ''}\n            >\n              新增\n            </Tooltip>\n          }\n          key='新增'\n          disabled={全部方案列表?.length >= LIMIT_NUM}\n        >\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部方案数据?.[value]) {\n                        callback('已存在相同的方案名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义方案名称输入}\n                placeholder='请输入自定义方案名称'\n                onChange={(e) => 设置自定义方案名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  )\n}\n\nexport default SaveCustomProjectModal\n","import {\n  Button,\n  Modal,\n  ModalProps,\n  Spin,\n  message,\n  Popover,\n  Input,\n  Checkbox,\n  Table,\n  InputNumber,\n  Image,\n} from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 装备属性信息模型, 装备类型枚举 } from '@/@types/装备'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 根据装备信息获取基础属性 from '@/功能模块/基础设置/属性录入/配装器/工具函数/根据装备信息获取基础属性'\nimport { 角色默认基础属性 } from '@/工具函数/init/默认数据'\nimport { 获取最大精炼等级 } from '@/功能模块/基础设置/属性录入/配装器/功能组件/装备选择'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { v4 as uuidV4 } from 'uuid'\nimport Map from './map.json'\nimport 教程 from './教程/tip_1.png'\n\nimport './index.css'\n\nconst 高性价比常数 = 5\nconst 低性价比常数 = 3\n\nconst { 装备数据 } = 获取当前数据()\n\n// 门派套装牌子枚举\nconst 门派套装牌子枚举 = {\n  帽子: '帽',\n  衣服: '衣',\n  腰带: '腰带',\n  护腕: '护腕',\n  鞋子: '鞋',\n}\n\nconst Ocr识别装备对比: React.FC<ModalProps> = (props) => {\n  const [loading, setLoading] = useState(false)\n  const [dpsLoading, setDpsLoading] = useState(false)\n  const [initEd, setInitEd] = useState(false)\n  const [autoAction, setAutoAction] = useState(true)\n  const [inputVal, setInputVal] = useState<string | undefined>(undefined)\n  const equipData = useRef<装备属性信息模型[]>([])\n  const [matchList, setMatchList] = useState<Array<{ name: string; id: number[]; price?: number }>>(\n    []\n  )\n  const [dpsDiffMap, setDpsDiffMap] = useState<{ [key: string]: number } | undefined>(undefined)\n  const dispatch = useAppDispatch()\n\n  const 当前计算结果 = useAppSelector((state) => state?.data?.当前计算结果)\n  const 装备信息 = useAppSelector((state) => state?.data?.装备信息)\n\n  useEffect(() => {\n    if (props.open) {\n      if (!initEd) {\n        initEquip()\n      }\n    } else {\n      reset()\n    }\n  }, [props.open, initEd])\n\n  const reset = () => {\n    setLoading(false)\n    setDpsLoading(false)\n    setMatchList([])\n    setDpsDiffMap(undefined)\n    setInputVal(undefined)\n  }\n\n  // 初始化装备数据\n  const initEquip = () => {\n    const list: 装备属性信息模型[] = []\n    Object.keys(装备数据).map((装备部位) => {\n      const 当前部位数据 = 装备数据[装备部位]\n      当前部位数据.forEach((装备) => {\n        if (!装备?.装备名称?.includes('无封')) {\n          let 装备牌子映射 = ''\n          // 门派牌子转换\n          if (装备?.装备类型 === 装备类型枚举.门派套装) {\n            const 套装名称 = 装备?.装备名称?.split('·')?.[0]\n            const 部位名称 = 门派套装牌子枚举[装备部位]\n            if (套装名称 && 部位名称 && 装备?.所属门派) {\n              装备牌子映射 = `${套装名称}${部位名称}·${装备?.所属门派}`\n            }\n          }\n\n          list.push({ ...装备, 装备部位, 装备牌子映射 } as any)\n        }\n      })\n    })\n    equipData.current = list\n    setInitEd(true)\n  }\n\n  // 解析装备列表\n  const handleGetEquip = (listStr) => {\n    if (!listStr?.length) {\n      reset()\n      return\n    }\n    const regex = /\\[([^\\]]+)\\]/g\n    let match: any\n    const list: string[] = []\n    // 循环匹配所有结果\n    while ((match = regex.exec(listStr)) !== null) {\n      if (!Map.过滤掉落列表?.includes(match[1])) {\n        // 将匹配到的文本添加到数组中\n        list.push(match[1])\n      }\n    }\n    if (list?.length) {\n      setMatchList(\n        list.map((item) => {\n          return {\n            name: item,\n            id: uuidV4(),\n          }\n        })\n      )\n      getDpsDiff(list)\n    } else {\n      reset()\n      message.error('未解析到装备')\n      return\n    }\n  }\n\n  // 获取dps对比列表\n  const getDpsDiff = (list) => {\n    const obj: { [key: string]: number } = {}\n    setLoading(false)\n    setDpsLoading(true)\n    list.forEach((item) => {\n      const afterDpsDiff = getEquipDiffDps(item)\n      if (afterDpsDiff !== undefined) {\n        obj[item] = afterDpsDiff\n      }\n    })\n    setDpsLoading(false)\n    setDpsDiffMap(obj)\n  }\n\n  // 获取装备dps差\n  const getEquipDiffDps = (name): number | undefined => {\n    const 找到对应装备数据 = equipData?.current?.find(\n      (item: any) => item?.装备名称 === name || item?.装备牌子映射 === name\n    )\n    if (找到对应装备数据 && !name?.includes('无封')) {\n      const 被替换的装备 = 装备信息.装备列表.find(\n        (item) => item.装备部位 === 找到对应装备数据?.装备部位\n      )\n      const 装备最大精炼等级 = 获取最大精炼等级(找到对应装备数据)\n\n      const 新装备列表 = 装备信息.装备列表.map((item) => {\n        if (item.装备部位 !== 找到对应装备数据?.装备部位) {\n          return item\n        } else {\n          return {\n            id: 找到对应装备数据.id,\n            装备名称: 找到对应装备数据.装备名称,\n            装备部位: 找到对应装备数据?.装备部位,\n            当前精炼等级: 装备最大精炼等级,\n            镶嵌孔数组: 找到对应装备数据?.镶嵌孔数组?.map((a, index) => {\n              return {\n                ...a,\n                镶嵌宝石等级: 被替换的装备?.镶嵌孔数组?.[index]?.镶嵌宝石等级 || 8,\n              }\n            }),\n            附魔: 被替换的装备?.附魔,\n          } as any\n        }\n      })\n\n      const 更新后装备信息 = 根据装备信息获取基础属性({\n        ...装备信息,\n        装备基础属性: { ...角色默认基础属性 },\n        装备列表: 新装备列表,\n      })\n\n      const { 秒伤: 更新后秒伤 } = dispatch(秒伤计算({ 更新装备信息: 更新后装备信息 }))\n      return 更新后秒伤 - 当前计算结果?.秒伤\n    } else {\n      return undefined\n    }\n  }\n\n  // 对比结果显示组件\n  const DiffDpsRes = ({ data = 0 }) => {\n    return (\n      <div\n        className={`ocr-diff-dps-res-number ${\n          data > 0 ? 'ocr-diff-dps-res-up' : data < 0 ? 'ocr-diff-dps-res-down' : ''\n        }`}\n      >\n        {data > 0 ? `+` : ''}\n        {data == 0 || data === undefined ? '-' : data}\n      </div>\n    )\n  }\n\n  // 根据秒伤提升排序\n  const sortMatchList = useMemo(() => {\n    const newList = [...matchList]\n    newList.sort((a, b) => {\n      if (dpsDiffMap?.[a?.name] === undefined) {\n        return 1\n      }\n      if (dpsDiffMap?.[b?.name] === undefined) {\n        return -1\n      }\n      return (dpsDiffMap?.[b?.name] || 0) - (dpsDiffMap?.[a?.name] || 0)\n    })\n    return newList.map((item) => {\n      const dpsNum = dpsDiffMap?.[item?.name] || 0\n      return {\n        ...item,\n        dps: dpsNum,\n        dpsPrice: dpsNum > 0 && item.price ? (dpsNum / +item.price / 1000).toFixed(2) : '-',\n      }\n    })\n  }, [matchList, dpsDiffMap])\n\n  return (\n    <Modal\n      className={'ocr-modal'}\n      width={1024}\n      maskClosable={false}\n      title={\n        <div className={'ocr-modal-header'}>\n          <h1 className={'ocr-modal-title'}>\n            识别装备对比\n            <Popover\n              title='使用须知'\n              content={\n                <div>\n                  <h1 className={'ocr-modal-tip-title'}>使用注意</h1>\n                  <p>在使用前请在配装器内提前录入您的配装，以便于后续的对比</p>\n                  <p>\n                    您可以打本时后台同步开启本网页弹窗。在打本结束后复制掉落列表，切换到本网页进行粘贴，以进行快速识别\n                  </p>\n                  <p>\n                    该功能本质上是配装器内的智能对比功能，仅作为快速识别掉落列表中多个装备的情况使用\n                    <span style={{ color: '#F34242' }}>仅供娱乐</span>\n                  </p>\n                  <h1 className={'ocr-modal-tip-title'}>如何获取掉落列表</h1>\n                  <p>1、在掉落列表左上角的菜单中国呢点击“导出所有物品”</p>\n                  <p>2、在团队中复制发送的掉落列表，到浏览器粘贴</p>\n                  <p>3、由于是插件自动发到团队的，可能会有点显眼包</p>\n                  <Image src={教程} height={100} />\n                </div>\n              }\n            >\n              <span className={'ocr-modal-tip-text'}>\n                使用须知\n                <QuestionCircleOutlined className={'ocr-modal-tip-icon'} />\n              </span>\n            </Popover>\n          </h1>\n          <div className={'ocr-modal-header-operates'}>\n            <Checkbox checked={autoAction} onChange={(e) => setAutoAction(e?.target?.checked)}>\n              输入后自动计算\n            </Checkbox>\n            {!autoAction ? (\n              <Button\n                loading={loading}\n                type='primary'\n                onClick={() => handleGetEquip(inputVal)}\n                style={{ marginLeft: 12 }}\n              >\n                开始解析\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      }\n      centered\n      {...props}\n      footer={false}\n    >\n      <Spin\n        spinning={loading || dpsLoading}\n        className={'ocr-spnning'}\n        tip={dpsLoading ? '计算装秒伤中，请稍后...' : '解析装备中，请稍后...'}\n      >\n        <Input.TextArea\n          className={'ocr-upload-text-area'}\n          value={inputVal}\n          placeholder='请粘贴你的掉落列表，如不知道如何获取掉落列表，请查看使用须知'\n          maxLength={500}\n          onChange={(e) => {\n            if (autoAction) {\n              handleGetEquip(e?.target?.value)\n            }\n            setInputVal(e?.target?.value)\n          }}\n        />\n        {sortMatchList?.length > 0 ? (\n          <Table\n            dataSource={sortMatchList}\n            rowKey={'id'}\n            size='small'\n            className={'dps-price-table'}\n            columns={[\n              {\n                title: '掉落名称',\n                dataIndex: 'name',\n                render: (_, row) => {\n                  return <span className={`${row.dps > 0 ? 'dps-diff-name-up' : ''}`}>{_}</span>\n                },\n              },\n              {\n                title: '秒伤提升',\n                dataIndex: 'dps',\n                sorter: (a: any, b: any) => {\n                  return (b.dps || 0) - (a.dps || 0)\n                },\n                render: (_) => {\n                  return _ !== undefined ? <DiffDpsRes data={_} /> : '-'\n                },\n              },\n              {\n                title: '价格',\n                dataIndex: 'price',\n                render: (_, row) => {\n                  const setNewPrice = (v) => {\n                    const newList = matchList.map((item) => {\n                      if (item.id === row.id) {\n                        return {\n                          ...item,\n                          price: v,\n                        }\n                      } else {\n                        return item\n                      }\n                    })\n                    setMatchList(newList)\n                  }\n                  return row.dps > 0 && row.dps !== undefined ? (\n                    <InputNumber\n                      placeholder={'输入当前拍价以计算性价比'}\n                      className={'dps-price-input-width'}\n                      value={_}\n                      onChange={(e) => setNewPrice(e)}\n                      addonAfter='砖'\n                    />\n                  ) : (\n                    '-'\n                  )\n                },\n              },\n              {\n                title: (\n                  <Popover\n                    title={'性价比解释说明'}\n                    content={\n                      <div>\n                        <p>根据秒伤和拍价计算的性价比，仅供参考。理性消费！</p>\n                        <p>计算公式：秒伤提升/价格*1000</p>\n                        <p>红色为低性价比，阈值暂定 3</p>\n                        <p>绿色为高性价比，阈值暂定 5</p>\n                      </div>\n                    }\n                  >\n                    性价比\n                  </Popover>\n                ),\n                width: 120,\n                dataIndex: 'dpsPrice',\n                sorter: (a: any, b: any) => b.dpsPrice - a.dpsPrice,\n                render: (v) => {\n                  return (\n                    <span\n                      className={`${\n                        v >= 高性价比常数\n                          ? 'dps-hight-dps-price'\n                          : v <= 低性价比常数\n                          ? 'dps-low-dps-price'\n                          : ''\n                      } dps-price-number`}\n                    >\n                      {v}\n                    </span>\n                  )\n                },\n              },\n            ]}\n          />\n        ) : null}\n      </Spin>\n    </Modal>\n  )\n}\n\nexport default React.memo(Ocr识别装备对比)\n","import ImgBg_1 from './1.jpeg'\n// import ImgBg_2 from './2.jpeg'\n\n// export default [ImgBg_1, ImgBg_2]\nexport default [ImgBg_1]\n","import React from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { hexToRgbaToDark } from '@/工具函数/help'\n\nimport 全局背景 from './背景图'\nimport { 默认系统渐变色 } from './default'\nimport './index.css'\n\nconst 系统配置 = 获取当前数据()?.系统配置 || {}\n\nconst 背景图 = (系统配置.背景图 || []).concat(全局背景)\nconst 背景色渐变 = 系统配置.背景色渐变 || 默认系统渐变色(系统配置.主题色)\n\ninterface LayoutProps {\n  children: any\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const { children } = props\n  const 背景图片显示状态 = useAppSelector((state) => state?.system?.背景图片显示状态)\n\n  // 丛长度为N的数组中随机取一个值\n  function getRandomFromArray(arr, n) {\n    const randomIndex = Math.floor(Math.random() * n)\n    return arr[randomIndex]\n  }\n\n  return (\n    <div className='layout'>\n      <div\n        className='layout-wrapper'\n        style={{\n          backgroundImage: 背景色渐变,\n        }}\n      >\n        {children}\n      </div>\n      {背景图片显示状态 ? (\n        <img className='layout-bg' src={getRandomFromArray(背景图, 背景图?.length)} alt='' />\n      ) : (\n        <div\n          className={'layout-bg-color'}\n          style={{ backgroundColor: `${hexToRgbaToDark(系统配置.主题色, '1', 225)}` }}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Layout\n","import { hexToRgbaToDark } from '@/工具函数/help'\n\nexport const 默认系统渐变色 = (主题色) => {\n  const color1 = hexToRgbaToDark(主题色, '0.3', 35)\n  const color2 = hexToRgbaToDark(主题色, '0.05', 25)\n  return `linear-gradient(to right, ${color1} 20%, ${color2} 100%)`\n}\n","import { Checkbox } from 'antd'\nimport React from 'react'\n\nfunction ValueCheckBox(props) {\n  const { value, onChange, ...options } = props\n  const beforeOnChange = (e) => {\n    onChange && onChange(e?.target?.checked ? 1 : 0)\n  }\n  return <Checkbox checked={!!value} onChange={beforeOnChange} {...options} />\n}\n\nexport default ValueCheckBox\n"],"names":["props","技能","模拟信息","onClick","className","rest","释放等待CD","计算可以释放时技能CD","技能运行状态","当前各技能运行状态","技能名称","异常信息","useMemo","禁用信息","当前自身buff列表","当前层数","是否禁用","异常描述","ERROR_ACTION","信息","消耗锐意","角色状态信息","锐意","角标数字","cls","classNames","title","count","offset","src","图标","undefined","技能原始名称","GCD","检查GCD","当前GCD组","可以释放时间","当前时间","技能CD","计划下次充能时间点","Math","round","每秒郭氏帧","GCD组","校验GCD组","技能GCD组","快捷添加数据","名称","技能序列","color","新增循环技能","批量新增循环","处理循环结果对象","开启武学助手","设置开启武学助手","size","wrap","技能基础数据","filter","item","创建循环不可选","技能类型","map","完整循环","style","width","gutter","span","数据","技能原始数据","find","a","length","批量新增循环技能","fontWeight","value","onChange","e","target","optionType","buttonStyle","自定义方案保存弹窗","设置自定义方案保存弹窗","保存自定义方案","useState","自定义方案类型","设置自定义方案类型","自定义方案名称输入","设置自定义方案名称输入","覆盖方案名","设置覆盖方案名","全部方案数据","useAppSelector","state","data","当前方案名称","dispatch","useAppDispatch","全部方案列表","Object","keys","useEffect","删除方案","新全部方案数据","更新全部方案数据","更新方案","DEFAULT_PROJECT_NAME","更新选中的方案数据","centered","okButtonProps","disabled","open","onCancel","onOk","some","方案名称","message","destroyOnClose","type","marginBottom","activeKey","tab","optionLabelProp","placeholder","label","stopPropagation","preventDefault","Modal","content","okText","删除方案前提示","rules","validator","_","callback","装备数据","获取当前数据","门派套装牌子枚举","帽子","衣服","腰带","护腕","鞋子","Ocr识别装备对比","loading","setLoading","dpsLoading","setDpsLoading","initEd","setInitEd","autoAction","setAutoAction","inputVal","setInputVal","equipData","useRef","matchList","setMatchList","dpsDiffMap","setDpsDiffMap","当前计算结果","装备信息","initEquip","reset","list","装备部位","forEach","装备","装备名称","includes","装备牌子映射","装备类型","装备类型枚举","套装名称","split","部位名称","所属门派","push","current","handleGetEquip","listStr","match","regex","exec","Map","name","id","uuidV4","getDpsDiff","obj","afterDpsDiff","getEquipDiffDps","找到对应装备数据","被替换的装备","装备列表","装备最大精炼等级","获取最大精炼等级","新装备列表","当前精炼等级","镶嵌孔数组","index","镶嵌宝石等级","附魔","更新后装备信息","根据装备信息获取基础属性","装备基础属性","角色默认基础属性","秒伤计算","更新装备信息","秒伤","DiffDpsRes","sortMatchList","newList","sort","b","dpsNum","dps","dpsPrice","price","toFixed","maskClosable","教程","height","QuestionCircleOutlined","checked","marginLeft","footer","spinning","tip","maxLength","dataSource","rowKey","columns","dataIndex","render","row","sorter","v","setNewPrice","addonAfter","React","系统配置","背景图","concat","全局背景","背景色渐变","主题色","color1","hexToRgbaToDark","color2","默认系统渐变色","arr","n","children","背景图片显示状态","system","backgroundImage","floor","random","alt","backgroundColor","options"],"sourceRoot":""}