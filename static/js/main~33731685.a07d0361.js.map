{"version":3,"file":"static/js/main~33731685.a07d0361.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/留客雨/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势三/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/通用DOT类.ts"],"sourcesContent":["// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前截辕层数 = this.模拟循环.当前目标buff列表?.['截辕']?.当前层数 || 0\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(当前截辕层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n\n      if (生效时间) {\n        this.触发伤害行为('截辕·悟(DOT)', 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前流血层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 3\n    const 新流血层数 = Math.min(当前流血层数 + 1, 流血最大层数)\n\n    this.模拟循环.添加buff?.({\n      名称: '流血',\n      对象: '目标',\n      新增层数: 1,\n    })\n    const 数据 = this.获取当前DOT数据('流血')\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·悟·一',\n  2: '流血·悟·二',\n  3: '流血·悟·三',\n}\n","/**\n * 定义模拟循环类\n */\n\nimport { 角色状态信息类型 } from '../simulator/type'\nimport 循环主类 from './main'\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  角色状态信息?: 角色状态信息类型\n  // 当前自身buff列表?: Buff枚举\n  // 当前目标buff列表?: Buff枚举\n  起手留层数: number\n  大橙武模拟: boolean\n}\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","// import 循环主类 from '../main'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 决云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 决链层数 = this.模拟循环.当前自身buff列表?.['决链']?.当前层数\n\n    if (!决链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n    const buff列表: string[] = []\n    if (当前流血层数 > 0) {\n      for (let i = 0; i < 当前流血层数; i++) {\n        buff列表.push('流血增伤')\n      }\n    }\n    this.触发伤害行为('决云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '决链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势二\n\nexport const 停云势类型 = typeof 决云势二\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 横云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '横云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据(横云势一.技能数据)\n  }\n\n  减少调息时间(减少时间) {\n    const 层数 = this.技能运行数据.当前层数\n    const 计划下次充能时间点 = this.技能运行数据.计划下次充能时间点 || 0\n    // 没有层数才需要处理\n    if (!层数 && 计划下次充能时间点) {\n      const 减少后充能节点 = Math.max(计划下次充能时间点 - 每秒郭氏帧 * 减少时间, 0)\n      if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n        this.技能运行数据 = {\n          当前层数: 1,\n        }\n      } else {\n        this.技能运行数据 = {\n          ...this.技能运行数据,\n          计划下次充能时间点: 减少后充能节点,\n        }\n      }\n      this.模拟循环.添加战斗日志?.({\n        日志: `行3触发满锐减CD，横云势释放CD时间变为${减少后充能节点}`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '横云一式', 对象: '自身' })\n  }\n\n  造成伤害() {\n    this.触发伤害行为('横云势·悟·一')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD(2)\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '横云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '横链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势一\n\nexport const 停云势类型 = typeof 横云势一\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 留客雨 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '留客雨')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据(留客雨.技能数据)\n  }\n\n  减少调息时间(减少时间) {\n    const 层数 = this.技能运行数据.当前层数\n    const 计划下次充能时间点 = this.技能运行数据.计划下次充能时间点 || 0\n    // 没有层数才需要处理\n    if (!层数 && 计划下次充能时间点) {\n      const 减少后充能节点 = Math.max(计划下次充能时间点 - 每秒郭氏帧 * 减少时间, 0)\n      if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n        this.技能运行数据 = {\n          当前层数: 1,\n        }\n      } else {\n        this.技能运行数据 = {\n          ...this.技能运行数据,\n          计划下次充能时间点: 减少后充能节点,\n        }\n      }\n      this.模拟循环.添加战斗日志?.({\n        日志: `行3触发满锐减CD，留客雨释放CD时间变为${减少后充能节点}`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n    const buff列表: string[] = []\n    if (当前流血层数 > 0) {\n      buff列表.push('流血增伤')\n    }\n    this.触发伤害行为('留客雨·悟', 1, buff列表)\n  }\n\n  释放后() {\n    this.释放技能回复锐意(30, '留客雨·悟')\n    this.减少GCD()\n    this.保存释放记录()\n    this.减少绝技技能CD(1)\n    this.对阵招式橙武减少绝技技能CD()\n  }\n\n  减少GCD() {\n    if (this.模拟循环?.GCD组?.公共) {\n      // 这里给没有GCD的技能添加1帧的按键延迟，因为人的手速没有那么快\n      this.模拟循环.GCD组.公共 = 0\n      this.模拟循环.添加战斗日志?.({\n        日志: `留客雨命中减重置GCD`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n}\n\nexport default 留客雨\n\nexport const 留客雨类型 = typeof 留客雨\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势一 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n\n    if (行链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·一', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·一')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势一\n\nexport const 行云势一类型 = typeof 行云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势三 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 2) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·三', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n\n    if (当前是否满锐) {\n      this.减少对阵技能CD()\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·三')\n    this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n  }\n}\n\nexport default 行云势三\n\nexport const 行云势一类型 = typeof 行云势三\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    当前层数: -999,\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据(技能) {\n    if (this.技能运行数据.当前层数 === -999) {\n      this.技能运行数据.当前层数 = 技能?.最大充能层数 || 1\n    }\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import { 获取实际帧数 } from '../../../山海心诀/utils'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return 结算数组\n    }\n    return []\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    const 实际初次频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.初次频率 || DOT数据.伤害频率, 循环加速值)\n      : DOT数据.初次频率 || DOT数据.伤害频率\n\n    const 实际伤害频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.伤害频率, 循环加速值)\n      : DOT数据.伤害频率\n\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    const 快照buff列表: string[] = []\n\n    if (this.模拟循环?.当前自身buff列表?.['灭影追风·悟']?.当前层数) {\n      快照buff列表.push('灭影追风·悟')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['大橙武增伤']?.当前层数) {\n      快照buff列表.push('大橙武增伤')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数) {\n      const 披靡层数 = this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数\n      快照buff列表.push(`披靡·悟·${披靡层数}`)\n    }\n\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数, 快照buff列表 }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n          快照buff列表,\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n          快照buff列表,\n        })\n      }\n    }\n\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n  }\n}\n\nexport default 通用DOT类\n"],"names":["截辕","模拟循环","当前截辕层数","this","当前目标buff列表","当前层数","添加buff","名称","对象","新增层数","数据","获取当前DOT数据","更新待生效数据","结算并更新运行数据","forEach","生效时间","快照buff列表","触发伤害行为","通用DOT类","流血","当前流血层数","流血最大层数","Buff和Dot数据","最大层数","新流血层数","Math","min","层数","流血伤害名称枚举","props","模拟实例","循环主类","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","最终日志","战斗日志","当前自身buff列表","角色状态信息","当前时间","循环执行结果","循环异常信息","技能释放记录","当前GCD组","GCD组","技能基础数据","决云势二","可以释放","异常信息","ERROR_ACTION","buff列表","i","push","保存释放记录","对阵招式橙武减少绝技技能CD","卸除buff","本次释放记录","重要buff列表","获取当前重要buff列表","技能统一类","横云势一","初始化技能运行数据","技能数据","减少时间","技能运行数据","计划下次充能时间点","减少后充能节点","max","每秒郭氏帧","添加战斗日志","日志","日志类型","减少绝技技能CD","技能类实例集合","获得和刷新流血","锐意","触发消耗锐意","造成buff数据","获取施加重要buff信息","undefined","有CD技能通用类","循环模拟技能基础数据","item","技能名称","留客雨","释放技能回复锐意","减少GCD","公共","行云势一","当前是否满锐","行云势三","减少对阵技能CD","卸除层数","技能","最大充能层数","新数据","DOT运行数据","待生效数据","DOT名称","length","结算数组","未结算数组","更新DOT运行数据","DOT数据","DOT是否吃加速","是否吃加速","循环加速值","根据加速等级获取虚拟加速值","加速等级","实际初次频率","获取实际帧数","初次频率","伤害频率","实际伤害频率","披靡层数","map","待添加次数","最大作用次数","原最后一次生效时间"],"sourceRoot":""}