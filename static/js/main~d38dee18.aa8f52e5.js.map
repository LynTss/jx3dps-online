{"version":3,"file":"static/js/main~d38dee18.aa8f52e5.js","mappings":"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","sources":["心法模块/心法/太玄经/技能增益/三星临.ts","心法模块/心法/太玄经/技能增益/通用增益/门派套装增益.ts","心法模块/统一数据/快照增益.ts","计算模块/统一工具函数/增益计算函数.ts","计算模块/非郭氏计算/非郭氏技能总伤害计算.ts"],"sourcesContent":["import { 技能增益列表类型 } from '@/@types/技能'\nimport { 属性类型 } from '@/@types/属性'\nimport 通用增益 from './通用增益/通用增益'\nimport 大橙武技能增益 from './通用增益/大橙武技能增益'\n\nconst 三星临增益: 技能增益列表类型[] = [\n  ...通用增益,\n  ...大橙武技能增益,\n  {\n    增益名称: '正夏',\n    增益所在位置: '奇穴',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.通用增伤, 值: 102 / 1024 }],\n    // 秘籍ID 3010\n  },\n  {\n    增益名称: '明心',\n    增益所在位置: '奇穴',\n    增益类型: '全局启用',\n    增益集合: [\n      { 属性: 属性类型.内功会心百分比, 值: 0.1 },\n      { 属性: 属性类型.郭氏内功会心效果等级, 值: 102 },\n    ],\n  },\n  {\n    增益名称: '5%伤害',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.通用增伤, 值: 51 / 1024 }],\n  },\n  {\n    增益名称: '4%伤害',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.通用增伤, 值: 41 / 1024 }],\n  },\n  {\n    增益名称: '3%伤害',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.通用增伤, 值: 31 / 1024 }],\n  },\n  {\n    增益名称: '4%会心',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.内功会心百分比, 值: 0.04 }],\n  },\n  {\n    增益名称: '3%会心',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.内功会心百分比, 值: 0.03 }],\n  },\n  {\n    增益名称: '2%会心',\n    增益所在位置: '秘籍',\n    增益类型: '全局启用',\n    增益集合: [{ 属性: 属性类型.内功会心百分比, 值: 0.02 }],\n  },\n]\n\nexport default 三星临增益\n","import { 属性类型 } from '@/@types/属性'\nimport { 技能增益列表类型 } from '@/@types/技能'\n\nconst 门派套装增益: 技能增益列表类型[] = [\n  // 4件套\n  {\n    增益名称: '套装10%_1',\n    增益所在位置: '装备',\n    增益启用: false,\n    增益类型: '全局启用',\n    增益集合: [\n      {\n        属性: 属性类型.通用增伤,\n        值: 102 / 1024,\n      },\n    ],\n  },\n  // 2件套\n  {\n    增益名称: '套装10%_2',\n    增益所在位置: '装备',\n    增益启用: false,\n    增益类型: '全局启用',\n    增益集合: [\n      {\n        属性: 属性类型.通用增伤,\n        值: 102 / 1024,\n      },\n    ],\n  },\n]\n\nexport default 门派套装增益\n","import { 属性类型 } from '@/@types/属性'\nimport { 技能增益列表类型 } from '@/@types/技能'\n\nexport const 获取快照增益 = (功法) => {\n  const 水特效 = 功法 === '外功' ? 98 * 10 : 117 * 10\n  const 水特效_英雄 = 功法 === '外功' ? 111 * 10 : 134 * 10\n\n  const 快照增益: 技能增益列表类型[] = [\n    {\n      增益名称: '水特效_快照',\n      增益所在位置: '装备',\n      依赖装备增益: '水特效武器',\n      快照增益: true,\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.全基础攻击, 值: 水特效 }],\n    },\n    {\n      增益名称: '水特效_英雄_快照',\n      增益所在位置: '装备',\n      依赖装备增益: '水特效武器_英雄',\n      快照增益: true,\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.全基础攻击, 值: 水特效_英雄 }],\n    },\n    {\n      增益名称: '风特效_快照',\n      增益所在位置: '装备',\n      依赖装备增益: '风特效腰坠',\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.全破防等级, 值: 9291 }],\n    },\n    {\n      增益名称: '风特效_英雄_快照',\n      增益所在位置: '装备',\n      依赖装备增益: '风特效腰坠_英雄',\n      快照增益: true,\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.全破防等级, 值: 10573 }],\n    },\n    {\n      增益名称: '大附魔_伤腰_快照',\n      增益所在位置: '装备',\n      依赖装备增益: '大附魔_伤腰',\n      快照增益: true,\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.通用增伤, 值: 10 / 1024 }],\n    },\n    {\n      增益名称: '大附魔_伤腰_快照·2',\n      增益所在位置: '装备',\n      依赖装备增益: '大附魔_伤腰',\n      快照增益: true,\n      增益类型: '部分启用',\n      增益集合: [{ 属性: 属性类型.通用增伤, 值: 51 / 1024 }],\n    },\n  ]\n  return 快照增益\n}\n\nexport default 获取快照增益\n","import { 增益选项数据类型 } from '@/@types/团队增益'\nimport { 属性加成, 属性类型 } from '@/@types/属性'\nimport { 循环技能详情, 技能增益列表数据 } from '@/@types/循环'\nimport { 技能基础数据模型, 技能计算增益数据列表 } from '@/@types/技能'\nimport { 装备信息数据类型, 装备增益类型 } from '@/@types/装备'\nimport { 最终计算属性类型 } from '@/@types/计算'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\n\nconst { 装备增益数据, 小药小吃, 团队增益, 阵眼, 覆盖率 } = 获取当前数据()\n\n// 统计增益，获取增益的集合\nexport const 获取装备增益 = (装备信息: 装备信息数据类型, 快照计算): 属性加成[] => {\n  let 总增益集合: 属性加成[] = []\n  // 如果是快照计算，不计算套装、水特效、风腰椎的加成。放到最后的增益数量里计算\n  if (!快照计算) {\n    if (装备信息?.装备增益?.套装会心会效) {\n      // 判断套装覆盖率\n      const 套装覆盖率 = 覆盖率?.套装会心会效 || 0.8\n      const 装备增益覆盖率格式化 = 装备增益数据.套装会心会效.map((增益) => {\n        return {\n          ...增益,\n          值: (增益?.值 || 0) * 套装覆盖率,\n        }\n      })\n      // 偷懒覆盖率测试80%左右\n      总增益集合 = 总增益集合.concat(装备增益覆盖率格式化)\n    }\n    if (装备信息?.装备增益?.风特效腰坠) {\n      // 判断套装覆盖率\n      const 套装覆盖率 = 覆盖率?.风特效腰坠 || 0.1\n      const 装备增益覆盖率格式化 = 装备增益数据.风特效腰坠.map((增益) => {\n        return {\n          ...增益,\n          值: (增益?.值 || 0) * 套装覆盖率,\n        }\n      })\n      // 偷懒覆盖率测试80%左右\n      总增益集合 = 总增益集合.concat(装备增益覆盖率格式化)\n    }\n    if (装备信息?.装备增益?.风特效腰坠_英雄) {\n      // 判断套装覆盖率\n      const 套装覆盖率 = 覆盖率?.风特效腰坠 || 0.1\n      const 装备增益覆盖率格式化 = 装备增益数据.风特效腰坠_英雄.map((增益) => {\n        return {\n          ...增益,\n          值: (增益?.值 || 0) * 套装覆盖率,\n        }\n      })\n      // 偷懒覆盖率测试80%左右\n      总增益集合 = 总增益集合.concat(装备增益覆盖率格式化)\n    }\n    if (装备信息?.装备增益?.水特效武器) {\n      总增益集合 = 总增益集合.concat(装备增益数据.水特效武器)\n    }\n    if (装备信息?.装备增益?.水特效武器_英雄) {\n      总增益集合 = 总增益集合.concat(装备增益数据.水特效武器_英雄)\n    }\n    if (装备信息?.装备增益?.大附魔_伤腰) {\n      总增益集合 = 总增益集合.concat(装备增益数据.大附魔_伤腰)\n    }\n  }\n  if (装备信息?.装备增益?.切糕会心) {\n    总增益集合 = 总增益集合.concat(装备增益数据.切糕会心)\n  }\n  if (装备信息?.装备增益?.切糕无双) {\n    总增益集合 = 总增益集合.concat(装备增益数据.切糕无双)\n  }\n  if (装备信息?.装备增益?.切糕会心_英雄) {\n    总增益集合 = 总增益集合.concat(装备增益数据.切糕会心_英雄)\n  }\n  if (装备信息?.装备增益?.切糕无双_英雄) {\n    总增益集合 = 总增益集合.concat(装备增益数据.切糕无双_英雄)\n  }\n  if (装备信息?.装备增益?.冬至套装) {\n    总增益集合 = 总增益集合.concat(装备增益数据.冬至套装)\n  }\n  // 大附魔增益\n  if (装备信息?.装备增益?.大附魔_伤帽) {\n    总增益集合 = 总增益集合.concat(装备增益数据.大附魔_伤帽)\n  }\n  if (装备信息?.装备增益?.大附魔_伤衣) {\n    总增益集合 = 总增益集合.concat(装备增益数据.大附魔_伤衣)\n  }\n  if (装备信息?.装备增益?.龙门飞剑武器) {\n    总增益集合 = 总增益集合.concat(装备增益数据.龙门飞剑武器)\n  }\n\n  return 总增益集合\n}\n\n// 根据增益信息修改最终循环内容\nexport const 根据增益修改最终循环 = (\n  装备信息: 装备信息数据类型,\n  计算循环,\n  战斗时间\n): 循环技能详情[] => {\n  let 最终循环: 循环技能详情[] = [...计算循环]\n  if (装备信息?.装备增益?.大附魔_伤腕) {\n    if (!最终循环?.some((item) => item.技能名称 === '昆吾·弦刃')) {\n      最终循环.push({\n        技能名称: '昆吾·弦刃',\n        技能数量: Math.floor(战斗时间 / 15),\n      })\n    }\n  } else {\n    最终循环 = 最终循环.filter((item) => item.技能名称 !== '昆吾·弦刃')\n  }\n\n  if (装备信息?.装备增益?.大附魔_伤鞋) {\n    if (!最终循环?.some((item) => item.技能名称 === '刃凌')) {\n      最终循环.push({\n        技能名称: '刃凌',\n        技能数量: Math.floor(战斗时间 / 10),\n      })\n    }\n  } else {\n    最终循环 = 最终循环.filter((item) => item.技能名称 !== '刃凌')\n  }\n\n  if (装备信息?.装备增益?.龙门飞剑武器) {\n    最终循环.push({\n      技能名称: '剑风',\n      技能数量: Math.floor((战斗时间 * 6) / 30),\n    })\n  }\n\n  return 最终循环\n}\n\n// 对增益进行排序\nexport const 增益排序 = (list: 属性加成[]): 属性加成[] => {\n  const SortKeyList = Object.keys(属性类型)\n  const newList = [...list]\n\n  newList.sort((a, b) => {\n    return SortKeyList.indexOf(a.属性) - SortKeyList.indexOf(b.属性)\n  })\n\n  return newList.filter((item) => !!item)\n}\n\n/**\n * 计算增益选项带来的增益。获取增益集合\n */\nexport const 根据增益选项获取增益集合 = (\n  增益数据: 增益选项数据类型,\n  过滤阵眼触发类增益?: boolean\n): 属性加成[] => {\n  let 增益集合: 属性加成[] = []\n\n  if (增益数据?.小吃) {\n    const 小吃数据集合 = 小药小吃.filter((item) => 增益数据?.小吃?.includes(item.小吃名称))\n    if (小吃数据集合?.length) {\n      小吃数据集合.forEach((a) => {\n        if (a?.增益集合?.length) {\n          增益集合 = 增益集合.concat(a?.增益集合)\n        }\n      })\n    }\n  }\n\n  if (增益数据?.团队增益?.length) {\n    const 团队增益集合 = 增益数据?.团队增益\n      ?.filter((item) => item.启用)\n      .map((item) => {\n        const data: any = 团队增益.find((a) => a.增益名称 === item.增益名称)\n        return {\n          ...data,\n          增益集合: data?.增益集合.map((c) => {\n            return {\n              ...c,\n              值: (c?.值 * item?.层数 * item?.覆盖率) / 100,\n            }\n          }),\n        }\n      })\n\n    if (团队增益集合?.length) {\n      团队增益集合.forEach((item) => {\n        增益集合 = 增益集合.concat(item.增益集合)\n      })\n    }\n  }\n\n  if (增益数据?.阵眼) {\n    const 增益阵眼 = 阵眼.find((item) => item.阵眼名称 === 增益数据?.阵眼)\n    if (增益阵眼 && 增益阵眼?.增益集合?.length) {\n      if (过滤阵眼触发类增益) {\n        增益集合 = 增益集合.concat(增益阵眼.增益集合.filter((增益) => !增益?.触发型增益))\n      } else {\n        增益集合 = 增益集合.concat(增益阵眼.增益集合)\n      }\n    }\n  }\n\n  return 增益集合\n}\n\n/**\n * @name 该技能数量下同时计算的多个增益的增益集合\n * getGainList\n */\nexport const 计算该技能下多个增益的增益集合 = (\n  增益: 技能增益列表数据,\n  当前技能属性: 技能基础数据模型,\n  装备增益: 装备增益类型,\n  快照计算: boolean\n) => {\n  // 将该数量下同时计算的多个增益转为数组\n  const 该技能增益列表 = 增益.增益名称.split(',')\n\n  // 该技能数量下同时计算的多个增益的增益集合\n  let 增益集合列表: 技能计算增益数据列表[] = []\n\n  该技能增益列表.forEach((i) => {\n    const 该技能增益 = (当前技能属性?.技能增益列表 || [])?.find((item) => {\n      if (item.增益名称 === i && item.增益类型 === '部分启用') {\n        if (item?.增益所在位置 === '奇穴') {\n          return item?.增益启用\n        } else if (item?.依赖装备增益) {\n          if (item?.快照增益) {\n            return !!装备增益?.[item?.依赖装备增益] && 快照计算\n          } else {\n            return !!装备增益?.[item?.依赖装备增益]\n          }\n        } else {\n          return true\n        }\n      }\n      return false\n      // const 快照启用状态 = item?.快照增益 ? 快照计算 : true\n      // // 如果该增益来源于技能，则不需要判断“增益启用”状态\n      // const 判断装备增益启用状态 = item?.依赖装备增益 ? !!装备增益?.[item?.依赖装备增益] : true\n      // // 如果来自奇穴，则进行判断\n      // const 判断启用 = item?.增益所在位置 === '奇穴' ? item?.增益启用 : 判断装备增益启用状态\n      // return  && 判断启用 && 快照启用状态\n    })\n\n    if (该技能增益) {\n      const 该技能增益列表: 技能计算增益数据列表[] = (该技能增益?.增益集合 || []).map((item) => {\n        return {\n          ...item,\n          增益启用: true,\n          增益来源: 该技能增益?.增益名称,\n        }\n      })\n      增益集合列表 = 增益集合列表.concat(该技能增益列表)\n    }\n  })\n\n  return 增益集合列表\n}\n\n/**\n * 计算不同的增益对属性、技能增伤的影响\n * 返回最终参与技能伤害计算的人物属性、技能增伤等数据\n * 计算A类增伤，所有增伤害相加\n */\nexport const 通用增益计算 = (增益: 属性加成, 最终计算属性: 最终计算属性类型): 最终计算属性类型 => {\n  const { 值, 属性 } = 增益\n  const 计算后人物属性 = { ...最终计算属性?.最终人物属性 }\n  let 通用增伤 = 最终计算属性?.技能增伤?.通用增伤\n  let 易伤增伤 = 最终计算属性?.技能增伤?.易伤增伤\n  let 非侠增伤 = 最终计算属性?.技能增伤?.非侠增伤\n  let 技能系数 = 最终计算属性?.技能增伤?.技能系数\n\n  let 郭氏额外会效果值 = 最终计算属性?.郭氏额外会效果值\n  let 额外会心率 = 最终计算属性?.额外会心率\n  let 当前目标 = 最终计算属性?.计算目标\n  let 郭氏无视防御 = 最终计算属性?.郭氏无视防御\n  let 郭氏属性无视防御 = 最终计算属性?.郭氏属性无视防御\n  let 郭氏力道 = 最终计算属性?.郭氏力道\n  let 郭氏身法 = 最终计算属性?.郭氏身法\n  let 郭氏元气 = 最终计算属性?.郭氏元气\n  let 郭氏根骨 = 最终计算属性?.郭氏根骨\n  let 郭氏无双等级 = 最终计算属性?.郭氏无双等级\n  let 郭氏破防等级 = 最终计算属性?.郭氏破防等级\n  let 郭氏基础攻击 = 最终计算属性?.郭氏基础攻击\n  let 郭氏武器伤害 = 最终计算属性?.郭氏武器伤害\n\n  switch (属性) {\n    // 基础属性\n    case 属性类型.全属性:\n      计算后人物属性.力道 += 值\n      计算后人物属性.根骨 += 值\n      计算后人物属性.身法 += 值\n      计算后人物属性.元气 += 值\n      break\n    case 属性类型.力道:\n      计算后人物属性.力道 += 值\n      break\n    case 属性类型.根骨:\n      计算后人物属性.根骨 += 值\n      break\n    case 属性类型.身法:\n      计算后人物属性.身法 += 值\n      break\n    case 属性类型.元气:\n      计算后人物属性.元气 += 值\n      break\n    case 属性类型.郭氏力道:\n      郭氏力道 += 值\n      break\n    case 属性类型.郭氏根骨:\n      郭氏根骨 += 值\n      break\n    case 属性类型.郭氏身法:\n      郭氏身法 += 值\n      break\n    case 属性类型.郭氏元气:\n      郭氏元气 += 值\n      break\n    // 无双等级\n    case 属性类型.无双等级:\n      计算后人物属性.无双等级 += 值\n      break\n    case 属性类型.郭氏无双:\n      郭氏无双等级 += 值\n      break\n    // 破招值\n    case 属性类型.破招值:\n      计算后人物属性.破招值 += 值\n      break\n    // 全能等级\n    // 这里之前已经进行过一次全能转破招无双的面板计算，所以这里的全能值增加要加上破招和无双\n    case 属性类型.全能等级:\n      计算后人物属性.全能等级 += 值\n      // 计算后人物属性.破招值 += 值\n      // 计算后人物属性.无双等级 += 值\n      break\n    // 基础攻击\n    case 属性类型.全基础攻击:\n    case 属性类型.外功基础攻击:\n    case 属性类型.内功基础攻击:\n      计算后人物属性.基础攻击 += 值\n      break\n    case 属性类型.郭氏全基础攻击:\n    case 属性类型.郭氏外功基础攻击:\n    case 属性类型.郭氏内功基础攻击:\n      郭氏基础攻击 += 值\n      break\n    // 破防\n    case 属性类型.全破防等级:\n    case 属性类型.外功破防等级:\n    case 属性类型.内功破防等级:\n      计算后人物属性.破防等级 += 值\n      break\n    case 属性类型.郭氏全破防等级:\n    case 属性类型.郭氏外功破防等级:\n    case 属性类型.郭氏内功破防等级:\n      郭氏破防等级 += 值\n      break\n    // 会心\n    case 属性类型.全会心等级:\n    case 属性类型.外功会心等级:\n    case 属性类型.内功会心等级:\n      计算后人物属性.会心等级 += 值\n      break\n    case 属性类型.全会心百分比:\n    case 属性类型.外功会心百分比:\n    case 属性类型.内功会心百分比:\n      额外会心率 += 值\n      break\n    // 会心效果\n    case 属性类型.全会心效果等级:\n    case 属性类型.外功会心效果等级:\n    case 属性类型.内功会心效果等级:\n      计算后人物属性.会心效果等级 += 值\n      break\n    case 属性类型.郭氏全会心效果等级:\n    case 属性类型.郭氏外功会心效果等级:\n    case 属性类型.郭氏内功会心效果等级:\n      郭氏额外会效果值 += 值\n      break\n    // 无视防御相关\n    case 属性类型.内功基础防御:\n    case 属性类型.外功基础防御:\n      当前目标 = {\n        ...当前目标,\n        防御点数: Math.max(当前目标.防御点数 + 值, 0),\n      }\n      break\n    case 属性类型.郭氏外功基础防御:\n    case 属性类型.郭氏内功基础防御:\n      郭氏属性无视防御 += 值\n      break\n    case 属性类型.郭氏全无视防御:\n      郭氏无视防御 += 值\n      break\n    // 加速等级\n    case 属性类型.加速等级:\n      计算后人物属性.加速等级 += 值\n      break\n    // 武器伤害\n    case 属性类型.武器伤害:\n      计算后人物属性.武器伤害_最小值 += 值\n      计算后人物属性.武器伤害_最大值 += 值\n      break\n    case 属性类型.郭氏武器伤害:\n      郭氏武器伤害 += 值\n      break\n    case 属性类型.通用增伤:\n      通用增伤 += 值\n      break\n    case 属性类型.易伤增伤:\n      易伤增伤 += 值\n      break\n    case 属性类型.非侠增伤:\n      非侠增伤 += 值\n      break\n    case 属性类型.技能系数:\n      技能系数 = 技能系数 * 值\n      break\n    default:\n      // console.warn(`存在未计算增益${增益?.属性}`, 增益)\n      break\n  }\n\n  return {\n    计算目标: 当前目标,\n    最终人物属性: { ...计算后人物属性 },\n    技能增伤: {\n      通用增伤: 通用增伤,\n      易伤增伤: 易伤增伤,\n      非侠增伤: 非侠增伤,\n      技能系数: 技能系数,\n    },\n    郭氏额外会效果值: 郭氏额外会效果值,\n    额外会心率: 额外会心率,\n    郭氏无视防御: 郭氏无视防御,\n    郭氏属性无视防御: 郭氏属性无视防御,\n    郭氏力道: 郭氏力道,\n    郭氏元气: 郭氏元气,\n    郭氏根骨: 郭氏根骨,\n    郭氏身法: 郭氏身法,\n    郭氏无双等级: 郭氏无双等级,\n    郭氏破防等级: 郭氏破防等级,\n    郭氏基础攻击: 郭氏基础攻击,\n    郭氏武器伤害: 郭氏武器伤害,\n  }\n}\n","import { 基础系数 } from '@/数据/常量'\nimport { 最终计算属性类型 } from '@/@types/计算'\nimport { 技能基础数据模型 } from '@/@types/技能'\nimport { 获取非郭氏加成值, 获取非郭氏结果值 } from '@/工具函数/data'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport 完整技能伤害 from './技能伤害公式'\nimport { 角色默认基础属性 } from '@/工具函数/init/默认数据'\n\nconst { 主属性, 功法, 主属性额外加成 } = 获取当前数据()\n\n// 技能dps结果期望\nexport const 非郭氏技能总伤害计算 = (\n  最终计算属性: 最终计算属性类型,\n  当前技能属性: 技能基础数据模型,\n  技能总数: number\n) => {\n  const 用于计算的人物面板 = 获取属性加成后的面板(最终计算属性, 当前技能属性)\n\n  const { 期望技能总伤 } = 完整技能伤害({\n    当前技能属性,\n    技能总数,\n    最终人物属性: 用于计算的人物面板,\n    当前目标: 最终计算属性?.计算目标,\n    技能增伤: 最终计算属性?.技能增伤,\n    郭氏额外会效果值: 最终计算属性?.郭氏额外会效果值,\n    郭氏额外无双等级: 最终计算属性?.郭氏无双等级,\n    额外会心率: 最终计算属性?.额外会心率,\n    郭氏无视防御: 最终计算属性?.郭氏无视防御,\n    郭氏属性无视防御: 最终计算属性?.郭氏属性无视防御,\n  })\n\n  return { 期望技能总伤 }\n}\n\nexport const 获取属性加成后的面板 = (\n  最终计算属性: 最终计算属性类型,\n  当前技能属性?: 技能基础数据模型 // 用于判断内功心法的外功伤害时使用\n) => {\n  let 计算人物面板 = { ...最终计算属性?.最终人物属性 }\n  const 最终属性 = {\n    力道: 获取非郭氏加成值(最终计算属性?.最终人物属性?.力道, 最终计算属性?.郭氏力道),\n    身法: 获取非郭氏加成值(最终计算属性?.最终人物属性?.身法, 最终计算属性?.郭氏身法),\n    根骨: 获取非郭氏加成值(最终计算属性?.最终人物属性?.根骨, 最终计算属性?.郭氏根骨),\n    元气: 获取非郭氏加成值(最终计算属性?.最终人物属性?.元气, 最终计算属性?.郭氏元气),\n  }\n  const 最终主属 = 最终属性?.[主属性] || 0\n  const 额外加成面板攻击 = 主属性额外加成?.面板攻击 || 0\n  const 额外加成会心 = 主属性额外加成?.会心等级 || 0\n  const 额外加成破防 = 主属性额外加成?.破防等级 || 0\n\n  // 计算主属性的面板攻击\n  计算人物面板.面板攻击 = (计算人物面板.基础攻击 || 0) + 最终主属 * 额外加成面板攻击\n\n  // 特殊处理内功心法的外攻伤害字段，暂时只有普通攻击\n  if (功法 === '内功' && 当前技能属性?.伤害类型 === '外功') {\n    计算人物面板 = {\n      ...计算人物面板,\n      基础攻击: 角色默认基础属性.基础攻击,\n      破防等级: 角色默认基础属性.破防等级,\n      会心效果等级: 角色默认基础属性.会心效果等级,\n      // 因为有一些装备是全会心，只有门派特定装备是属性会心\n      // 这里要重构暂时太麻烦，先取角色会心 - 2000点。误差范围暂时可以接受\n      会心等级: Math.max(计算人物面板.会心等级 * 0.6, 0),\n    }\n    计算人物面板.面板攻击 = 角色默认基础属性.基础攻击 || 0\n  }\n\n  // 计算外功\n  if (功法 === '外功' || 当前技能属性?.伤害类型 === '外功') {\n    // 力道-基础攻击\n    计算人物面板.基础攻击 += 最终属性.力道 * 基础系数.力道转攻击\n    计算人物面板.面板攻击 += 最终属性.力道 * 基础系数.力道转攻击\n    // 力道-破防\n    计算人物面板.破防等级 += 最终属性.力道 * 基础系数.力道转破防 + 最终主属 * 额外加成破防\n    // 身法-会心\n    计算人物面板.会心等级 += 最终属性.身法 * 基础系数.身法转会心 + 最终主属 * 额外加成会心\n  }\n  // 计算内功\n  if (功法 === '内功' && 当前技能属性?.伤害类型 !== '外功') {\n    // 元气-基础攻击\n    计算人物面板.基础攻击 += 最终属性.元气 * 基础系数.元气转攻击\n    计算人物面板.面板攻击 += 最终属性.元气 * 基础系数.元气转攻击\n    // 元气-破防\n    计算人物面板.破防等级 += 最终属性.元气 * 基础系数.元气转破防 + 最终主属 * 额外加成破防\n    // 根骨-会心\n    计算人物面板.会心等级 += 最终属性.根骨 * 基础系数.根骨转会心 + 最终主属 * 额外加成会心\n  }\n\n  计算人物面板 = {\n    ...计算人物面板,\n    ...最终属性,\n    武器伤害_最小值: 获取非郭氏加成值(计算人物面板.武器伤害_最小值, 最终计算属性?.郭氏武器伤害),\n    武器伤害_最大值: 获取非郭氏加成值(计算人物面板.武器伤害_最大值, 最终计算属性?.郭氏武器伤害),\n    破防等级: 获取非郭氏加成值(计算人物面板.破防等级, 最终计算属性?.郭氏破防等级),\n    基础攻击: 获取非郭氏加成值(计算人物面板.基础攻击, 最终计算属性?.郭氏基础攻击),\n    面板攻击:\n      计算人物面板.面板攻击 + 获取非郭氏结果值(计算人物面板.基础攻击, 最终计算属性?.郭氏基础攻击),\n  }\n\n  return 计算人物面板\n}\n\nexport default 非郭氏技能总伤害计算\n"],"names":["三星临增益","通用增益","大橙武技能增益","增益名称","增益所在位置","增益类型","增益集合","属性","属性类型","值","门派套装增益","增益启用","功法","水特效","水特效_英雄","依赖装备增益","快照增益","获取当前数据","装备增益数据","小药小吃","团队增益","阵眼","覆盖率","获取装备增益","装备信息","快照计算","总增益集合","装备增益","套装会心会效","套装覆盖率","装备增益覆盖率格式化","map","增益","concat","风特效腰坠","风特效腰坠_英雄","水特效武器","水特效武器_英雄","大附魔_伤腰","切糕会心","切糕无双","切糕会心_英雄","切糕无双_英雄","冬至套装","大附魔_伤帽","大附魔_伤衣","龙门飞剑武器","根据增益修改最终循环","计算循环","战斗时间","最终循环","大附魔_伤腕","some","item","技能名称","push","技能数量","Math","floor","filter","大附魔_伤鞋","增益排序","list","SortKeyList","Object","keys","newList","sort","a","b","indexOf","根据增益选项获取增益集合","增益数据","过滤阵眼触发类增益","小吃","小吃数据集合","includes","小吃名称","length","forEach","团队增益集合","启用","data","find","c","层数","增益阵眼","阵眼名称","触发型增益","计算该技能下多个增益的增益集合","当前技能属性","该技能增益列表","split","增益集合列表","i","该技能增益","技能增益列表","增益来源","通用增益计算","最终计算属性","计算后人物属性","最终人物属性","通用增伤","技能增伤","易伤增伤","非侠增伤","技能系数","郭氏额外会效果值","额外会心率","当前目标","计算目标","郭氏无视防御","郭氏属性无视防御","郭氏力道","郭氏身法","郭氏元气","郭氏根骨","郭氏无双等级","郭氏破防等级","郭氏基础攻击","郭氏武器伤害","力道","根骨","身法","元气","无双等级","破招值","全能等级","基础攻击","破防等级","会心等级","会心效果等级","防御点数","max","加速等级","武器伤害_最小值","武器伤害_最大值","主属性","主属性额外加成","获取属性加成后的面板","计算人物面板","最终属性","获取非郭氏加成值","最终主属","额外加成面板攻击","面板攻击","额外加成会心","额外加成破防","伤害类型","角色默认基础属性","基础系数","获取非郭氏结果值","技能总数","用于计算的人物面板","期望技能总伤","完整技能伤害","郭氏额外无双等级"],"sourceRoot":""}