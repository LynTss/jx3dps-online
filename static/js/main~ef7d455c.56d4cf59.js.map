{"version":3,"file":"static/js/main~ef7d455c.56d4cf59.js","mappings":"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","sources":["store/data/index.ts","store/index.ts","store/system/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/技能统一类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/utils.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/通用类/宠物.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/通用类/技能统一类.ts","功能模块/系统工具/页面隐藏工具/开发者工具/奇穴导入/tools.ts","功能模块/系统工具/页面隐藏工具/开发者工具/装备导入/tool.mjs"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '@/store/index'\n\nimport { 增益选项数据类型 } from '@/@types/团队增益'\nimport { 角色基础属性类型 } from '@/@types/角色'\nimport { 装备信息数据类型 } from '@/@types/装备'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 选中秘籍信息 } from '@/@types/秘籍'\nimport { 全部方案数据, 更新方案数据入参 } from '@/@types/方案'\nimport { 循环数据 } from '@/@types/循环'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取数据默认值 } from '@/工具函数/init'\n\nconst { 缓存映射 } = 获取当前数据()\n\nexport interface 数据模块类型 {\n  // 当前方案名称\n  当前方案名称: string\n  // 全部方案数据\n  全部方案数据: 全部方案数据\n  // 角色面板属性信息（不包含各种数据增益。只为装备带来的基础属性\n  角色基础属性: 角色基础属性类型\n  // 角色装备属性信息（不包含各种数据增益。只为装备带来的基础属性\n  装备信息: 装备信息数据类型\n  // 当前输出计算循环名\n  当前计算循环名称: string\n  // 当前输出计算目标名\n  当前输出计算目标名称: string\n  // 当前计算过的dps\n  当前计算结果: 当前计算结果类型\n  // 网络延迟\n  网络延迟: number\n  // 奇穴信息\n  当前奇穴信息: string[]\n  // 自定义循环列表\n  自定义循环列表: 循环数据[]\n  // 增益选项\n  增益数据: 增益选项数据类型\n  // 增益是否启用\n  增益启用: boolean\n  // 秘籍保存数据\n  当前秘籍信息: 选中秘籍信息\n}\n\nconst 数据默认值 = 获取数据默认值()\n\nconst 默认值: 数据模块类型 = {\n  ...数据默认值,\n}\n\nexport const 数据模块 = createSlice({\n  name: 'data',\n  initialState: 默认值,\n  reducers: {\n    更新全部数据: (state, action: PayloadAction<Partial<数据模块类型>>) => {\n      state = { ...state, ...action.payload }\n    },\n    更新角色基础属性: (state, action: PayloadAction<角色基础属性类型>) => {\n      state.角色基础属性 = { ...action.payload }\n    },\n    更新网络延迟: (state, action: PayloadAction<number>) => {\n      state.网络延迟 = action.payload\n      localStorage?.setItem(缓存映射.网络延迟, action.payload.toString())\n    },\n    更新当前计算结果: (state, action: PayloadAction<当前计算结果类型>) => {\n      state.当前计算结果 = action.payload\n    },\n    更新当前自定义循环列表: (state, action: PayloadAction<循环数据[]>) => {\n      state.自定义循环列表 = action.payload\n    },\n    更新当前输出计算目标名称: (state, action: PayloadAction<string>) => {\n      state.当前输出计算目标名称 = action.payload\n      localStorage?.setItem(缓存映射.当前输出计算目标名称, action.payload)\n    },\n    更新当前秘籍信息: (state, action: PayloadAction<选中秘籍信息>) => {\n      state.当前秘籍信息 = { ...(action.payload || {}) }\n      localStorage.setItem(缓存映射.当前秘籍信息, JSON.stringify(action.payload))\n    },\n    更新当前方案名称: (state, action: PayloadAction<string>) => {\n      state.当前方案名称 = action.payload\n      localStorage.setItem(缓存映射.当前方案名称, action.payload)\n    },\n    更新全部方案数据: (state, action: PayloadAction<全部方案数据>) => {\n      state.全部方案数据 = action.payload\n      localStorage.setItem(缓存映射.全部方案数据, JSON.stringify(action.payload))\n    },\n    更新方案数据: (state, action: PayloadAction<更新方案数据入参>) => {\n      const 目标属性 = action?.payload?.属性\n      if (目标属性) {\n        // 更新当前正在使用的属性\n        state[目标属性] = action?.payload?.数据\n        const 当前方案名称 = state.当前方案名称\n        // 更新全部方案内对应的属性\n        if (state.全部方案数据?.[当前方案名称]) {\n          state.全部方案数据[当前方案名称][目标属性] = action?.payload?.数据\n          // 更新浏览器缓存\n          localStorage.setItem(缓存映射.全部方案数据, JSON.stringify(state.全部方案数据))\n        }\n      }\n    },\n    更新选中的方案数据: (state, action: PayloadAction<string>) => {\n      const 切换的目标方案名称 = action?.payload\n      const 目标方案 = state.全部方案数据?.[切换的目标方案名称]\n\n      if (目标方案) {\n        state.当前方案名称 = 切换的目标方案名称\n        localStorage.setItem(缓存映射.当前方案名称, action.payload)\n        state.装备信息 = 目标方案.装备信息\n        state.增益启用 = 目标方案.增益启用\n        state.增益数据 = 目标方案.增益数据\n        state.当前奇穴信息 = 目标方案.当前奇穴信息\n        state.当前计算循环名称 = 目标方案.当前计算循环名称\n      }\n    },\n  },\n})\n\nexport const {\n  更新全部数据,\n  更新角色基础属性,\n  更新网络延迟,\n  更新当前计算结果,\n  更新当前自定义循环列表,\n  更新当前输出计算目标名称,\n  更新当前秘籍信息,\n  更新当前方案名称,\n  更新全部方案数据,\n  更新方案数据,\n  更新选中的方案数据,\n} = 数据模块.actions // 导出操作state的喊出\n\nexport const DataState = (state: RootState) => state\n\nexport default 数据模块.reducer // 导出当前reducer在store/index.ts中记性全局挂\n","import { configureStore } from '@reduxjs/toolkit'\nimport 系统模块 from './system'\nimport 数据模块 from './data'\n\nconst store = configureStore({\n  reducer: {\n    data: 数据模块,\n    system: 系统模块,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '@/store/index'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取系统默认值 } from '@/工具函数/init'\n\nconst { 缓存映射 } = 获取当前数据()\n\nexport interface 系统模块类型 {\n  增益面板显示状态: boolean\n  背景图片显示状态: boolean\n}\n\nconst 数据默认值 = 获取系统默认值()\n\nconst 默认值: 系统模块类型 = {\n  ...数据默认值,\n}\n\nexport const 系统模块 = createSlice({\n  name: 'system',\n  initialState: 默认值,\n  reducers: {\n    更新全部系统数据: (state, action: PayloadAction<Partial<系统模块类型>>) => {\n      state = { ...state, ...action.payload }\n    },\n    更新背景图片显示状态: (state, action: PayloadAction<boolean>) => {\n      state.背景图片显示状态 = action.payload\n      const newData = action.payload ? '1' : '0'\n      localStorage.setItem(缓存映射.背景图片显示状态, newData)\n    },\n    更新增益面板显示状态: (state, action: PayloadAction<boolean>) => {\n      state.增益面板显示状态 = action.payload\n    },\n  },\n})\n\nexport const { 更新全部系统数据, 更新背景图片显示状态, 更新增益面板显示状态 } = 系统模块.actions // 导出操作state的喊出\n\nexport const SystemState = (state: RootState) => state\n\nexport default 系统模块.reducer // 导出当前reducer在store/index.ts中记性全局挂\n","import { 每秒郭氏帧 } from '../constant'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型, DotDTO } from './type'\n\nexport const 根据奇穴修改buff数据 = (奇穴: string[]) => {\n  const res = {}\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  Object.keys(原始Buff数据).forEach((key) => {\n    const obj = 原始Buff数据[key]\n    switch (key) {\n      case '身形':\n        if (判断奇穴('溃延')) {\n          obj.最大持续时间 = 每秒郭氏帧 * (15 + 6)\n        } else {\n          obj.最大持续时间 = 每秒郭氏帧 * 15\n        }\n        break\n      case '流血':\n        if (判断奇穴('承磊')) {\n          obj.最大层数 = 6\n        } else {\n          obj.最大层数 = 4\n        }\n        if (判断奇穴('涣衍')) {\n          obj.最大持续时间 = 每秒郭氏帧 * (6 + 12)\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 9\n        } else {\n          obj.最大持续时间 = 每秒郭氏帧 * 6\n          ;(obj as DotDTO).最大作用次数 = 3\n        }\n        break\n      case '破绽':\n        if (判断奇穴('承磊')) {\n          obj.最大层数 = 6\n        } else {\n          obj.最大层数 = 4\n        }\n        if (判断奇穴('观衅')) {\n          obj.自然消失失去层数 = 1\n        } else {\n          obj.自然消失失去层数 = 0\n        }\n        break\n      default:\n        break\n    }\n    res[key] = obj\n  })\n\n  return res\n}\n\nexport const 根据奇穴修改技能数据 = (奇穴: string[]): 循环基础技能数据类型[] => {\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  const res: 循环基础技能数据类型[] = 循环模拟技能基础数据.map((技能) => {\n    if (技能?.技能名称 === '横') {\n      return 判断奇穴('敛摄')\n        ? {\n            ...技能,\n            最大充能层数: 2,\n          }\n        : 判断奇穴('涣衍')\n        ? {\n            ...技能,\n            技能CD: 每秒郭氏帧 * (12 - 2),\n          }\n        : 技能\n    } else if (技能?.技能名称 === '游') {\n      return 判断奇穴('流岚')\n        ? {\n            ...技能,\n            技能CD: 每秒郭氏帧 * (50 - 15 + 10),\n          }\n        : 技能\n    } else {\n      return 技能\n    }\n  })\n\n  return res\n}\n\nexport const ERROR_ACTION = {\n  锐意不足: {\n    信息: '当前锐意不足，无法释放该技能',\n  },\n  身形不足: {\n    信息: '当前身形不足，无法释放该技能',\n  },\n  体态错误: {\n    信息: '当前体态无法释放该技能',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 起手识破BUFF = (Buff和Dot数据) => {\n  return {\n    识破: {\n      ...Buff和Dot数据['识破'],\n      当前层数: 1,\n      刷新时间: 0,\n    },\n  }\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: Partial<循环主类类型> = {}\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  触发回复锐意(锐意值, 来源) {\n    this.模拟循环.增加锐意?.(锐意值, 来源)\n  }\n\n  触发清空锐意(来源) {\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    this.模拟循环.减少锐意?.(当前锐意, 来源)\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined,\n    DOT伤害 = false\n  ) {\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 额外增益列表, 触发伤害时间, DOT伤害)\n  }\n\n  破浪三式触发鸣锋() {\n    if (this.模拟循环.校验奇穴是否存在?.('鸣锋')) {\n      const 增益层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n      if (增益层数) {\n        this.触发伤害行为('鸣锋', 1, [`鸣锋_流血_${增益层数}`])\n      } else {\n        this.触发伤害行为('鸣锋', 1)\n      }\n    }\n  }\n\n  流云势法触发连亘(来源?) {\n    if (this.模拟循环.校验奇穴是否存在?.('连亘')) {\n      const 连亘层数 = this.模拟循环.当前自身buff列表?.['连亘']?.当前层数 || 0\n      if (连亘层数 < 2) {\n        this.模拟循环.添加buff?.({ 名称: '连亘', 对象: '自身', 新增层数: 1 })\n      } else {\n        // 触发连亘回复锐意\n        this.触发回复锐意(20, '连亘')\n        this.模拟循环.卸除buff?.({ 名称: '连亘', 对象: '自身', 卸除层数: 2 })\n      }\n      if (来源 === '断云势') {\n        this.模拟循环.卸除buff?.({ 名称: '连亘', 对象: '自身', 卸除层数: 2 })\n      }\n    }\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 每秒郭氏帧 } from '../constant'\nimport 循环模拟技能基础数据, { 原始Buff数据 } from '../constant/skill'\nimport { 循环基础技能数据类型, DotDTO } from './type'\n\nexport const 根据奇穴修改buff数据 = (奇穴: string[]) => {\n  const res = {}\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  Object.keys(原始Buff数据).forEach((key) => {\n    const obj = 原始Buff数据[key]\n    switch (key) {\n      case '贯穿':\n        if (判断奇穴('桑柘')) {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 5\n          ;(obj as DotDTO).最大持续时间 = 40\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-extra-semi\n          ;(obj as DotDTO).最大作用次数 = 4\n          ;(obj as DotDTO).最大持续时间 = 32\n        }\n        break\n      default:\n        break\n    }\n    res[key] = obj\n  })\n\n  return res\n}\n\nexport const 根据奇穴修改技能数据 = (奇穴: string[]): 循环基础技能数据类型[] => {\n  const 判断奇穴 = (val) => {\n    return 奇穴?.includes(val)\n  }\n\n  const res: 循环基础技能数据类型[] = 循环模拟技能基础数据.map((技能) => {\n    if (技能?.技能名称 === '金乌见坠') {\n      return 判断奇穴('托月')\n        ? {\n            ...技能,\n            最大充能层数: 3,\n          }\n        : 技能\n    } else if (技能?.技能名称 === '弛律召野') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('朱厌')) {\n        技能原始CD = 技能原始CD + 每秒郭氏帧 * 20\n      }\n      if (判断奇穴('领胡')) {\n        技能原始CD = 技能原始CD - 每秒郭氏帧 * 10\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else if (技能?.技能名称 === '饮羽簇') {\n      let 技能原始CD = 技能.技能CD || 0\n      if (判断奇穴('丛云隐月')) {\n        技能原始CD = 每秒郭氏帧 * 7\n      } else {\n        技能原始CD = 每秒郭氏帧 * 8\n      }\n      return {\n        ...技能,\n        技能CD: 技能原始CD,\n      }\n    } else {\n      return 技能\n    }\n  })\n\n  return res\n}\n\nexport const ERROR_ACTION = {\n  箭数不足: {\n    信息: '当前箭数不足无法释放该技能',\n  },\n  BUFF错误: {\n    信息: '当前没有对应的BUFF',\n  },\n}\n\nexport const 起手承契BUFF = (Buff和Dot数据, 层数) => {\n  return {\n    承契: {\n      ...Buff和Dot数据['承契'],\n      当前层数: 层数,\n      刷新时间: 0,\n    },\n  }\n}\n\nexport const 根据加速等级获取虚拟加速值 = (加速等级) => {\n  const 加速等级枚举 = {\n    0: 0,\n    1: 95,\n    2: 4241,\n    3: 8857,\n    4: 13851,\n    5: 19316,\n  }\n  return 加速等级枚举[加速等级]\n}\n\nexport const 转化buff和增益名称 = (增益名称, buff列表) => {\n  if (增益名称?.includes('承契')) {\n    const 增益层数 = 增益名称?.split('_')?.[1]?.[0] || 0\n    if (!增益层数) {\n      return {}\n    } else {\n      return +buff列表?.['承契']?.当前层数 === +增益层数 ? buff列表?.['承契'] : {}\n    }\n  } else {\n    return buff列表?.[增益名称]\n  }\n}\n","import { 宠物基础数据 } from '../../constant/skill'\nimport { 待生效事件 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 宠物 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  召唤宠物(宠物名称, 额外buff?) {\n    // 添加宠物进入场地日志\n    this.模拟循环.添加战斗日志?.({\n      日志: `${宠物名称}-宠物`,\n      日志类型: '宠物进入场地',\n      日志时间: this.模拟循环.当前时间,\n    })\n    const 本次召唤宠物数据 = 宠物基础数据[宠物名称]\n    this.模拟循环.更新当前宠物数据(宠物名称, {\n      宠物: 宠物名称,\n      入场时间: this.模拟循环.当前时间,\n      离场时间: this.模拟循环.当前时间 + 本次召唤宠物数据.释放后退场时间,\n    })\n    switch (宠物名称) {\n      case '狼':\n        this.狼攻击事件(本次召唤宠物数据, 额外buff)\n        this.宠物离场事件(本次召唤宠物数据)\n        break\n      default:\n        this.宠物攻击事件(本次召唤宠物数据, 额外buff)\n        this.宠物离场事件(本次召唤宠物数据)\n        break\n    }\n  }\n\n  // 事件预备-start\n  狼攻击事件(本次召唤宠物数据, 额外buff?) {\n    const 待生效事件: 待生效事件[] = []\n    for (let i = 0; i < 本次召唤宠物数据.宠物攻击次数; i++) {\n      待生效事件.push({\n        事件名称: `${本次召唤宠物数据.宠物}-宠物攻击`,\n        事件时间:\n          this.模拟循环.当前时间 +\n          本次召唤宠物数据.释放后攻击时间 +\n          本次召唤宠物数据.宠物攻击频率 * i,\n        事件备注: {\n          宠物名称: 本次召唤宠物数据.宠物,\n          额外buff,\n        },\n      })\n    }\n    this.模拟循环.添加待生效事件队列(待生效事件)\n  }\n\n  宠物攻击事件(本次召唤宠物数据, 额外buff?) {\n    this.模拟循环.添加待生效事件队列([\n      {\n        事件名称: `${本次召唤宠物数据.宠物}-宠物攻击`,\n        事件时间: this.模拟循环.当前时间 + 本次召唤宠物数据.释放后攻击时间,\n        事件备注: {\n          宠物名称: 本次召唤宠物数据.宠物,\n          额外buff,\n        },\n      },\n    ])\n  }\n\n  宠物离场事件(本次召唤宠物数据) {\n    this.模拟循环.添加待生效事件队列([\n      {\n        事件名称: `${本次召唤宠物数据.宠物}-宠物离场`,\n        事件时间: this.模拟循环.当前时间 + 本次召唤宠物数据.释放后退场时间,\n        事件备注: {\n          宠物名称: 本次召唤宠物数据.宠物,\n        },\n      },\n    ])\n  }\n  // 事件预备-end\n\n  // 实际动作行为\n  宠物攻击(宠物名称, 事件时间, 额外buff) {\n    // 鹰上四层贯穿\n    if (宠物名称 === '鹰') {\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿('鹰')\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿('鹰')\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿('鹰')\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿('鹰')\n    }\n\n    // 九乌宠物上两层贯穿\n    if (this.模拟循环.校验奇穴是否存在('九乌')) {\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿(`${宠物名称}-九乌`)\n      this.模拟循环.技能类实例集合.贯穿.获得和刷新贯穿(`${宠物名称}-九乌`)\n    }\n\n    // 实测宠物造成伤害时候继承人身上的层数。既身上层数+宠物身上层数\n    const 角色身上层数 = this.模拟循环.当前自身buff列表?.['承契']?.当前层数 || 0\n    // 点了孰湖奇穴后宠物出现携带两层\n    const 宠物携带承契层数 = this.模拟循环.校验奇穴是否存在('孰湖') ? 2 : 1\n    const 承契总数 = 角色身上层数 + 宠物携带承契层数\n\n    this.模拟循环.技能造成伤害(\n      Skill_Cycle_Map[宠物名称],\n      1,\n      [`承契_${承契总数}层`, ...(额外buff || [])],\n      事件时间,\n      false,\n      true\n    )\n  }\n\n  宠物离场(宠物名称, 事件时间) {\n    if (this.模拟循环.校验奇穴是否存在('鹿蜀')) {\n      // 点了孰湖奇穴后宠物出现携带两层\n      this.模拟循环.获得承契()\n      if (this.模拟循环.校验奇穴是否存在('孰湖')) {\n        this.模拟循环.获得承契()\n      }\n    }\n\n    this.模拟循环.添加战斗日志({\n      日志: `${宠物名称}-宠物`,\n      日志类型: '宠物离开场地',\n      日志时间: 事件时间,\n    })\n  }\n}\n\nexport default 宠物\n\n// 没表明枚举就直接取原值\nexport const Skill_Cycle_Map = {\n  狼: '攻击-狼',\n  虎: '攻击-虎',\n  鹰: '攻击-鹰',\n  熊: '攻击-熊',\n  猪: '重击',\n  象: '践踏',\n}\n","import 循环主类类型 from '../main'\nimport { 技能释放记录结果 } from '../type'\n\nclass 技能统一类 {\n  模拟循环: 循环主类类型 = {} as any\n  本次释放记录: 技能释放记录结果 = {}\n\n  constructor(模拟循环) {\n    this.模拟循环 = 模拟循环\n    return\n  }\n\n  释放前初始化() {\n    // 重置释放记录\n    this.本次释放记录 = {}\n  }\n\n  触发伤害行为(\n    伤害名称,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    触发伤害时间: number | undefined = undefined\n  ) {\n    this.模拟循环.技能造成伤害?.(伤害名称, 伤害次数, 额外增益列表, 触发伤害时间)\n  }\n\n  获取技能释放记录结果() {\n    return {\n      ...this.本次释放记录,\n    }\n  }\n\n  获取当前重要buff列表(技能依赖自身buff列表: string[] = [], 技能依赖目标buff列表: string[] = []) {\n    const 重要buff列表: string[] = []\n    技能依赖自身buff列表.forEach((buff) => {\n      if (this.模拟循环.当前自身buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    技能依赖目标buff列表.forEach((buff) => {\n      if (this.模拟循环.当前目标buff列表?.[buff]?.当前层数) {\n        重要buff列表.push(buff)\n      }\n    })\n    return 重要buff列表 || []\n  }\n\n  获取施加重要buff信息(buff名称) {\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const buff对象 = this.模拟循环.Buff和Dot数据?.[buff名称]\n\n    return buff对象\n      ? {\n          buff名称: buff名称,\n          buff开始时间: 当前时间,\n          buff结束时间: 当前时间 + (buff对象?.最大持续时间 || 0),\n        }\n      : null\n  }\n}\n\nexport default 技能统一类\n","import { 奇穴列表数据类型, 奇穴数据类型 } from '@/@types/奇穴'\n\nexport const 获取数据 = (数据) => {\n  const res: 奇穴列表数据类型[] = []\n  const 数据对象 = JSON.parse(数据 || '{}')\n  Object.keys(数据对象).forEach((key) => {\n    const keyObj = 数据对象[key]\n    const keyRes: 奇穴数据类型[] = []\n    Object.keys(keyObj).forEach((itemKey) => {\n      const data = keyObj[itemKey]\n      if (data) {\n        keyRes.push({\n          奇穴名称: data?.name,\n          奇穴图片: `https://icon.jx3box.com/icon/${data?.icon}.png`,\n        })\n      }\n    })\n    res.push({\n      奇穴列表: keyRes,\n    })\n  })\n  return res\n}\n","import axios from 'axios'\n\nconst 魔盒配装接口 = axios.create({\n  baseURL: 'https://node.jx3box.com', // 设置 baseURL 为您的服务器地址\n  timeout: 5000, // 设置超时时间\n  headers: {\n    'Content-Type': 'application/json',\n    // 可以根据需要设置其他请求头\n  },\n})\n\n// 查询武器\nconst 获取魔盒武器数据 = (params) => 魔盒配装接口.get(`/equip/weapon`, { params: params })\nconst 获取魔盒装备数据 = (params) => 魔盒配装接口.get(`/equip/armor`, { params: params })\nconst 获取魔盒饰品数据 = (params) => 魔盒配装接口.get(`/equip/trinket`, { params: params })\n\n\nimport { 接口装备数据格式化 } from './utils.mjs'\nimport 赛季范围数据 from './赛季范围数据.mjs'\n\nexport const 获取数据 = async ({ 功法, 装备部位, 品级范围, 装备质量, 所属方向 = \"1\" }) => {\n  const 接口 = [0, 1]?.includes(装备部位)\n    ? 获取魔盒武器数据\n    : [4, 5, 7]?.includes(装备部位)\n    ? 获取魔盒饰品数据\n    : 获取魔盒装备数据\n\n  let 当前请求页 = 1\n\n  const 参数 = {\n    position: 装备部位,\n    pv_type: 所属方向, // 1PVE 3PVX\n    duty: 功法,\n    // MagicKind: '力道,身法,外功',\n    Quality: 装备质量 || undefined, // 4 紫武 ，5 橙武\n    page: 当前请求页,\n    per: 500,\n    min_level: Math.max(品级范围?.[0] - 1, 0), // 防止左开右闭，多查一层\n    max_level: Math.max(品级范围?.[1] + 1, 0),\n  }\n\n  const 结果 = await 接口(参数)\n  let 结果数据数组 = 结果?.data?.list || []\n  const 总数 = 结果?.data?.total\n  while (总数 > 结果?.data?.list?.length) {\n    const 翻页数据 = await 接口({...参数,page:当前请求页 + 1})\n    当前请求页 = 当前请求页 + 1\n    const 翻页数据数组 = 翻页数据?.data?.list || []\n    if (翻页数据数组?.length) {\n      结果数据数组 = 结果数据数组.concat(翻页数据数组)\n    } else {\n      break\n    }\n  }\n\n  const 处理后数据 = 接口装备数据格式化(结果数据数组, 赛季范围数据)\n  // 处理里面叫“测试装备”的数据\n  return 处理后数据.filter(item => item?.装备名称 !== \"测试装备\" && item?.装备名称 !== \"测试武器\" )\n}\n"],"names":["缓存映射","获取当前数据","数据默认值","获取数据默认值","默认值","数据模块","createSlice","name","initialState","reducers","更新全部数据","state","action","payload","更新角色基础属性","角色基础属性","更新网络延迟","网络延迟","localStorage","setItem","toString","更新当前计算结果","当前计算结果","更新当前自定义循环列表","自定义循环列表","更新当前输出计算目标名称","当前输出计算目标名称","更新当前秘籍信息","当前秘籍信息","JSON","stringify","更新当前方案名称","当前方案名称","更新全部方案数据","全部方案数据","更新方案数据","目标属性","属性","数据","更新选中的方案数据","切换的目标方案名称","目标方案","装备信息","增益启用","增益数据","当前奇穴信息","当前计算循环名称","actions","store","configureStore","reducer","data","system","系统模块","获取系统默认值","更新全部系统数据","更新背景图片显示状态","背景图片显示状态","newData","更新增益面板显示状态","增益面板显示状态","根据奇穴修改buff数据","奇穴","res","判断奇穴","val","includes","Object","keys","原始Buff数据","forEach","key","obj","最大持续时间","每秒郭氏帧","最大层数","最大作用次数","自然消失失去层数","根据奇穴修改技能数据","循环模拟技能基础数据","技能","技能名称","最大充能层数","技能CD","ERROR_ACTION","锐意不足","信息","身形不足","体态错误","BUFF错误","起手识破BUFF","Buff和Dot数据","识破","当前层数","刷新时间","技能统一类","模拟循环","本次释放记录","this","锐意值","来源","增加锐意","当前锐意","角色状态信息","锐意","减少锐意","伤害名称","伤害次数","额外增益列表","触发伤害时间","undefined","DOT伤害","技能造成伤害","校验奇穴是否存在","增益层数","当前目标buff列表","触发伤害行为","当前自身buff列表","添加buff","名称","对象","新增层数","触发回复锐意","卸除buff","卸除层数","技能依赖自身buff列表","技能依赖目标buff列表","重要buff列表","buff","push","buff名称","当前时间","buff对象","buff开始时间","buff结束时间","技能原始CD","箭数不足","起手承契BUFF","层数","承契","根据加速等级获取虚拟加速值","加速等级","转化buff和增益名称","增益名称","buff列表","split","宠物","宠物名称","额外buff","添加战斗日志","日志","日志类型","日志时间","本次召唤宠物数据","宠物基础数据","更新当前宠物数据","入场时间","离场时间","释放后退场时间","狼攻击事件","宠物离场事件","宠物攻击事件","待生效事件","i","宠物攻击次数","事件名称","事件时间","释放后攻击时间","宠物攻击频率","事件备注","添加待生效事件队列","技能类实例集合","贯穿","获得和刷新贯穿","承契总数","Skill_Cycle_Map","获得承契","狼","虎","鹰","熊","猪","象","获取数据","数据对象","parse","keyObj","keyRes","itemKey","奇穴名称","奇穴图片","icon","奇穴列表","魔盒配装接口","axios","baseURL","timeout","headers","获取魔盒武器数据","params","get","获取魔盒装备数据","获取魔盒饰品数据","功法","装备部位","品级范围","装备质量","所属方向","接口","参数","position","pv_type","duty","Quality","page","当前请求页","per","min_level","Math","max","max_level","结果","结果数据数组","list","总数","total","length","翻页数据","翻页数据数组","concat","处理后数据","接口装备数据格式化","赛季范围数据","filter","item","装备名称"],"sourceRoot":""}