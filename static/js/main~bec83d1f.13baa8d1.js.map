{"version":3,"file":"static/js/main~bec83d1f.13baa8d1.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/QixueSetModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/QixueSetModal/index.tsx"],"sourcesContent":["import { Button, Checkbox, Dropdown, Menu, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手驰风: boolean\n  设置起手驰风: (e: boolean) => void\n  快速导入循环: (e: 循环基础技能数据类型[]) => void\n  更新奇穴弹窗展示: (e: boolean) => void\n  更新奇穴信息: (e: string[]) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手驰风,\n    设置起手驰风,\n    快速导入循环,\n    更新奇穴弹窗展示,\n    更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息)\n    if (当前循环数据?.奇穴) {\n      更新奇穴信息(当前循环数据?.奇穴)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Checkbox\n          className={'cycle-simulator-header-checkbox'}\n          checked={起手驰风}\n          // value={起手驰风}\n          onChange={(e) => 设置起手驰风(e.target.checked)}\n        >\n          起手驰风\n        </Checkbox>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip>\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport BuffItem from './BuffItem'\nimport './index.css'\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据 } = props\n\n  const 技能释放时间 = Math.round(((技能.实际释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (技能.实际释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n        <Tooltip\n          title={\n            <div>\n              <p>{技能?.技能名称}</p>\n              {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n              {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n              {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n              {技能释放结果?.重要buff列表?.length ? (\n                <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                  {技能释放结果?.重要buff列表.map((item) => {\n                    return (\n                      <BuffItem\n                        data={item}\n                        key={item}\n                        className={'cycle-simulator-setting-buff-item'}\n                      />\n                    )\n                  })}\n                </Space>\n              ) : null}\n              {是否异常 ? (\n                当前异常 ? (\n                  <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                ) : (\n                  <p>前置技能异常</p>\n                )\n              ) : null}\n            </div>\n          }\n        >\n          <img className={'daozong-cycle-simulator-setting-skill-img'} src={技能?.图标} />\n        </Tooltip>\n        <CloseCircleFilled\n          className={'cycle-simulator-setting-skill-close'}\n          onClick={() => 删除循环技能(技能?.index || 0)}\n        />\n        {技能释放结果?.伤害段数 ? (\n          <span className={`cycle-simulator-setting-skill-count count${技能释放结果?.伤害段数}`}>\n            {技能释放结果?.伤害段数}\n          </span>\n        ) : null}\n      </div>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","// 奇穴数据，只在模拟循环内生效\nimport { Drawer, Form, Select } from 'antd'\nimport React, { useEffect } from 'react'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { useAppSelector } from '@/hooks'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\ninterface QixueSetProps {\n  className?: string\n  奇穴信息: string[]\n  更新奇穴信息: (e: string[]) => void\n  奇穴弹窗展示: boolean\n  更新奇穴弹窗展示: (e: boolean) => void\n}\n\nconst QixueSetModal: React.FC<QixueSetProps> = (props) => {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const { 奇穴信息, 更新奇穴信息, 奇穴弹窗展示, 更新奇穴弹窗展示 } = props\n\n  const [form] = Form.useForm()\n\n  const handleChangeQixue = () => {\n    setTimeout(() => {\n      form?.validateFields().then((values) => {\n        const newArray = Object.keys(values).map((key) => {\n          return values[key] as string\n        })\n        更新奇穴信息(newArray)\n      })\n    }, 0)\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    奇穴信息.map((item, index) => {\n      obj[index] = item || 当前奇穴信息[index]\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [奇穴信息])\n\n  return (\n    <Drawer\n      title={'奇穴设置'}\n      open={奇穴弹窗展示}\n      onClose={() => 更新奇穴弹窗展示(false)}\n      placement='bottom'\n      height={140}\n      mask={false}\n      className={'qixue-simulator-set-drawer'}\n    >\n      <Form form={form} className={'qixue-simulator-set-drawer-wrap'}>\n        {奇穴数据.map((重, index) => {\n          return (\n            <Form.Item className={'qixue-simulator-set-item'} name={index} key={index + 1}>\n              <Select\n                className={'qixue-simulator-set-item-select'}\n                onChange={handleChangeQixue}\n                dropdownMatchSelectWidth={false}\n                optionLabelProp='label'\n                showArrow={false}\n                popupClassName={'qixue-simulator-set-item-select-popup'}\n              >\n                {重?.奇穴列表.map((奇穴) => {\n                  return (\n                    <Select.Option\n                      value={奇穴?.奇穴名称}\n                      key={奇穴?.奇穴名称}\n                      className={'qixue-simulator-set-item-select-option'}\n                      label={\n                        <div className={'qixue-simulator-label'}>\n                          <img className={'qixue-simulator-label-img'} src={奇穴?.奇穴图片} />\n                          <span className={'qixue-simulator-label-text'}>{奇穴?.奇穴名称}</span>\n                        </div>\n                      }\n                    >\n                      <img className={'qixue-simulator-set-item-select-img'} src={奇穴?.奇穴图片} />\n                      <span className={'qixue-simulator-set-item-select-text'}>\n                        {奇穴?.奇穴名称}\n                      </span>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          )\n        })}\n      </Form>\n    </Drawer>\n  )\n}\n\nexport default QixueSetModal\n","import { Button, Checkbox, Dropdown, Menu, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\nimport { 判断有无橙武循环数据 } from '../../utils'\n\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手承契: number\n  设置起手承契: (e: number) => void\n  快速导入循环: (e: 循环基础技能数据类型[]) => void\n  更新奇穴弹窗展示: (e: boolean) => void\n  更新奇穴信息: (e: string[]) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  更新宠物顺序: (e: string[]) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  显示标鹄层数: boolean\n  更新显示标鹄层数: (e: boolean) => void\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手承契,\n    设置起手承契,\n    快速导入循环,\n    更新奇穴弹窗展示,\n    更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    更新宠物顺序,\n    网络延迟,\n    更新网络延迟,\n    模拟信息,\n    大橙武模拟,\n    显示标鹄层数,\n    更新显示标鹄层数,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息)\n    if (当前循环数据?.奇穴) {\n      更新奇穴信息(当前循环数据?.奇穴)\n    }\n    if (当前循环数据?.额外配置信息?.宠物顺序 && 当前循环数据?.额外配置信息?.宠物顺序?.length) {\n      更新宠物顺序(当前循环数据?.额外配置信息?.宠物顺序)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Checkbox checked={显示标鹄层数} onChange={(e) => 更新显示标鹄层数(e?.target?.checked)}>\n          <Tooltip title='显示技能开始释放时的标鹄层数'>显示标鹄层数</Tooltip>\n        </Checkbox>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={起手承契}\n          onChange={设置起手承契}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}层承契`,\n            }\n          })}\n        >\n          起手承契\n        </Select>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {判断有无橙武循环数据(快速导入默认循环, 大橙武模拟)?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {判断有无橙武循环数据(自定义循环, 大橙武模拟)?.length\n                ? 判断有无橙武循环数据(自定义循环, 大橙武模拟).map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip>\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport moshiyinyu from '../../assets/Skill/moshiyinyu.png'\nimport chifengmingjiao from '../../assets/Skill/chifengmingjiao.png'\nimport BuffItem from './BuffItem'\nimport './index.css'\n\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n  显示标鹄层数: boolean\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据, 显示标鹄层数 } = props\n\n  const 判断开始释放时间 = (技能?.开始读条时间 ? 技能.开始读条时间 : 技能.实际释放时间) || 0\n  const 读条时间 = 技能?.开始读条时间\n    ? Math.round((((技能.实际释放时间 || 0) - (技能.开始读条时间 || 0)) / 每秒郭氏帧) * 100) / 100\n    : 0\n\n  const 技能释放时间 = Math.round(((判断开始释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (判断开始释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  const 图标 = useMemo(() => {\n    if (技能释放结果?.实际伤害技能 === '没石饮雨') {\n      return moshiyinyu\n    } else if (技能释放结果?.实际伤害技能 === '弛风鸣角') {\n      return chifengmingjiao\n    } else {\n      return 技能.图标\n    }\n  }, [技能, 技能释放结果])\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n        <Tooltip\n          title={\n            <div>\n              <p>{技能?.技能名称}</p>\n              {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n              {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n              {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n              {读条时间 ? <p>读条：{读条时间}秒</p> : null}\n              {技能释放结果?.重要buff列表?.length ? (\n                <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                  {技能释放结果?.重要buff列表.map((item) => {\n                    return (\n                      <BuffItem\n                        data={item}\n                        key={item}\n                        className={'cycle-simulator-setting-buff-item'}\n                      />\n                    )\n                  })}\n                </Space>\n              ) : null}\n              {是否异常 ? (\n                当前异常 ? (\n                  <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                ) : (\n                  <p>前置技能异常</p>\n                )\n              ) : null}\n            </div>\n          }\n        >\n          <img className={'wanling-cycle-simulator-setting-skill-img'} src={图标} />\n        </Tooltip>\n        <CloseCircleFilled\n          className={'cycle-simulator-setting-skill-close'}\n          onClick={() => 删除循环技能(技能?.index || 0)}\n        />\n        {显示标鹄层数 && 技能释放结果?.释放时标鹄层数 && !技能?.不显示标鹄层数 ? (\n          <span\n            className={`cycle-simulator-setting-skill-count count${技能释放结果?.释放时标鹄层数}`}\n          >\n            {技能释放结果?.释放时标鹄层数}\n          </span>\n        ) : null}\n      </div>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","// 奇穴数据，只在模拟循环内生效\nimport { Drawer, Form, Select } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\ninterface QixueSetProps {\n  className?: string\n  奇穴信息: string[]\n  更新奇穴信息: (e: string[]) => void\n  奇穴弹窗展示: boolean\n  更新奇穴弹窗展示: (e: boolean) => void\n}\n\nconst QixueSetModal: React.FC<QixueSetProps> = (props) => {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const { 奇穴信息, 更新奇穴信息, 奇穴弹窗展示, 更新奇穴弹窗展示 } = props\n\n  const [form] = Form.useForm()\n\n  const handleChangeQixue = () => {\n    setTimeout(() => {\n      form?.validateFields().then((values) => {\n        const newArray = Object.keys(values).map((key) => {\n          return values[key] as string\n        })\n        更新奇穴信息(newArray)\n      })\n    }, 0)\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    奇穴信息.map((item, index) => {\n      obj[index] = item || 当前奇穴信息[index]\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [奇穴信息])\n\n  return (\n    <Drawer\n      title={'奇穴设置'}\n      open={奇穴弹窗展示}\n      onClose={() => 更新奇穴弹窗展示(false)}\n      placement='bottom'\n      height={140}\n      mask={false}\n      className={'qixue-simulator-set-drawer qixue-shxj'}\n    >\n      <Form form={form} className={'qixue-simulator-set-drawer-wrap'}>\n        {奇穴数据.map((重, index) => {\n          return (\n            <Form.Item className={'qixue-simulator-set-item'} name={index} key={index + 1}>\n              <Select\n                className={'qixue-simulator-set-item-select'}\n                onChange={handleChangeQixue}\n                dropdownMatchSelectWidth={false}\n                optionLabelProp='label'\n                showArrow={false}\n                popupClassName={'qixue-simulator-set-item-select-popup'}\n                // defaultValue={DEFAULT_QIXUE_VALUE[index]}\n              >\n                {重?.奇穴列表.map((奇穴) => {\n                  return (\n                    <Select.Option\n                      value={奇穴?.奇穴名称}\n                      key={奇穴?.奇穴名称}\n                      className={'qixue-simulator-set-item-select-option'}\n                      label={\n                        <div className={'qixue-simulator-label'}>\n                          <img className={'qixue-simulator-label-img'} src={奇穴?.奇穴图片} />\n                          <span className={'qixue-simulator-label-text'}>{奇穴?.奇穴名称}</span>\n                        </div>\n                      }\n                    >\n                      <img className={'qixue-simulator-set-item-select-img'} src={奇穴?.奇穴图片} />\n                      <span className={'qixue-simulator-set-item-select-text'}>\n                        {奇穴?.奇穴名称}\n                      </span>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          )\n        })}\n      </Form>\n    </Drawer>\n  )\n}\n\nexport default QixueSetModal\n"],"names":["props","cycle","设置自定义循环保存弹窗","清空循环","起手驰风","设置起手驰风","快速导入循环","更新奇穴弹窗展示","更新奇穴信息","加速等级","更新加速等级","模拟信息","网络延迟","更新网络延迟","自定义循环","useAppSelector","state","data","自定义循环列表","快捷添加循环","名称","类型","数据源","快速导入默认循环","当前循环数据","find","item","技能序列信息","技能序列","map","技能基础数据","a","技能名称","filter","奇穴","className","content","href","target","rel","checked","onChange","e","size","value","options","Array","from","length","v","i","label","延迟设定","overlay","onClick","index","title","danger","type","disabled","循环执行结果","rest","buff","原始Buff数据","src","图标","技能","删除循环技能","buff覆盖数据","更新buff覆盖数据","技能释放时间","Math","round","实际释放时间","每秒郭氏帧","间隔CD","计划释放时间","剩余秒","索引","循环异常信息","异常索引","是否异常","当前异常","技能释放结果","技能释放记录结果","当前是否需要高亮展示在buff覆盖中","useMemo","cls","classNames","count","offset","onMouseEnter","造成buff数据","buff名称","buff开始时间","buff结束时间","onMouseLeave","实际伤害技能","重要buff列表","wrap","异常信息","信息","CloseCircleFilled","伤害段数","获取当前数据","奇穴数据","当前奇穴信息","奇穴信息","奇穴弹窗展示","Form","form","handleChangeQixue","setTimeout","validateFields","then","values","newArray","Object","keys","key","useEffect","obj","setFieldsValue","open","onClose","placement","height","mask","重","name","dropdownMatchSelectWidth","optionLabelProp","showArrow","popupClassName","奇穴列表","奇穴名称","奇穴图片","起手承契","设置起手承契","更新宠物顺序","大橙武模拟","显示标鹄层数","更新显示标鹄层数","额外配置信息","宠物顺序","判断有无橙武循环数据","判断开始释放时间","开始读条时间","读条时间","moshiyinyu","chifengmingjiao","释放时标鹄层数","不显示标鹄层数"],"sourceRoot":""}