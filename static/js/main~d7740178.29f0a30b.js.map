{"version":3,"file":"static/js/main~d7740178.29f0a30b.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/AutoSkillListContent/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleModalHeader/index.tsx","功能模块/基础设置/基础设置标题/保存方案/SaveCustomProjectModal/index.tsx","组件/Layout/背景图/index.ts","组件/Layout/index.tsx","组件/Layout/default.ts","组件/ValueCheckBox/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能名称 === '行云势·一' && !!模拟信息?.当前自身buff列表?.['行链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·二' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 1\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (\n      技能?.技能名称 === '行云势·三' &&\n      模拟信息?.当前自身buff列表?.['行链']?.当前层数 !== 2\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '决云势·二' && !模拟信息?.当前自身buff列表?.['决链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '横云势·二' && !模拟信息?.当前自身buff列表?.['横链']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.消耗锐意 && (模拟信息?.角色状态信息?.锐意 || 0) < 技能?.消耗锐意) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能运行状态?.当前层数 !== undefined ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '横留横',\n    技能序列: ['横云势·一', '留客雨', '横云势·二'],\n    color: 'blue',\n  },\n  {\n    名称: '停留',\n    技能序列: ['停云势', '留客雨'],\n    color: 'purple',\n  },\n  {\n    名称: '行行行',\n    技能序列: ['行云势·一', '行云势·二', '行云势·三'],\n    color: 'magenta',\n  },\n  {\n    名称: '灭孤',\n    技能序列: ['灭影追风', '孤风破浪'],\n    color: 'red',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Radio, Row, Space, Tag, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  开启武学助手: boolean\n  设置开启武学助手: (e: boolean) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 开启武学助手, 设置开启武学助手 } =\n    props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>傍身技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '傍身')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>对阵技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '对阵')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>绝技技能</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '绝技')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} style={{ width: 200 }} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={12} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n      <div className={'cycle-simulator-radio-item'}>\n        <p className={'cycle-simulator-radio-item-title'}>武学助手模式</p>\n        <Tooltip\n          title={\n            <div>\n              <p>由于现在武学助手完全没有规律</p>\n              <p>各种Bug包括但不限于</p>\n              <p>1、异常跳过技能不按顺序释放</p>\n              <p>2、相同武学助手打出不同效果</p>\n              <p>所以暂时不放开武学助手的顺序编辑功能，等待后续机制修改和研究明白再放出。</p>\n              <p style={{ fontWeight: 500 }}>\n                目前经过欧测试，武学助手自带-1段加速，开启后将增加1帧延迟\n              </p>\n            </div>\n          }\n        >\n          <Radio.Group\n            value={开启武学助手}\n            onChange={(e) => 设置开启武学助手(e?.target?.value)}\n            size='small'\n            optionType='button'\n            buttonStyle='solid'\n            // disabled\n          >\n            <Radio value={true}>开启</Radio>\n            <Radio value={false}>关闭</Radio>\n          </Radio.Group>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","/**\n * 无界武学助手技能释放序列\n */\nimport React from 'react'\n\nfunction AutoSkillListContent() {\n  return <div />\n}\n\nexport default AutoSkillListContent\n","import { Button, Dropdown, Menu, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手留层数: number\n  设置起手留层数: (e: number) => void\n  快速导入循环: (e: 循环基础技能数据类型[], 循环标记: string) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手留层数,\n    设置起手留层数,\n    快速导入循环,\n    // 更新奇穴弹窗展示,\n    // 更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息, 当前循环数据?.标记 || '')\n    // if (当前循环数据?.奇穴) {\n    //   更新奇穴信息(当前循环数据?.奇穴)\n    // }\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={起手留层数}\n          onChange={设置起手留层数}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}层披靡`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        {/* <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip> */}\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import { Alert, Form, Input, Modal, Select, Tabs, Tooltip, message } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新全部方案数据, 更新选中的方案数据 } from '@/store/data'\nimport { DEFAULT_PROJECT_NAME } from '@/数据/常量'\nimport './index.css'\n\ninterface SaveCustomProjectModalProps {\n  自定义方案保存弹窗: boolean\n  设置自定义方案保存弹窗: (e: boolean) => void\n  保存自定义方案: (名称) => void\n}\n\n// 最多保存数量\nconst LIMIT_NUM = 10\n\nfunction SaveCustomProjectModal(props: SaveCustomProjectModalProps) {\n  const { 自定义方案保存弹窗, 设置自定义方案保存弹窗, 保存自定义方案 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义方案类型, 设置自定义方案类型] = useState<string>()\n  // 自定义方案名称保存输入\n  const [自定义方案名称输入, 设置自定义方案名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖方案名, 设置覆盖方案名] = useState<string>()\n\n  const 全部方案数据 = useAppSelector((state) => state?.data?.全部方案数据)\n  const 当前方案名称 = useAppSelector((state) => state?.data?.当前方案名称)\n\n  const dispatch = useAppDispatch()\n\n  const 全部方案列表 = useMemo(() => {\n    return Object.keys(全部方案数据).map((item) => {\n      return 全部方案数据[item]\n    })\n  }, [全部方案数据])\n\n  useEffect(() => {\n    if (自定义方案保存弹窗) {\n      if (全部方案列表?.length) {\n        设置自定义方案类型('覆盖')\n      } else {\n        设置自定义方案类型('新增')\n      }\n    } else {\n      设置自定义方案类型(undefined)\n      设置自定义方案名称输入(undefined)\n      设置覆盖方案名(undefined)\n    }\n  }, [自定义方案保存弹窗, 全部方案列表])\n\n  const 保存自定义方案前 = () => {\n    const 名称 = 自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入\n    if (\n      自定义方案类型 === '新增' &&\n      全部方案列表?.some((item) => item?.方案名称 === 自定义方案名称输入)\n    ) {\n      message.error('已存在相同的方案名称，请更换')\n      return\n    }\n    保存自定义方案(名称)\n  }\n\n  // 删除自定义方案\n  const 删除方案前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除方案【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除方案(名称)\n      },\n    })\n  }\n\n  const 删除方案 = (名称) => {\n    const 新全部方案数据 = { ...全部方案数据 }\n    delete 新全部方案数据[名称]\n\n    dispatch(更新全部方案数据(新全部方案数据))\n\n    if (当前方案名称 === 名称) {\n      更新方案(DEFAULT_PROJECT_NAME)\n    }\n  }\n\n  const 更新方案 = (e) => {\n    dispatch(更新选中的方案数据(e))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义方案'\n      okButtonProps={{\n        disabled: !(自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入),\n      }}\n      open={自定义方案保存弹窗}\n      onCancel={() => 设置自定义方案保存弹窗(false)}\n      onOk={保存自定义方案前}\n      destroyOnClose\n      width={600}\n      className={'project-custom-save-modal'}\n    >\n      <Alert\n        type='success'\n        style={{ marginBottom: 12 }}\n        message='目前方案会保存当前的【装备信息】【奇穴信息】【增益信息】【选中的循环】'\n      />\n      <Tabs\n        className={'project-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义方案类型}\n        onChange={设置自定义方案类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖方案名}\n            onChange={设置覆盖方案名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的方案'}\n          >\n            {全部方案列表.map((item) => {\n              return (\n                <Select.Option value={item.方案名称} key={item.方案名称} label={item.方案名称}>\n                  <div className={'project-custom-save-label'}>\n                    <span>{item.方案名称}</span>\n                    {item.方案名称 !== DEFAULT_PROJECT_NAME ? (\n                      <span\n                        onClick={(e) => 删除方案前提示(e, item.方案名称)}\n                        className={'project-custom-save-delete'}\n                      >\n                        删除\n                      </span>\n                    ) : null}\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane\n          tab={\n            <Tooltip\n              title={全部方案列表?.length >= LIMIT_NUM ? `最多保存${LIMIT_NUM}个自定义方案` : ''}\n            >\n              新增\n            </Tooltip>\n          }\n          key='新增'\n          disabled={全部方案列表?.length >= LIMIT_NUM}\n        >\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部方案数据?.[value]) {\n                        callback('已存在相同的方案名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义方案名称输入}\n                placeholder='请输入自定义方案名称'\n                onChange={(e) => 设置自定义方案名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  )\n}\n\nexport default SaveCustomProjectModal\n","import ImgBg_1 from './1.jpeg'\n// import ImgBg_2 from './2.jpeg'\n\n// export default [ImgBg_1, ImgBg_2]\nexport default [ImgBg_1]\n","import React from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { hexToRgbaToDark } from '@/工具函数/help'\n\nimport 全局背景 from './背景图'\nimport { 默认系统渐变色 } from './default'\nimport './index.css'\n\nconst 系统配置 = 获取当前数据()?.系统配置 || {}\n\nconst 背景图 = (系统配置.背景图 || []).concat(全局背景)\nconst 背景色渐变 = 系统配置.背景色渐变 || 默认系统渐变色(系统配置.主题色)\n\ninterface LayoutProps {\n  children: any\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const { children } = props\n  const 背景图片显示状态 = useAppSelector((state) => state?.system?.背景图片显示状态)\n\n  // 丛长度为N的数组中随机取一个值\n  function getRandomFromArray(arr, n) {\n    const randomIndex = Math.floor(Math.random() * n)\n    return arr[randomIndex]\n  }\n\n  return (\n    <div className='layout'>\n      <div\n        className='layout-wrapper'\n        style={{\n          backgroundImage: 背景色渐变,\n        }}\n      >\n        {children}\n      </div>\n      {背景图片显示状态 ? (\n        <img className='layout-bg' src={getRandomFromArray(背景图, 背景图?.length)} alt='' />\n      ) : (\n        <div\n          className={'layout-bg-color'}\n          style={{ backgroundColor: `${hexToRgbaToDark(系统配置.主题色, '1', 225)}` }}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Layout\n","import { hexToRgbaToDark } from '@/工具函数/help'\n\nexport const 默认系统渐变色 = (主题色) => {\n  const color1 = hexToRgbaToDark(主题色, '0.3', 35)\n  const color2 = hexToRgbaToDark(主题色, '0.05', 25)\n  return `linear-gradient(to right, ${color1} 20%, ${color2} 100%)`\n}\n","import { Checkbox } from 'antd'\nimport React from 'react'\n\nfunction ValueCheckBox(props) {\n  const { value, onChange, ...options } = props\n  const beforeOnChange = (e) => {\n    onChange && onChange(e?.target?.checked ? 1 : 0)\n  }\n  return <Checkbox checked={!!value} onChange={beforeOnChange} {...options} />\n}\n\nexport default ValueCheckBox\n"],"names":["props","技能","模拟信息","onClick","className","rest","释放等待CD","计算可以释放时技能CD","技能运行状态","当前各技能运行状态","技能名称","异常信息","useMemo","禁用信息","当前自身buff列表","当前层数","是否禁用","异常描述","ERROR_ACTION","信息","消耗锐意","角色状态信息","锐意","角标数字","cls","classNames","title","count","offset","src","图标","undefined","技能原始名称","GCD","检查GCD","当前GCD组","可以释放时间","当前时间","技能CD","计划下次充能时间点","Math","round","每秒郭氏帧","GCD组","校验GCD组","技能GCD组","快捷添加数据","名称","技能序列","color","新增循环技能","批量新增循环","处理循环结果对象","开启武学助手","设置开启武学助手","size","wrap","技能基础数据","filter","item","创建循环不可选","技能类型","map","完整循环","style","width","gutter","span","数据","技能原始数据","find","a","length","批量新增循环技能","fontWeight","value","onChange","e","target","optionType","buttonStyle","cycle","设置自定义循环保存弹窗","清空循环","起手留层数","设置起手留层数","快速导入循环","加速等级","更新加速等级","网络延迟","更新网络延迟","自定义循环","useAppSelector","state","data","自定义循环列表","快捷添加循环","类型","数据源","快速导入默认循环","当前循环数据","技能序列信息","标记","content","href","rel","options","Array","from","v","i","label","延迟设定","overlay","index","danger","type","disabled","循环执行结果","自定义方案保存弹窗","设置自定义方案保存弹窗","保存自定义方案","useState","自定义方案类型","设置自定义方案类型","自定义方案名称输入","设置自定义方案名称输入","覆盖方案名","设置覆盖方案名","全部方案数据","当前方案名称","dispatch","useAppDispatch","全部方案列表","Object","keys","useEffect","删除方案","新全部方案数据","更新全部方案数据","更新方案","DEFAULT_PROJECT_NAME","更新选中的方案数据","centered","okButtonProps","open","onCancel","onOk","some","方案名称","message","destroyOnClose","marginBottom","activeKey","tab","optionLabelProp","placeholder","stopPropagation","preventDefault","Modal","okText","删除方案前提示","rules","validator","_","callback","系统配置","获取当前数据","背景图","concat","全局背景","背景色渐变","主题色","color1","hexToRgbaToDark","color2","默认系统渐变色","arr","n","children","背景图片显示状态","system","backgroundImage","floor","random","alt","backgroundColor","checked"],"sourceRoot":""}