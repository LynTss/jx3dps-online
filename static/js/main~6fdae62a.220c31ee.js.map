{"version":3,"file":"static/js/main~6fdae62a.220c31ee.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/AddPetBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能类型 !== '其他' && 模拟信息?.角色状态信息?.体态 !== 技能?.技能类型) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.体态错误?.信息,\n      }\n    } else if (技能?.技能名称 === '断' && (模拟信息?.角色状态信息?.锐意 || 0) < 100) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    } else if (技能?.技能名称 === '吃影子' && !模拟信息?.当前自身buff列表?.['身形']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.身形不足?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能运行状态?.当前层数 !== undefined ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '三沧孤',\n    技能序列: ['沧', '沧', '沧', '孤'],\n    color: 'blue',\n  },\n  {\n    名称: '决留行',\n    技能序列: ['决', '留', '行'],\n    color: 'magenta',\n  },\n  {\n    名称: '行留断',\n    技能序列: ['行', '留', '断'],\n    color: 'green',\n  },\n  {\n    名称: '横三沧孤',\n    技能序列: ['横', '沧', '沧', '沧', '孤'],\n    color: 'purple',\n  },\n  {\n    名称: '行留行',\n    技能序列: ['行', '留', '行'],\n    color: 'volcano',\n  },\n  {\n    名称: '停留断',\n    技能序列: ['停', '留', '断'],\n    color: 'red',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 大橙武模拟 } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>流云势法</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '单刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>破浪三式</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '双刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  style={大橙武模拟 ? { padding: '0 6px' } : { padding: '0 8px' }}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={8} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\nimport moshiyinyu from '../../assets/Skill/moshiyinyu.png'\nimport chifengmingjiao from '../../assets/Skill/chifengmingjiao.png'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (\n      技能?.技能名称 === '白羽流星' &&\n      !模拟信息?.当前自身buff列表?.['劲风簇追']?.当前层数 &&\n      !模拟信息?.当前自身buff列表?.['饮羽簇追']?.当前层数\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    //  else if (技能?.消耗箭数 && 模拟信息?.角色状态信息?.箭数 < 技能?.消耗箭数) {\n    //   return {\n    //     是否禁用: true,\n    //     异常描述: ERROR_ACTION?.箭数不足?.信息,\n    //   }\n    // }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  const 技能显示信息 = useMemo(() => {\n    if (技能?.技能名称 === '白羽流星') {\n      if (模拟信息?.当前自身buff列表?.['劲风簇追']?.当前层数) {\n        return {\n          ...技能,\n          技能原始名称: '弛风鸣角',\n          图标: chifengmingjiao,\n        }\n      } else if (模拟信息?.当前自身buff列表?.['饮羽簇追']?.当前层数) {\n        return {\n          ...技能,\n          技能原始名称: '没石饮羽',\n          图标: moshiyinyu,\n        }\n      } else {\n        return 技能\n      }\n    } else {\n      return 技能\n    }\n  }, [技能, 模拟信息])\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能显示信息?.图标} />\n          {技能运行状态?.当前层数 !== undefined &&\n          技能?.最大充能层数 &&\n          技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能显示信息?.技能原始名称 || 技能显示信息?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: 'CBCA',\n    技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '劲风簇'],\n    color: 'blue',\n  },\n  // {\n  //   名称: 'AAABCA',\n  //   技能序列: [\n  //     '寒更晓箭',\n  //     '金乌见坠',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '饮羽簇',\n  //     '白羽流星',\n  //     '劲风簇',\n  //   ],\n  //   color: 'magenta',\n  // },\n  {\n    名称: 'CBC引A',\n    技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '引风唤灵', '劲风簇'],\n    color: 'green',\n  },\n  // {\n  //   名称: 'AAABC引A',\n  //   技能序列: [\n  //     '寒更晓箭',\n  //     '金乌见坠',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '饮羽簇',\n  //     '白羽流星',\n  //     '引风唤灵',\n  //     '劲风簇',\n  //   ],\n  //   color: 'purple',\n  // },\n  // {\n  //   名称: '行留断',\n  //   技能序列: ['行', '留', '断'],\n  //   color: 'green',\n  // },\n  // {\n  //   名称: '横三沧孤',\n  //   技能序列: ['横', '沧', '沧', '沧', '孤'],\n  //   color: 'purple',\n  // },\n  // {\n  //   名称: '行留行',\n  //   技能序列: ['行', '留', '行'],\n  //   color: 'volcano',\n  // },\n  // {\n  //   名称: '停留断',\n  //   技能序列: ['停', '留', '断'],\n  //   color: 'red',\n  // },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import React from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { 宠物基础数据 } from '../../../constant/skill'\nimport './index.css'\n\nfunction AddPetBtns(props) {\n  const { 宠物顺序, 更新宠物顺序 } = props\n  return (\n    <div className={'cycle-simulator-pet-btns'}>\n      <ReactSortable\n        list={宠物顺序.map((i) => Object.assign(i, { id: i }))}\n        setList={(e) => {\n          更新宠物顺序(e.map((item) => item.id))\n        }}\n        animation={150}\n      >\n        {(宠物顺序 || [])\n          .map((item) => {\n            const 宠物数据 = 宠物基础数据?.[item]\n            if (宠物数据) {\n              return <img className={'cycle-simulator-pets-btn'} src={宠物数据?.图标} key={item} />\n            } else {\n              return null\n            }\n          })\n          .filter((item) => item)}\n      </ReactSortable>\n    </div>\n  )\n}\n\nexport default AddPetBtns\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\nimport AddPetBtns from './AddPetBtns'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  宠物顺序: string[]\n  更新宠物顺序: (e: string[]) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const {\n    新增循环技能,\n    批量新增循环,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    宠物顺序,\n    更新宠物顺序,\n  } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  const hrefDev = location.href?.includes('dev=1')\n  const DEV = hrefDev\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>箭系</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!奇穴信息?.includes('朝仪万汇') && item?.技能名称 === '朝仪万汇') {\n                return false\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '箭系'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>万方携游</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '宠物')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              if (!DEV && item?.技能名称 === '空弦惊雁') {\n                return false\n              }\n              if (item?.显示类型 === '奇穴技能') {\n                const 依赖名称 = item?.依赖奇穴名 || item?.技能名称\n                return 奇穴信息?.includes(依赖名称)\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      {/* 添加宠物 */}\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>宠物</span>\n        <AddPetBtns 宠物顺序={宠物顺序} 更新宠物顺序={更新宠物顺序} />\n      </div>\n      <div className={`cycle-simulator-setting-item cycle-simulator-setting-fast-item`}>\n        <span className={'wanling-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={24} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n"],"names":["props","技能","模拟信息","onClick","className","rest","释放等待CD","计算可以释放时技能CD","技能运行状态","当前各技能运行状态","技能名称","异常信息","useMemo","禁用信息","技能类型","角色状态信息","体态","是否禁用","异常描述","ERROR_ACTION","信息","锐意","当前自身buff列表","当前层数","角标数字","cls","classNames","title","count","offset","src","图标","undefined","技能原始名称","GCD","检查GCD","当前GCD组","可以释放时间","当前时间","技能CD","计划下次充能时间点","Math","round","每秒郭氏帧","GCD组","校验GCD组","技能GCD组","快捷添加数据","名称","技能序列","color","新增循环技能","批量新增循环","处理循环结果对象","大橙武模拟","size","wrap","技能基础数据","filter","item","创建循环不可选","map","完整循环","显示类型","style","padding","gutter","span","数据","技能原始数据","find","a","length","批量新增循环技能","技能显示信息","chifengmingjiao","moshiyinyu","最大充能层数","宠物顺序","更新宠物顺序","ReactSortable","list","i","Object","assign","id","setList","e","animation","宠物数据","宠物基础数据","奇穴信息","DEV","location","href","includes","依赖名称","依赖奇穴名"],"sourceRoot":""}