{"version":3,"file":"static/js/main~d7c9b9ef.3b75c119.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/index.tsx","功能模块/基础设置/公用设置/循环选择/index.tsx","功能模块/基础设置/基础设置标题/保存方案/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/秒伤结果对比/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/装备选择/附魔选择/index.tsx","功能模块/基础设置/面板信息/index.tsx","功能模块/系统工具/页面右下角工具/index.tsx","功能模块/系统说明/当前版本/index.tsx","页面/index.tsx"],"sourcesContent":["// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\n\nimport { CopyOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\n\nimport 循环模拟技能基础数据 from './constant/skill'\n\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\nimport { 每秒郭氏帧 } from './constant'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport QixueSetModal from './components/QixueSetModal'\nimport { 循环详情 } from '@/@types/循环'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 更新当前自定义循环列表 } from '@/store/data'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 95,\n  2: 4241,\n  3: 8857,\n  4: 13851,\n  5: 19316,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      锐意: 0,\n      体态: '双刀',\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前GCD组: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const 大橙武模拟 = useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n  // 当前网络延迟\n  const 网络按键延迟 = 0\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  const [起手驰风, 设置起手驰风] = useState<boolean>(true)\n\n  // 奇穴\n  const reduxQixuedata = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新网络延迟(外部延迟)\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, reduxQixuedata, 外部加速值])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 起手驰风, 网络按键延迟, 加速值, 网络延迟, 奇穴信息])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      起手驰风,\n      大橙武模拟,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 战斗时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data, 战斗时间)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 战斗时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 战斗时间 > 0 ? 秒伤 : 0,\n      总伤: 战斗时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    const newCycle = [...(cycle || []), item]\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    const newCycle = [...(cycle || []), ...item]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能进入双刀 =\n          (奇穴信息?.includes('威声') && data?.技能名称 === '灭') || data?.技能名称 === '断'\n\n        if (打完本技能进入双刀) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    const newCycle = cycle.concat(轮次)\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志, 模拟结果?.当前时间)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息])\n\n  return (\n    <>\n      <Button\n        danger\n        disabled={disabled}\n        size='small'\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            起手驰风={起手驰风}\n            设置起手驰风={设置起手驰风}\n            快速导入循环={(循环) => setCycle(循环)}\n            更新奇穴信息={更新奇穴信息}\n            更新奇穴弹窗展示={更新奇穴弹窗展示}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            模拟信息={模拟信息}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            更新buff覆盖数据={更新buff覆盖数据}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default CycleSimulator\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select } from 'antd'\nimport { 更新方案数据 } from '@/store/data'\nimport classnames from 'classnames'\nimport useCycle from '@/hooks/use-cycle'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport './index.css'\n\nfunction 循环选择() {\n  const dispatch = useAppDispatch()\n  const 当前计算循环名称 = useAppSelector((state) => state?.data?.当前计算循环名称)\n\n  const { 全部循环 = [] } = useCycle()\n\n  const 切换循环 = (val) => {\n    const 目标循环数据 = 全部循环?.find((item) => item?.名称 === val)\n    dispatch(更新方案数据({ 属性: '当前计算循环名称', 数据: val }))\n    dispatch(更新方案数据({ 属性: '当前奇穴信息', 数据: 目标循环数据?.奇穴 }))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='common-item'>\n      <h1 className='common-label'>循环</h1>\n      <div className='common-content'>\n        <Select\n          value={当前计算循环名称}\n          className='cycle-select'\n          onChange={(v) => {\n            切换循环(v)\n          }}\n          optionFilterProp='label'\n        >\n          {全部循环\n            .filter((item) => !item.默认隐藏)\n            .map((item) => {\n              const cls = classnames(\n                'cycle-select-item-tag',\n                item.标记 === '紫武' ? 'cycle-select-item-tag-purple' : '',\n                item.标记 === '橙武' ? 'cycle-select-item-tag-orange' : ''\n              )\n              return (\n                <Select.Option value={item?.名称} key={item.名称} label={item.名称}>\n                  <div className='cycle-select-item'>\n                    {item.标题 || item.名称}\n                    <span className={cls}>{item.标记}</span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n        </Select>\n      </div>\n    </div>\n  )\n}\n\nexport default 循环选择\n","import { Button } from 'antd'\nimport React, { useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 方案数据类型 } from '@/@types/方案'\nimport { 更新全部方案数据, 更新当前方案名称 } from '@/store/data'\nimport SaveCustomProjectModal from './SaveCustomProjectModal'\n\nfunction SaveProject() {\n  const [自定义方案保存弹窗, 设置自定义方案保存弹窗] = useState<boolean>(false)\n  const 装备信息 = useAppSelector((state) => state.data.装备信息)\n  const 当前计算循环名称 = useAppSelector((state) => state.data.当前计算循环名称)\n  const 当前奇穴信息 = useAppSelector((state) => state.data.当前奇穴信息)\n  const 增益启用 = useAppSelector((state) => state.data.增益启用)\n  const 增益数据 = useAppSelector((state) => state.data.增益数据)\n  const 全部方案数据 = useAppSelector((state) => state.data.全部方案数据)\n  const dispatch = useAppDispatch()\n\n  const 保存方案 = (名称) => {\n    const 新方案: 方案数据类型 = {\n      方案名称: 名称,\n      装备信息,\n      当前计算循环名称,\n      当前奇穴信息,\n      增益启用,\n      增益数据,\n    }\n    const 新全部方案数据 = { ...全部方案数据 }\n    新全部方案数据[名称] = 新方案\n\n    dispatch(更新当前方案名称(名称))\n    dispatch(更新全部方案数据(新全部方案数据))\n    设置自定义方案保存弹窗(false)\n  }\n  return (\n    <>\n      <Button\n        size='small'\n        className={'common-title-project'}\n        onClick={() => 设置自定义方案保存弹窗(true)}\n      >\n        保存方案\n      </Button>\n      <SaveCustomProjectModal\n        自定义方案保存弹窗={自定义方案保存弹窗}\n        设置自定义方案保存弹窗={设置自定义方案保存弹窗}\n        保存自定义方案={保存方案}\n      />\n    </>\n  )\n}\n\nexport default SaveProject\n","import { useAppSelector } from '@/hooks'\nimport React from 'react'\n\nfunction 秒伤结果对比({ 更换装备后秒伤 }) {\n  const 当前计算结果秒伤 = useAppSelector((state) => state?.data?.当前计算结果)?.秒伤\n  return 当前计算结果秒伤 !== 更换装备后秒伤 && 更换装备后秒伤 ? (\n    <div className={'dps-diff'}>\n      <div className='dps-diff-item'>\n        <div className='dps-diff-title'>更换前</div>\n        <p className='dps-diff-dps'>{当前计算结果秒伤}</p>\n      </div>\n      <div className='dps-diff-item'>\n        <div className='dps-diff-title'>替换后</div>\n        <p\n          className={`dps-diff-dps ${\n            更换装备后秒伤 > 当前计算结果秒伤 ? 'dps-diff-up' : 'dps-diff-down'\n          }`}\n        >\n          {更换装备后秒伤}\n        </p>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default 秒伤结果对比\n","import { Select, SelectProps } from 'antd'\nimport React from 'react'\nimport { 附魔数据类型 } from '@/@types/附魔'\nimport './index.css'\n\ninterface 附魔选择入参 extends SelectProps {\n  list: 附魔数据类型[]\n}\n\nfunction 附魔选择(props: 附魔选择入参) {\n  const { list, ...rest } = props\n\n  return (\n    <Select placeholder='选择附魔' allowClear className='fumo-select' {...rest}>\n      {list.map((item) => {\n        return <Select.Option key={item.附魔名称}>{item.附魔名称}</Select.Option>\n      })}\n    </Select>\n  )\n}\n\nexport default 附魔选择\n","import React, { useMemo, useState } from 'react'\nimport { Checkbox, Tooltip } from 'antd'\n\nimport { 自身属性系数 } from '@/数据/常量'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { QuestionCircleOutlined } from '@ant-design/icons'\nimport { useAppSelector } from '@/hooks'\nimport useCycle from '@/hooks/use-cycle'\nimport { 角色基础属性类型 } from '@/@types/角色'\n\nimport { 获取判断增益后技能系数 } from '@/计算模块/统一工具函数/技能增益启用计算'\nimport DpsKernelOptimizer from '@/计算模块/dps-kernel-optimizer'\nimport { 获取计算目标信息 } from '@/计算模块/统一工具函数/工具函数'\n\nimport { 获取角色需要展示的面板数据 } from './工具'\nimport './index.css'\nimport { 获取加速等级 } from '@/工具函数/data'\n\nconst { 主属性, 性能功能关闭数组 = [] } = 获取当前数据()\n\nfunction 面板信息() {\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const 装备信息 = useAppSelector((state) => state?.data?.装备信息)\n  const 当前输出计算目标名称 = useAppSelector((state) => state?.data?.当前输出计算目标名称)\n  const 当前秘籍信息 = useAppSelector((state) => state?.data?.当前秘籍信息)\n  const 增益数据 = useAppSelector((state) => state?.data?.增益数据)\n  const 增益启用 = useAppSelector((state) => state?.data?.增益启用)\n  const 当前计算目标 = 获取计算目标信息(当前输出计算目标名称)\n\n  const { 计算循环详情, 当前循环信息 } = useCycle()\n\n  const [开启优化算法, 切换开启优化算法] = useState<boolean>(false)\n  const [显示增益后面板, 切换显示增益后面板] = useState<boolean>(false)\n\n  const mapKeyList = [主属性, '攻击', '会心', '会效', '破防', '无双', '破招', '全能', '加速']\n\n  const 显示数据 = useMemo(() => {\n    return 获取角色需要展示的面板数据({\n      装备信息,\n      当前奇穴信息,\n      增益数据,\n      增益启用,\n      显示增益后面板,\n    })\n  }, [装备信息, 当前奇穴信息, 增益数据, 增益启用, 显示增益后面板])\n\n  const 最大秒伤数据: any = useMemo(() => {\n    if (!开启优化算法) {\n      return {}\n    }\n    if (显示数据?.基础攻击 && 计算循环详情?.技能详情?.length) {\n      const 计算后技能基础数据 = 获取判断增益后技能系数({\n        秘籍信息: 当前秘籍信息,\n        奇穴数据: 当前奇穴信息,\n        装备增益: 装备信息?.装备增益,\n      })\n\n      const res = DpsKernelOptimizer({\n        计算循环: 计算循环详情?.技能详情,\n        当前装备信息: 装备信息,\n        当前输出计算目标: 当前计算目标,\n        技能基础数据: 计算后技能基础数据,\n        增益启用,\n        增益数据,\n        快照计算: 当前循环信息?.快照计算 || [],\n      })\n\n      // 计算最大秒伤数据的面板\n      const 面板 = 获取角色需要展示的面板数据({\n        装备信息: {\n          ...装备信息,\n          装备基础属性: res?.maxCharacterData?.装备基础属性,\n        },\n        当前奇穴信息,\n        增益数据,\n        增益启用,\n        显示增益后面板,\n      })\n\n      return { ...res, 面板 }\n    } else {\n      return {}\n    }\n  }, [\n    当前计算目标,\n    当前循环信息,\n    计算循环详情,\n    装备信息,\n    当前奇穴信息,\n    增益启用,\n    增益数据,\n    开启优化算法,\n    显示增益后面板,\n  ])\n\n  return (\n    <div className={'character-show'}>\n      <div className={'character-title-wrapper'}>\n        <h1 className={'character-title'}>角色属性</h1>\n        <div>\n          <Checkbox\n            checked={显示增益后面板}\n            onChange={(e) => 切换显示增益后面板(e?.target?.checked)}\n          >\n            <Tooltip\n              title={\n                <div>\n                  <p>开启后将展示阵眼常驻增益，小吃小药、团队宴席增益</p>\n                  <p>不显示其他团队增益的面板提升</p>\n                </div>\n              }\n            >\n              增益面板\n            </Tooltip>\n          </Checkbox>\n          {!性能功能关闭数组?.includes('优化算法') ? (\n            <Checkbox checked={开启优化算法} onChange={(e) => 切换开启优化算法(e?.target?.checked)}>\n              优化算法\n              <Tooltip title='采用拟牛顿法对属性做优化演算，仅能代表在当前已穿装备总属性容量不变的情况下的，各属性近似最优收益方向。仅作参考，开启后会消耗额外性能。'>\n                <QuestionCircleOutlined className={'character-max-title-tip'} />\n              </Tooltip>\n            </Checkbox>\n          ) : null}\n        </div>\n      </div>\n      {mapKeyList.map((item) => {\n        const 最优属性: any =\n          开启优化算法 && 最大秒伤数据?.面板\n            ? 获取最优属性展示(item, 最大秒伤数据?.面板, 显示数据)\n            : {}\n        return (\n          <div className='character-item' key={item}>\n            <h1 className='character-label'>{item}</h1>\n            <Tooltip placement='topLeft' title={() => 获取面板显示数据数值(item, 显示数据)}>\n              <div className='character-content'>\n                <span className='character-content-normal'>{获取面板显示数据(item, 显示数据)}</span>\n                {开启优化算法 && 最优属性 && 最优属性?.value !== '-1' ? (\n                  <span\n                    className={`character-content-max ${\n                      !最优属性?.upperStatus ? 'character-content-upper' : 'character-content-down'\n                    }`}\n                  >\n                    {最优属性?.value}\n                  </span>\n                ) : null}\n              </div>\n            </Tooltip>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default 面板信息\n\n// 获取属性展示\nexport const 获取面板显示数据 = (key: string, 角色最终属性: 角色基础属性类型) => {\n  switch (key) {\n    case 主属性:\n      return 角色最终属性?.[主属性] || 0\n    case '攻击':\n      return 角色最终属性.面板攻击 || 0\n    case '会心':\n      return ((角色最终属性.会心等级 / 自身属性系数.会心) * 100).toFixed(2) + `%`\n    case '会效':\n      return ((角色最终属性.会心效果等级 / 自身属性系数.会效) * 100 + 175).toFixed(2) + `%`\n    case '破防':\n      return ((角色最终属性.破防等级 / 自身属性系数.破防) * 100).toFixed(2) + `%`\n    case '无双':\n      return ((角色最终属性.无双等级 / 自身属性系数.无双) * 100).toFixed(2) + `%`\n    case '破招':\n      return 角色最终属性.破招值 || 0\n    case '全能':\n      return 角色最终属性.全能等级 || 0\n    case '加速':\n      return (\n        <>\n          <span>{(((角色最终属性.加速等级 || 0) / 自身属性系数.急速) * 100).toFixed(2) + `%`}</span>\n          <span>{加速等级枚举[获取加速等级(角色最终属性.加速等级 || 0)]}</span>\n        </>\n      )\n  }\n  return ''\n}\nconst 加速等级枚举 = ['零段加速', '一段加速', '二段加速', '三段加速', '四段加速', '五段加速']\n\nexport const 获取面板显示数据数值 = (key: string, 角色最终属性: 角色基础属性类型) => {\n  switch (key) {\n    case 主属性:\n      return 角色最终属性?.[主属性] || 0\n    case '攻击':\n      return (\n        <div>\n          <p>基础攻击：{角色最终属性.基础攻击 || 0}</p>\n          <p>面板攻击：{角色最终属性.面板攻击 || 0}</p>\n        </div>\n      )\n    case '会心':\n      return 角色最终属性.会心等级\n    case '会效':\n      return 角色最终属性.会心效果等级\n    case '破防':\n      return 角色最终属性.破防等级\n    case '无双':\n      return 角色最终属性.无双等级\n    case '破招':\n      return 角色最终属性.破招值 || 0\n    case '全能':\n      return 角色最终属性.全能等级\n    case '加速':\n      return 角色最终属性.加速等级\n  }\n  return ''\n}\n\n// 获取最优属性展示\nexport const 获取最优属性展示 = (key: string, 装备基础属性: 角色基础属性类型, oldData) => {\n  const data = 装备基础属性\n  let value: number | string | undefined = '-1'\n  let upperStatus = false\n  switch (key) {\n    case '会心':\n      value = ((data.会心等级 / 自身属性系数.会心) * 100).toFixed(2) + `%`\n      upperStatus = data.会心等级 >= oldData?.会心等级\n      break\n    case '破防':\n      value = ((data.破防等级 / 自身属性系数.破防) * 100).toFixed(2) + `%`\n      upperStatus = data.破防等级 >= oldData?.破防等级\n      break\n    case '无双':\n      value = ((data.无双等级 / 自身属性系数.无双) * 100).toFixed(2) + `%`\n      upperStatus = data.无双等级 >= oldData?.无双等级\n      break\n    case '破招':\n      value = Math.floor(data.破招值) || 0\n      upperStatus = data.破招值 >= oldData?.破招值\n      break\n    default:\n      break\n  }\n\n  return { value, upperStatus }\n}\n","import { Modal } from 'antd'\nimport React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新背景图片显示状态 } from '@/store/system'\nimport './index.css'\n\nfunction 页面右下角工具() {\n  const 背景图片显示状态 = useAppSelector((state) => state?.system?.背景图片显示状态)\n  const dispatch = useAppDispatch()\n\n  const clearCache = () => {\n    Modal.confirm({\n      title:\n        '⚠️警告，清除缓存将清空你的配装、增益等设置。清除后需重新配装。同时会清除在线链接其他门派的相同信息，请谨慎使用。',\n      content: '仅作为计算数据异常、页面异常时使用。',\n      onOk: () => {\n        localStorage.clear()\n        window?.location?.reload()\n      },\n    })\n  }\n\n  const handleChangeBackground = () => {\n    dispatch(更新背景图片显示状态(!背景图片显示状态))\n  }\n\n  return (\n    <div className='cache-wrapper'>\n      <span className={'cache-btn'}>特别感谢「可乐」提供的服务器支持</span>\n      <span className='cache-btn' onClick={handleChangeBackground}>\n        {+(背景图片显示状态 || '') ? '关闭背景' : '开启背景'}\n      </span>\n      <span className='cache-btn' onClick={() => clearCache()}>\n        清除缓存\n      </span>\n    </div>\n  )\n}\n\nexport default 页面右下角工具\n","import { Button, Modal, Timeline } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport log_data from '@/更新日志'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 缓存映射 } = 获取当前数据()\n// const 当前问卷调查标识 = '2023-12'\n\nfunction Log() {\n  // 更新日志\n  const [visible, setVisible] = useState(false)\n  // 新版本公告\n  const [newVersionModalVisible, setNewVersionModalVisible] = useState(false)\n  // 使用须知\n  const [noticeVisible, setNoticeVisible] = useState(false)\n  // 问卷调查\n  // const [questionVisible, setQuestionVisible] = useState(false)\n\n  useEffect(() => {\n    checkLogVersion()\n    checkNotice()\n    // checkQuestion()\n  }, [])\n\n  const checkLogVersion = () => {\n    const storageVersion = localStorage.getItem(缓存映射.日志版本)\n    if (!storageVersion || storageVersion !== log_data?.[0]?.version) {\n      setNewVersionModalVisible(true)\n    }\n  }\n\n  const checkNotice = () => {\n    const storageNotice = localStorage.getItem(缓存映射.使用说明)\n    if (!storageNotice) {\n      setNoticeVisible(true)\n    }\n  }\n\n  const handleCloseNew = () => {\n    localStorage?.setItem(缓存映射.日志版本, log_data?.[0]?.version)\n    setNewVersionModalVisible(false)\n  }\n\n  const handleCloseNotice = () => {\n    localStorage?.setItem(缓存映射.使用说明, '1')\n    setNoticeVisible(false)\n  }\n\n  return (\n    <div className='log-wrap'>\n      <span>当前版本: {log_data?.[0]?.version}</span>\n      {/* <span onClick={() => setNoticeVisible(true)}>使用前声明</span> */}\n      <span className='log' onClick={() => setVisible(true)}>\n        更新日志\n      </span>\n      <Modal\n        width={800}\n        title='新版本公告'\n        centered\n        open={newVersionModalVisible}\n        onCancel={handleCloseNew}\n        footer={\n          <Button onClick={handleCloseNew} type='primary'>\n            知道了\n          </Button>\n        }\n      >\n        <Timeline className={'log-line'}>\n          <Timeline.Item style={{ padding: 0 }}>\n            <div className='log-content-text'>\n              {Array.isArray(log_data?.[0].content)\n                ? log_data?.[0].content.map((a, index) => {\n                    return <div key={index}>{a}</div>\n                  })\n                : log_data?.[0].content}\n            </div>\n            <div className='log-right'>\n              <div className='log-version'>{log_data?.[0].version}</div>\n              <div className='log-date'>{log_data?.[0].date || '-'}</div>\n            </div>\n          </Timeline.Item>\n        </Timeline>\n      </Modal>\n      <Modal\n        width={800}\n        title='更新日志'\n        centered\n        className='log-modal'\n        open={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n      >\n        <Timeline className={'log-line'}>\n          {log_data.map((item) => {\n            return (\n              <Timeline.Item key={item.version}>\n                <div className='log-content-text'>\n                  {Array.isArray(item.content)\n                    ? item.content.map((a: any) => {\n                        return <div key={a}>{a}</div>\n                      })\n                    : item.content}\n                </div>\n                <div className='log-right'>\n                  <p className='log-version'>{item.version}</p>\n                  <p className='log-date'>{item.date || '-'}</p>\n                </div>\n              </Timeline.Item>\n            )\n          })}\n        </Timeline>\n      </Modal>\n      <Modal\n        width={800}\n        open={noticeVisible}\n        onCancel={handleCloseNotice}\n        maskClosable={false}\n        title='声明'\n        closable={false}\n        centered\n        footer={\n          <Button onClick={handleCloseNotice} type='primary'>\n            使用本计算器则视作你已经知晓并同意此声明。\n          </Button>\n        }\n      >\n        <p>计算器只是木桩/理想环境下伤害模拟，仅能用于辅助配装和收益参考。不支持出警dps。</p>\n        <p>严禁使用本计算器进行跨心法/门派比较。</p>\n        <p>一切数据仅供参考，最终解释权归作者所有。</p>\n      </Modal>\n      {/* 问卷调查 */}\n      {/* <Modal\n        title={'问卷调查'}\n        footer={false}\n        open={questionVisible}\n        onCancel={() => {\n          setQuestionVisible(false)\n        }}\n      >\n        <Alert message={'本问卷由问卷星提供，您可以放心使用'} />\n        <p className={'question-link'}>\n          <a href='https://www.wjx.cn/vm/rNS26pu.aspx#' target='_blank' rel='noreferrer'>\n            点击这里参与问卷调查（一共11题）\n          </a>\n        </p>\n        <div className={'question-link-img-wrap'}>\n          <img src={QuestionImg} className={'question-link-img'} />\n          <p className={'question-link-img-text'}>您也可以通过手机扫码参与调查</p>\n        </div>\n      </Modal> */}\n    </div>\n  )\n}\n\nexport default Log\n","import React, { useEffect } from 'react'\nimport 基础设置 from '@/功能模块/基础设置'\nimport 系统工具 from '@/功能模块/系统工具'\nimport 心法切换 from '@/功能模块/心法切换'\nimport 系统说明 from '@/功能模块/系统说明'\nimport 计算结果 from '@/功能模块/计算结果'\n\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { useAppDispatch } from '@/hooks'\nimport './index.css'\n\nfunction 主页面() {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    初始化计算()\n  }, [])\n\n  const 初始化计算 = () => {\n    dispatch(秒伤计算({ 是否更新显示计算结果: true }))\n  }\n  return (\n    <>\n      <系统说明 />\n      <基础设置 />\n      <计算结果 />\n      {/* 角色设置 */}\n      {/* <BasicSet getDps={getDps} zengyiVisible={zengyiVisible} setZengyiVisible={setZengyiVisible} /> */}\n      {/* Dps计算 */}\n      {/* <Dps zengyiVisible={zengyiVisible} ref={dpsRef} /> */}\n      {/* 更新日志 */}\n      {/* <Log /> */}\n      <系统工具 />\n      <心法切换 />\n    </>\n  )\n}\n\nexport default 主页面\n"],"names":["缓存映射","获取当前数据","加速等级枚举","props","打开循环模拟器","disabled","useState","logData","setLogData","秒伤","总伤","秒伤计算时间","计算结果技能列表","模拟DPS结果","更新模拟DPS结果","角色状态信息","锐意","体态","当前时间","当前自身buff列表","当前目标buff列表","循环执行结果","循环异常信息","技能基础数据","循环模拟技能基础数据","技能释放记录","当前各技能运行状态","当前GCD组","模拟信息","更新模拟信息","basicModalOpen","setBasicModalOpen","cycle","setCycle","自定义循环保存弹窗","设置自定义循环保存弹窗","外部加速值","useAppSelector","state","data","装备信息","装备基础属性","加速等级","外部延迟","网络延迟","大橙武模拟","装备增益","大橙武特效","更新加速等级","更新网络延迟","自定义循环列表","加速值","useMemo","起手驰风","设置起手驰风","reduxQixuedata","当前奇穴信息","奇穴信息","更新奇穴信息","奇穴弹窗展示","更新奇穴弹窗展示","buff覆盖数据","更新buff覆盖数据","dispatch","useAppDispatch","useEffect","获取加速等级","simulator","传入加速","传入延迟","更新展示","奇穴","res","模拟循环","测试循环","map","item","技能名称","undefined","最终日志","处理后自身buff","处理后目标buff","处理后角色状态信息","rest","计算dps","战斗时间","获取用于计算的技能组","getDpsCycle","秒伤计算","更新循环技能列表","更新计算时间","每秒郭氏帧","更新奇穴数据","删除循环技能","index","newCycle","splice","处理循环结果对象","找到当前技能释放记录","length","includes","显示循环","完整循环","保存信息","forEach","名称","localStorage","setItem","自定义循环","JSON","stringify","danger","size","onClick","className","maskClosable","width","title","循环","centered","footer","open","onCancel","destroyOnClose","轮次","ReactSortable","list","i","Object","assign","id","setList","e","newList","type","minIndex","reduce","min","obj","Math","Infinity","maxIndex","max","Number","NEGATIVE_INFINITY","a","当前技能数据","find","b","push","拖拽更新循环","animation","draggable","concat","复制本轮至最后","filter","删除本轮次","加速选项","延迟选项","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","技能详情","message","join","技能序列","新自定义循环","some","标题","类型","标记","循环详情","更新当前自定义循环列表","当前计算循环名称","useCycle","全部循环","value","onChange","v","val","目标循环数据","更新方案数据","属性","数据","触发秒伤计算","是否更新显示计算结果","切换循环","optionFilterProp","默认隐藏","cls","classnames","label","自定义方案保存弹窗","设置自定义方案保存弹窗","增益启用","增益数据","全部方案数据","新方案","方案名称","新全部方案数据","更新当前方案名称","更新全部方案数据","更换装备后秒伤","当前计算结果秒伤","当前计算结果","placeholder","allowClear","附魔名称","主属性","性能功能关闭数组","当前输出计算目标名称","当前秘籍信息","当前计算目标","获取计算目标信息","计算循环详情","当前循环信息","开启优化算法","切换开启优化算法","显示增益后面板","切换显示增益后面板","mapKeyList","显示数据","获取角色需要展示的面板数据","最大秒伤数据","基础攻击","计算后技能基础数据","获取判断增益后技能系数","秘籍信息","奇穴数据","DpsKernelOptimizer","计算循环","当前装备信息","当前输出计算目标","快照计算","面板","maxCharacterData","checked","target","最优属性","获取最优属性展示","placement","获取面板显示数据数值","获取面板显示数据","upperStatus","key","角色最终属性","面板攻击","会心等级","自身属性系数","toFixed","会心效果等级","破防等级","无双等级","破招值","全能等级","oldData","floor","背景图片显示状态","system","更新背景图片显示状态","Modal","content","onOk","clear","window","location","reload","visible","setVisible","newVersionModalVisible","setNewVersionModalVisible","noticeVisible","setNoticeVisible","checkLogVersion","checkNotice","storageVersion","getItem","日志版本","log_data","version","使用说明","handleCloseNew","handleCloseNotice","style","padding","Array","isArray","date","closable","初始化计算"],"sourceRoot":""}