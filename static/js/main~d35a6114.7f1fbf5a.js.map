{"version":3,"file":"static/js/main~d35a6114.7f1fbf5a.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/main.ts"],"sourcesContent":["/**\n * 定义模拟循环类\n */\n\nimport { 每秒郭氏帧 } from '../constant'\nimport {\n  ERROR_ACTION,\n  根据奇穴修改buff数据,\n  根据奇穴修改技能数据,\n  起手承契BUFF,\n  转化buff和增益名称,\n} from './utils'\n\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n  待生效事件,\n  当前宠物数据,\n} from './type'\n\nimport 劲风簇 from './技能类/劲风簇'\nimport 触发橙武 from './技能类/触发橙武'\nimport 贯穿 from './DOT类/贯穿'\nimport 白羽流星 from './技能类/白羽流星'\nimport 弛风鸣角 from './技能类/弛风鸣角'\nimport 没石饮羽 from './技能类/没石饮羽'\nimport 朝仪万汇 from './技能类/朝仪万汇'\nimport 宠物 from './通用类/宠物'\nimport 引风唤灵 from './技能类/引风唤灵'\nimport 弛律召野 from './技能类/弛律召野'\nimport 寒更晓箭 from './技能类/寒更晓箭'\nimport 金乌见坠 from './技能类/金乌见坠'\nimport 饮羽簇 from './技能类/饮羽簇'\nimport 丛云隐月 from './技能类/丛云隐月'\nimport 风尽浮生 from './技能类/风尽浮生'\nimport { 宠物基础数据 } from '../constant/skill'\nimport { 箭形态枚举 } from '../constant/enum'\nimport 空弦惊雁 from './技能类/空弦惊雁'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\n\nconst { 技能系数 } = 获取当前数据()\n\nexport interface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  宠物顺序: string[]\n  起手承契: number\n  大橙武模拟: boolean\n  角色状态信息?: 角色状态信息类型\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  // 网络按键延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    箭袋信息: Array.from({ length: 8 }, () => {\n      return { 箭形态: 箭形态枚举.红箭 }\n    }),\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    公共: 0,\n    自身: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  风矢上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n  待生效事件队列: 待生效事件[] = []\n  // 宠物相关\n  宠物序列: string[] = []\n  召唤宠物索引 = -1 // 上次召唤完的索引\n  当前宠物数据: 当前宠物数据 = {}\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n    this.网络延迟 = props.网络延迟\n    // 根据奇穴和装备情况修改buff的数据\n    this.Buff和Dot数据 = 根据奇穴修改buff数据(this.奇穴)\n    // 根据奇穴和装备情况修改技能的数据\n    this.技能基础数据 = 根据奇穴修改技能数据(this.奇穴)\n\n    this.当前自身buff列表 = props.起手承契\n      ? { ...起手承契BUFF(this.Buff和Dot数据, props.起手承契) }\n      : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      箭袋信息: Array.from({ length: 8 }, () => {\n        return { 箭形态: 箭形态枚举.红箭 }\n      }),\n    }\n    this.待生效事件队列 = []\n    // 初始化宠物数据\n    this.宠物序列 = props.宠物顺序 || Object.keys(宠物基础数据)\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.重置循环执行结果()\n  }\n\n  // ----------------- 通用函数 start----------------- //\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      劲风簇: new 劲风簇(this),\n      饮羽簇: new 饮羽簇(this),\n      贯穿: new 贯穿(this),\n      白羽流星: new 白羽流星(this),\n      弛风鸣角: new 弛风鸣角(this),\n      没石饮羽: new 没石饮羽(this),\n      朝仪万汇: new 朝仪万汇(this),\n      寒更晓箭: new 寒更晓箭(this),\n      宠物: new 宠物(this),\n      引风唤灵: new 引风唤灵(this),\n      金乌见坠: new 金乌见坠(this),\n      空弦惊雁: new 空弦惊雁(this),\n      弛律召野: new 弛律召野(this),\n      丛云隐月: new 丛云隐月(this),\n      风尽浮生: new 风尽浮生(this),\n      触发橙武: new 触发橙武(this),\n    }\n  }\n\n  添加buff({\n    名称,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    新增层数 = 1,\n    覆盖层数 = 0,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: 覆盖层数\n        ? 覆盖层数\n        : Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if ((新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) || 名称 === '标鹄') {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (!只添加日志) {\n      if (对象 === '自身') {\n        this.当前自身buff列表[名称] = { ...新buff对象 }\n      } else {\n        this.当前目标buff列表[名称] = { ...新buff对象 }\n      }\n    }\n  }\n\n  卸除buff({\n    名称,\n    buff刷新时间 = 0,\n    对象 = '目标',\n    事件时间 = this.当前时间,\n    卸除层数 = 1,\n    只添加日志 = false,\n  }) {\n    const 当前层数 =\n      (对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数) || 0\n\n    if ((当前层数 && 当前层数 >= 0) || 只添加日志) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          const 新buff对象 = {\n            ...this.Buff和Dot数据[名称],\n            当前层数: 当前层数 - 卸除层数,\n            刷新时间: buff刷新时间 || 事件时间,\n          }\n          if (对象 === '自身') {\n            this.当前自身buff列表[名称] = { ...新buff对象 }\n          } else {\n            this.当前目标buff列表[名称] = { ...新buff对象 }\n          }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (!只添加日志) {\n          if (对象 === '自身') {\n            delete this.当前自身buff列表[名称]\n          } else {\n            delete this.当前目标buff列表[名称]\n          }\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // 箭数校验\n  箭数校验(当前技能: 循环基础技能数据类型 | undefined, 校验箭数?) {\n    const 箭数 = 校验箭数 ? 校验箭数 : 当前技能?.消耗箭数\n    if (箭数) {\n      if (this.角色状态信息.箭袋信息?.length < 箭数) {\n        return {\n          可以释放: false,\n          异常信息: ERROR_ACTION.箭数不足,\n        }\n      } else {\n        return { 可以释放: true }\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    if (time > 0) {\n      this.跳过全部GCD时间(time)\n      // 增加时间\n      this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n      this.DOT结算与更新()\n      this.清空已经消失的buff()\n    }\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 公共: 0, 自身: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      const 当前技能 = this.技能基础数据?.find((item) => item.技能名称 === key)\n      if (实例?.技能运行数据) {\n        const 最大充能层数 = 当前技能?.最大充能层数 || 1\n        const 当前层数 = 实例?.技能运行数据?.当前层数\n        const 计划下次充能时间点 = 实例?.技能运行数据?.计划下次充能时间点 || 0\n        if (当前层数 < 最大充能层数) {\n          // 当前有层数，检查充能度过情况，更新层数和充能时间\n          let 新层数 = 当前层数\n          let 新充能时间点 = 计划下次充能时间点\n          const 充能 = () => {\n            if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n              新层数 = 新层数 + 1\n              // 没充满，继续跑充能CD\n              if (新层数 < 最大充能层数) {\n                新充能时间点 = 新充能时间点 + (当前技能?.技能CD || 0)\n              }\n              if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n                充能()\n              }\n            }\n          }\n          if (新充能时间点 && 新充能时间点 <= this.当前时间) {\n            充能()\n            实例?.更新技能运行数据({ 当前层数: 新层数, 计划下次充能时间点: 新充能时间点 })\n          }\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 计划下次充能时间点 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n      // 当前层数为-1，说明未初始化实例，设置为最大层数\n      if (当前层数 <= 0) {\n        // 当前没有层数可用，需要等待充能\n        if (计划下次充能时间点 > 可以释放时间) {\n          等待CD时间 = 计划下次充能时间点 - 可以释放时间\n        }\n        if (计划下次充能时间点 <= 可以释放时间) {\n          const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n          技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n  }\n\n  技能释放后更新运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型) {\n    if (技能实例?.技能运行数据) {\n      const 最大充能层数 = 当前技能?.最大充能层数 || 1\n      const 是否为充满后第一次释放 = 技能实例?.技能运行数据?.当前层数 === 最大充能层数\n      const 释放后层数 = 技能实例?.技能运行数据?.当前层数 - 1\n      const 当前时间 = this.当前时间 || 0\n\n      if (是否为充满后第一次释放) {\n        技能实例?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 当前时间 + (当前技能?.技能CD || 0),\n        })\n      } else {\n        if (释放后层数 <= 0) {\n          const 原充能时间 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n          const 计算充能时间 =\n            原充能时间 <= 当前时间 ? 当前时间 + (当前技能?.技能CD || 0) : 原充能时间\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 计算充能时间,\n          })\n        } else {\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(\n    来源,\n    伤害次数 = 1,\n    额外增益列表: string[] = [],\n    造成时间 = this.当前时间,\n    隐藏日志 = false,\n    宠物 = false\n  ) {\n    const 当前技能数据 = 技能系数?.find((item) => item.技能名称 === 来源)\n    const 技能增益列表 = 当前技能数据?.技能增益列表 || []\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          const 当前增益数据 = 转化buff和增益名称(item.增益名称, this.当前自身buff列表)\n          if (当前增益数据) {\n            if (造成时间) {\n              const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n              return 造成时间 <= 增益消失时间 && !!当前增益数据\n            } else {\n              return !!当前增益数据?.当前层数\n            }\n          } else {\n            return false\n          }\n        })\n        // 把宠物判断的人身上的承契去掉，取用额外增益列表里的增益\n        ?.filter((item) => {\n          if (宠物) {\n            return !item?.增益名称?.includes('承契')\n          } else {\n            return true\n          }\n        })\n        ?.map((item) => item.增益名称) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    // 当前技能数据?.宠物伤害\n    if (this.校验奇穴是否存在('诸怀') && 总增益列表?.some((item) => item?.includes('承契'))) {\n      总增益列表.push('诸怀')\n    }\n\n    if (!隐藏日志) {\n      this.添加战斗日志({\n        日志: 来源,\n        日志类型: '造成伤害',\n        日志时间: 造成时间,\n        buff列表: 总增益列表 || [],\n        其他数据: {\n          伤害次数: 伤害次数,\n        },\n      })\n    }\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    const 下一个要释放的为弛风鸣角 =\n      当前技能?.技能名称 === '白羽流星' && !!this?.当前自身buff列表?.['劲风簇追']?.当前层数\n    const 是否是倒读条技能 = 当前技能?.是否为倒读条技能 || 下一个要释放的为弛风鸣角\n    const 延迟等待 =\n      this.当前时间 && 当前技能?.技能GCD组 !== '自身' && !是否是倒读条技能 ? this.网络延迟 : 0\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例, 是否为读条技能, 释放索引) {\n    if (!(当前技能.技能名称 === '饮羽簇' && 释放索引 === 0)) {\n      this.增加技能GCD(当前技能)\n    }\n\n    // 饮羽簇CW无CD\n    // if (!(当前技能.技能名称 === '饮羽簇' && this.当前自身buff列表?.['橙武']?.当前层数)) {\n    //   this.增加技能CD(当前技能, 技能实例)\n    // }\n\n    if (当前技能.技能名称 === '饮羽簇') {\n      // 读条引在读条结束以后进入CD\n      if (!this.当前自身buff列表?.['橙武']?.当前层数 && !是否为读条技能) {\n        this.增加技能CD(当前技能, 技能实例)\n      }\n    } else {\n      this.增加技能CD(当前技能, 技能实例)\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(\n    当前技能: 循环基础技能数据类型,\n    计划释放时间: number,\n    开始读条时间,\n    开始释放时间,\n    是否为读条技能,\n    技能实例,\n    释放时标鹄层数: number\n  ) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      开始读条时间: 开始读条时间,\n      是否为读条技能: 是否为读条技能,\n      技能释放记录结果: {\n        ...技能释放记录结果,\n        释放时标鹄层数,\n      },\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.贯穿?.结算贯穿伤害()\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    // 增加网络延迟，0时不增加延迟\n    this.重置循环执行结果()\n    this.事件结算()\n  }\n\n  // 事件结算\n  事件结算() {\n    this.待生效事件结算()\n    // this.清空已经消失的buff()\n    this.DOT结算与更新()\n    // this.普通攻击结算()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 体态校验结果 = this.箭数校验(当前技能)\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 体态校验结果.可以释放 && 释放判断结果.可以释放,\n      异常信息: 体态校验结果.异常信息 || 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  待生效事件结算(结算判断时间 = this.当前时间) {\n    if (this.待生效事件队列.length) {\n      // 轮训执行完成所有的事件\n      const 轮训执行事件 = () => {\n        if (this.待生效事件队列[0]?.事件时间 <= 结算判断时间) {\n          // 先推进时间到事件时间\n          const 当前事件 = this.待生效事件队列[0]\n          this.DOT结算与更新()\n          this.增加时间(当前事件.事件时间 - this.当前时间)\n          this.添加战斗日志?.({\n            日志: `事件【${当前事件.事件名称}】触发`,\n            日志类型: '技能释放结果',\n            日志时间: this.当前时间,\n          })\n          if (当前事件.事件名称?.includes('没石饮羽')) {\n            this.技能类实例集合.没石饮羽.没石饮羽触发(当前事件.事件备注)\n          } else if (当前事件.事件名称?.includes('宠物攻击')) {\n            this.技能类实例集合.宠物.宠物攻击(\n              当前事件.事件备注.宠物名称,\n              this.当前时间,\n              当前事件.事件备注.额外buff\n            )\n          } else if (当前事件.事件名称?.includes('宠物离场')) {\n            this.技能类实例集合.宠物.宠物离场(当前事件.事件备注.宠物名称, this.当前时间)\n          } else if (当前事件.事件名称?.includes('技能读条')) {\n            const 技能名称 = 当前事件?.事件备注?.技能名称\n            if (技能名称 && this.技能类实例集合?.[技能名称]) {\n              this.技能类实例集合?.[技能名称]?.读条伤害()\n            }\n          } else if (当前事件.事件名称?.includes('卸除buff')) {\n            if (当前事件?.事件备注?.buff名称) {\n              this.卸除buff({\n                名称: 当前事件?.事件备注?.buff名称,\n                对象: 当前事件?.事件备注?.buff对象,\n                卸除层数: 当前事件?.事件备注?.卸除层数,\n                只添加日志: 当前事件?.事件备注?.buff名称 === '贯穿',\n              })\n            }\n          }\n          this.待生效事件队列?.shift()\n          if (this.待生效事件队列.length) {\n            轮训执行事件()\n          }\n        }\n      }\n\n      轮训执行事件()\n      // this.待生效事件队列 = [...未生效事件]\n    }\n  }\n\n  添加待生效事件队列(传入数据: 待生效事件[], 事件覆盖 = false) {\n    let 新待生效事件队列: 待生效事件[] = []\n    // 把原来事件中的同名事件修改时间\n    if (事件覆盖) {\n      if (this.待生效事件队列?.some((item) => item.事件名称 === 传入数据?.[0]?.事件名称)) {\n        新待生效事件队列 = this.待生效事件队列.map((item) => {\n          if (item.事件名称 === 传入数据?.[0]?.事件名称) {\n            return 传入数据?.[0]\n          } else {\n            return item\n          }\n        })\n      } else {\n        新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n      }\n    } else {\n      新待生效事件队列 = (this.待生效事件队列 || []).concat(传入数据 || [])\n    }\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  删除待生效事件队列(事件名称) {\n    const 新待生效事件队列: 待生效事件[] = [...(this.待生效事件队列 || [])].filter(\n      (item) => item.事件名称 !== 事件名称\n    )\n    // 由于不确定待生效事件时间分布，重新排序\n    新待生效事件队列.sort((a, b) => {\n      return (a?.事件时间 || 0) - (b?.事件时间 || 0)\n    })\n    this.待生效事件队列 = [...新待生效事件队列]\n  }\n\n  // ----------------- 通用函数 end----------------- //\n\n  // ----------------- 职业特殊函数 start----------------- //\n  于狩引爆贯穿判定(来源) {\n    this.技能类实例集合.贯穿.引爆贯穿逻辑(来源, '于狩')\n  }\n\n  棘矢引爆贯穿判定(来源) {\n    if (this.校验奇穴是否存在('棘矢') && this.角色状态信息.箭袋信息?.length === 1) {\n      this.技能类实例集合.贯穿.引爆贯穿逻辑(来源, '棘矢')\n    }\n  }\n\n  金乌箭判定(箭形态?) {\n    const 下一根箭形态 = this.角色状态信息?.箭袋信息?.[0]?.箭形态\n\n    // 这里策划就是这么写的，导致了紫箭bug\n    if (箭形态 === 箭形态枚举.红箭 || 下一根箭形态 === 箭形态枚举.红箭) {\n      this.技能类实例集合.贯穿.获得和刷新贯穿('金乌')\n      this.技能造成伤害('破')\n    }\n    if (箭形态 === 箭形态枚举.紫箭 || 下一根箭形态 === 箭形态枚举.紫箭) {\n      this.技能类实例集合.贯穿.获得和刷新贯穿('金乌')\n      this.技能造成伤害('破')\n    }\n  }\n\n  标鹄判定() {\n    const 当前标鹄层数 = this.当前目标buff列表?.['标鹄']?.当前层数\n    // 引爆标鹄\n    if (当前标鹄层数 === 4) {\n      // 引爆上一层贯穿\n      this.技能类实例集合.贯穿.获得和刷新贯穿('标鹄')\n      // 桑柘标鹄引爆额外上一层贯穿\n      if (this.校验奇穴是否存在('桑柘')) {\n        this.技能类实例集合.贯穿.获得和刷新贯穿('标鹄-桑柘')\n      }\n      this.添加战斗日志({\n        日志: `标鹄引爆`,\n        日志类型: '技能释放结果',\n        日志时间: this.当前时间,\n      })\n      this.技能造成伤害('标鹄')\n      let 新标鹄层数 = 1\n      // 贯侯 引爆使目标额外获得一层标鹄\n      if (this.校验奇穴是否存在('贯侯')) {\n        新标鹄层数 = 2\n      }\n      this.添加buff({ 名称: '标鹄', 覆盖层数: 新标鹄层数 })\n    } else {\n      this.添加buff({ 名称: '标鹄' })\n    }\n  }\n\n  消耗箭(来源, 消耗箭 = 1) {\n    // 丛前面消耗\n    const 新箭袋信息 = [...(this?.角色状态信息?.箭袋信息 || [])].slice(消耗箭)\n    this.角色状态信息.箭袋信息 = 新箭袋信息\n    const 新箭数 = 新箭袋信息?.length\n    this.添加战斗日志({\n      日志: `${来源} 使【箭】变为 ${新箭数}`,\n      日志类型: '消耗箭',\n    })\n  }\n\n  召唤宠物(额外buff?) {\n    const 本次事件召唤索引 = this.召唤宠物索引 + 1 > 5 ? 0 : this.召唤宠物索引 + 1\n    const 本次召唤宠物 = this.宠物序列[本次事件召唤索引]\n    if (本次召唤宠物 && 本次事件召唤索引 !== this.召唤宠物索引) {\n      this.技能类实例集合.宠物.召唤宠物(本次召唤宠物, 额外buff)\n      this.召唤宠物索引 = 本次事件召唤索引\n    }\n  }\n\n  获得承契() {\n    if (this.校验奇穴是否存在('襄尺')) {\n      const buff承契数据 = this.当前自身buff列表?.['承契']\n      if (buff承契数据) {\n        const 应该消失时间 = (buff承契数据.刷新时间 || 0) + (buff承契数据.最大持续时间 || 0)\n        const 剩余帧 = 应该消失时间 - this.当前时间 || 0\n        if (buff承契数据?.当前层数 === 5 && 剩余帧 >= 每秒郭氏帧 * 8) {\n          this.技能类实例集合.金乌见坠.金乌充能(每秒郭氏帧 * 3)\n        }\n      }\n    }\n    // this.技能类实例集合.金乌见坠.金乌充能(每秒郭氏帧 * 3)\n    this.添加buff({ 名称: '承契', 对象: '自身' })\n  }\n\n  更新当前宠物数据(宠物, 数据) {\n    this.当前宠物数据[宠物] = { ...数据 }\n  }\n\n  // ----------------- 职业特殊函数 end ----------------- //\n\n  // 其他调用函数，供外层调用\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 读条时间 = 技能实例?.获取读条时间?.(i) || 0\n          const 是否为读条技能 = !!读条时间\n          if (读条时间) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.待生效事件结算(技能预估释放时间)\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          // this.清空已经消失的buff()\n          const 开始读条时间 = 是否为读条技能 ? 技能预估释放时间 : undefined\n          const 结束读条时间 = 是否为读条技能 ? 技能预估释放时间 + 读条时间 : 0\n          this.技能成功开始释放(当前技能, 技能实例, 是否为读条技能, i)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          const 释放时标鹄层数 = this.当前目标buff列表?.['标鹄']?.当前层数 || 0\n          this.清空已经消失的buff()\n          if (释放校验结果?.可以释放) {\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.(i)\n            // 推进到读条结束时间\n            if (结束读条时间 && 结束读条时间 > this.当前时间) {\n              this.待生效事件结算(结束读条时间)\n            }\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(\n            当前技能,\n            技能计划释放时间,\n            开始读条时间,\n            开始释放时间,\n            是否为读条技能,\n            技能实例,\n            释放时标鹄层数\n          )\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    const 普通攻击处理日志 = this.普通攻击日志(新日志)\n\n    普通攻击处理日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(普通攻击处理日志 || [])]\n  }\n\n  // 普通攻击日志\n  普通攻击日志 = (战斗日志: 循环日志数据类型[]) => {\n    const 所有释放技能数组: any = 战斗日志.filter((item) => {\n      return item?.日志类型 === '释放技能'\n    })\n    // 读条期间不释放普通攻击\n    const 找出所有读条技能的区间: Array<{ 开始时间: number; 结束时间: number; 是否读条: boolean }> =\n      所有释放技能数组\n        .map((item, index) => {\n          // const 当前技能 = this.技能基础数据?.find((a) => a?.技能名称 === item?.日志)\n          const 是否读条 = item?.日志 && ['朝仪万汇']?.includes(item?.日志)\n          return {\n            开始时间: item?.日志时间,\n            结束时间: 所有释放技能数组[index + 1]\n              ? 所有释放技能数组[index + 1]?.日志时间\n              : item?.日志时间,\n            是否读条: 是否读条,\n          }\n        })\n        .filter((item: any) => {\n          return item?.是否读条\n        })\n    const 战斗最大时间 = this.当前时间\n    const 战斗日志副本 = [...战斗日志]\n    const 普通攻击时间列表: number[] = []\n\n    for (let i = 0; i < 战斗最大时间; i++) {\n      // 判断攻击间隔，最小24帧一次\n      if (\n        (普通攻击时间列表[普通攻击时间列表.length - 1] || 0) + 24 <= i ||\n        !普通攻击时间列表?.length\n      ) {\n        // 判断本帧是否在读条技能时间内\n        if (!找出所有读条技能的区间?.some((item) => item?.开始时间 < i && item?.结束时间 > i)) {\n          普通攻击时间列表.push(i)\n        }\n      }\n    }\n\n    普通攻击时间列表.forEach((item) => {\n      战斗日志副本.push({\n        日志: `风矢`,\n        日志类型: '造成伤害',\n        日志时间: item,\n        buff列表: ['承契_5层'],\n      })\n    })\n\n    return 战斗日志副本\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n    return 各技能当前运行状态\n  }\n\n  获取各DOT的运行状态() {\n    const DOT运行数据 = {}\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      if (this.技能类实例集合[key]?.DOT运行数据) {\n        DOT运行数据[key] = this.技能类实例集合[key]?.DOT运行数据 || {}\n      }\n    })\n    return DOT运行数据\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n"],"names":["技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","异常信息","测试循环","奇穴","加速等级","网络延迟","角色状态信息","箭袋信息","Array","from","length","箭形态","箭形态枚举","当前自身buff列表","当前目标buff列表","当前时间","开始释放上一个技能的时间","战斗日志","技能释放记录","Buff和Dot数据","技能基础数据","GCD组","公共","自身","技能类实例集合","风矢上次造成伤害时间","undefined","大橙武模拟","待生效事件队列","宠物序列","召唤宠物索引","当前宠物数据","普通攻击日志","所有释放技能数组","filter","item","日志类型","找出所有读条技能的区间","map","index","是否读条","日志","includes","开始时间","日志时间","结束时间","战斗最大时间","战斗日志副本","普通攻击时间列表","i","some","push","forEach","buff列表","this","获取加速等级","加速值","根据奇穴修改buff数据","根据奇穴修改技能数据","起手承契","起手承契BUFF","宠物顺序","Object","keys","宠物基础数据","初始化技能实例类","重置循环执行结果","劲风簇","饮羽簇","贯穿","白羽流星","弛风鸣角","没石饮羽","朝仪万汇","寒更晓箭","宠物","引风唤灵","金乌见坠","空弦惊雁","弛律召野","丛云隐月","风尽浮生","触发橙武","名称","对象","事件时间","新增层数","覆盖层数","只添加日志","当前层数","新buff对象","Math","min","最大层数","刷新时间","添加战斗日志","buff刷新时间","卸除层数","待判断奇穴","当前技能","校验箭数","箭数","消耗箭数","可以释放","ERROR_ACTION","time","跳过全部GCD时间","DOT结算与更新","清空已经消失的buff","新GCD组","key","max","校验GCD组","技能GCD组","技能名称","实例","find","技能运行数据","最大充能层数","计划下次充能时间点","新层数","新充能时间点","充能","技能CD","更新技能运行数据","技能实例","GCD","等待CD时间","可以释放时间","等待CD","技能预估释放时间","时间差","增加时间","是否为充满后第一次释放","释放后层数","原充能时间","计算充能时间","log","rest","来源","伤害次数","额外增益列表","造成时间","隐藏日志","当前技能数据","技能增益列表","有关的buff列表","当前增益数据","转化buff和增益名称","增益名称","增益消失时间","最大持续时间","总增益列表","concat","校验奇穴是否存在","其他数据","检查GCD","技能释放前检查GCD统一方法","技能释放前检查运行数据","下一个要释放的为弛风鸣角","是否是倒读条技能","是否为倒读条技能","延迟等待","技能计划释放时间","待更新GCD组","技能释放后添加GCD","技能释放后更新运行数据","是否为读条技能","释放索引","增加技能GCD","增加技能CD","计划释放时间","开始读条时间","开始释放时间","释放时标鹄层数","技能释放记录结果","获取技能释放记录结果","实际释放时间","buff对象","buff应该消失时间","消失层数","自然消失失去层数","卸除buff","清空buff调用函数","结算贯穿伤害","事件结算","待生效事件结算","对所有有CD技能检查和充能","体态校验结果","箭数校验","释放判断结果","释放","校验结果","结算判断时间","轮训执行事件","当前事件","事件名称","没石饮羽触发","事件备注","宠物攻击","宠物名称","额外buff","宠物离场","读条伤害","buff名称","shift","传入数据","事件覆盖","新待生效事件队列","sort","a","b","引爆贯穿逻辑","下一根箭形态","获得和刷新贯穿","技能造成伤害","新标鹄层数","添加buff","消耗箭","新箭袋信息","slice","新箭数","本次事件召唤索引","本次召唤宠物","召唤宠物","buff承契数据","剩余帧","每秒郭氏帧","金乌充能","数据","本轮模拟开始前","释放前初始化","技能释放前","读条时间","获取读条时间","读条","技能GCD和CD处理","结束读条时间","技能成功开始释放","释放校验结果","技能释放校验","是否为最后一个技能","技能释放异常","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","普通攻击处理日志","各技能当前运行状态","DOT运行数据"],"sourceRoot":""}