{"version":3,"file":"static/js/main~542d3b1b.88bf28b1.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/index.tsx","功能模块/基础设置/基础设置标题/index.tsx","功能模块/基础设置/增益面板/小药小吃选择/index.tsx","功能模块/基础设置/增益面板/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/魔盒配装方案导入/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/配装组件标题/index.tsx","功能模块/基础设置/属性录入/配装器/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/装备选择/index.tsx","功能模块/基础设置/底部配置/index.tsx","功能模块/系统工具/页面隐藏工具/index.tsx","功能模块/系统说明/index.tsx"],"sourcesContent":["// 循环模拟器\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { Button, Modal, Tooltip, message } from 'antd'\nimport { ReactSortable } from 'react-sortablejs'\nimport { CopyOutlined, DeleteOutlined, AlertOutlined } from '@ant-design/icons'\n\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 获取加速等级 } from '@/工具函数/data'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 循环详情 } from '@/@types/循环'\nimport { 更新当前自定义循环列表 } from '@/store/data'\n\nimport 循环模拟技能基础数据, { 宠物基础数据 } from './constant/skill'\nimport { getDpsCycle } from './utils'\nimport {\n  循环日志数据类型,\n  循环基础技能数据类型,\n  ShowCycleSingleSkill,\n  模拟信息类型,\n} from './simulator/type'\n\nimport 模拟循环 from './simulator/index'\nimport { 每秒郭氏帧 } from './constant'\n\nimport CycleModalHeader from './components/CycleModalHeader'\nimport StatusBar from './components/StatusBar'\nimport CycleSkillItem from './components/CycleSkillItem'\nimport AddCycleSkillBtns from './components/AddCycleSkillBtns'\nimport SaveCustomCycleModal from './components/SaveCustomCycleModal'\nimport QixueSetModal from './components/QixueSetModal'\nimport { 箭形态枚举 } from './constant/enum'\nimport './index.css'\n\nconst { 缓存映射 } = 获取当前数据()\n\nconst 加速等级枚举 = {\n  0: 0,\n  1: 95,\n  2: 4241,\n  3: 8857,\n  4: 13851,\n  5: 19316,\n}\n\ninterface CycleSimulatorProps {\n  打开循环模拟器?: () => void\n  disabled?: boolean\n}\n\nfunction CycleSimulator(props: CycleSimulatorProps) {\n  const { 打开循环模拟器, disabled } = props\n  const [logData, setLogData] = useState<循环日志数据类型[]>([])\n\n  const [模拟DPS结果, 更新模拟DPS结果] = useState<当前计算结果类型>({\n    秒伤: 0,\n    总伤: 0,\n    秒伤计算时间: 0,\n    计算结果技能列表: [],\n  })\n\n  const [模拟信息, 更新模拟信息] = useState<模拟信息类型>({\n    角色状态信息: {\n      箭袋信息: Array.from({ length: 8 }, () => {\n        return { 箭形态: 箭形态枚举.红箭 }\n      }),\n    },\n    当前时间: 0,\n    当前自身buff列表: {},\n    当前目标buff列表: {},\n    循环执行结果: '成功',\n    循环异常信息: {},\n    技能基础数据: [...循环模拟技能基础数据],\n    技能释放记录: [],\n    当前各技能运行状态: {},\n    当前DOT运行状态: {},\n    当前GCD组: {},\n    当前宠物数据: {},\n  })\n\n  // 基础弹窗\n  const [basicModalOpen, setBasicModalOpen] = useState<boolean>(false)\n  // 循环\n  const [cycle, setCycle] = useState<循环基础技能数据类型[]>([])\n  const [自定义循环保存弹窗, 设置自定义循环保存弹窗] = useState<boolean>(false)\n  // 当前面板加速值\n  const 外部加速值 = useAppSelector((state) => state?.data?.装备信息?.装备基础属性)?.加速等级 || 0\n  const 外部延迟 = useAppSelector((state) => state?.data?.网络延迟) || 0\n  const 大橙武模拟 = useAppSelector((state) => state?.data?.装备信息?.装备增益)?.大橙武特效 || false\n\n  const [加速等级, 更新加速等级] = useState<number>(0)\n  const [网络延迟, 更新网络延迟] = useState<number>(0)\n  const [显示标鹄层数, 更新显示标鹄层数] = useState<boolean>(false)\n\n  // 自定义循环\n  const 自定义循环列表 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 加速值 = useMemo(() => {\n    return 加速等级枚举[加速等级] || 0\n  }, [加速等级])\n\n  // 是否实时计算\n  const 是否实时计算 = true\n\n  const [起手承契, 设置起手承契] = useState<number>(5)\n\n  const [宠物顺序, 更新宠物顺序] = useState<string[]>(Object.keys(宠物基础数据))\n\n  // 奇穴\n  const reduxQixuedata = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const [奇穴信息, 更新奇穴信息] = useState<string[]>([])\n  const [奇穴弹窗展示, 更新奇穴弹窗展示] = useState<boolean>(false)\n  const [buff覆盖数据, 更新buff覆盖数据] = useState<number[]>([])\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (basicModalOpen) {\n      // 设置外面选择的默认奇穴信息\n      更新奇穴信息(reduxQixuedata)\n      更新加速等级(获取加速等级(外部加速值))\n      更新网络延迟(外部延迟)\n      更新宠物顺序(Object.keys(宠物基础数据))\n      设置起手承契(0)\n    } else {\n      setLogData([])\n      setBasicModalOpen(false)\n      setCycle([])\n      更新模拟DPS结果({ 秒伤: 0, 总伤: 0, 秒伤计算时间: 0, 计算结果技能列表: [] })\n    }\n  }, [basicModalOpen, reduxQixuedata, 外部加速值])\n\n  useEffect(() => {\n    if (是否实时计算 && basicModalOpen) {\n      simulator({})\n    }\n  }, [basicModalOpen, cycle, 是否实时计算, 起手承契, 网络延迟, 加速值, 奇穴信息, 宠物顺序])\n\n  const simulator = (props?) => {\n    const { 传入加速 = 加速值, 传入延迟 = 网络延迟, 更新展示 = true, 奇穴 } = props\n    const res = 模拟循环({\n      测试循环: cycle.map((item) => item?.技能名称) || [],\n      加速值: 传入加速 !== undefined ? 传入加速 : 加速值,\n      网络延迟: 传入延迟 !== undefined ? 传入延迟 : 网络延迟,\n      奇穴: 奇穴 || 奇穴信息,\n      起手承契,\n      大橙武模拟,\n      宠物顺序,\n    })\n\n    const {\n      最终日志,\n      当前自身buff列表: 处理后自身buff,\n      当前目标buff列表: 处理后目标buff,\n      角色状态信息: 处理后角色状态信息,\n      ...rest\n    } = res\n    if (更新展示) {\n      setLogData(最终日志)\n      计算dps(最终日志, rest?.当前时间)\n      更新模拟信息({\n        当前自身buff列表: 处理后自身buff,\n        当前目标buff列表: 处理后目标buff,\n        角色状态信息: 处理后角色状态信息,\n        ...rest,\n      })\n    }\n    return { 最终日志, ...rest }\n  }\n\n  // 计算DPS日志\n  const 计算dps = (data: 循环日志数据类型[], 当前时间) => {\n    const 获取用于计算的技能组 = getDpsCycle(data)\n    const { 秒伤, 计算结果技能列表, 秒伤计算时间, 总伤 } = dispatch(\n      秒伤计算({\n        更新循环技能列表: 获取用于计算的技能组,\n        更新计算时间: 当前时间 / 每秒郭氏帧,\n        更新奇穴数据: 奇穴信息,\n      })\n    )\n    更新模拟DPS结果({\n      秒伤: 当前时间 > 0 ? 秒伤 : 0,\n      总伤: 当前时间 > 0 ? 总伤 : 0,\n      秒伤计算时间: 秒伤计算时间,\n      计算结果技能列表: 计算结果技能列表,\n    })\n  }\n\n  // 根据循环计算更适合展示的多层数组，用于显示\n  const 处理循环结果对象 = useMemo(() => {\n    const res: ShowCycleSingleSkill[][] = []\n    cycle.map((item, index) => {\n      const 找到当前技能释放记录 = 模拟信息?.技能释放记录?.[index]\n      const data = {\n        ...item,\n        ...找到当前技能释放记录,\n      }\n\n      if (index === 0) {\n        res[res?.length] = [{ ...data, index: index || 0 }]\n      } else {\n        res[res?.length - 1] = [...(res[res?.length - 1] || []), { ...data, index: index || 0 }]\n\n        const 打完本技能换箭 = data?.技能名称 === '寒更晓箭'\n\n        if (打完本技能换箭) {\n          res[res?.length] = []\n        }\n      }\n      return data\n    })\n\n    return { 显示循环: res, 完整循环: cycle }\n  }, [cycle, 模拟信息])\n\n  // 拖拽更新循环\n  const 拖拽更新循环 = (newList, type) => {\n    if (type == '轮次内') {\n      // 首先获取被替换轮次的第一个元素的index索引\n      const minIndex = newList.reduce(function (min, obj) {\n        return Math.min(min, obj.index)\n      }, Infinity)\n      // 获取最大的索引，判断拖拽生效范围\n      const maxIndex = newList.reduce(function (min, obj) {\n        return Math.max(min, obj.index)\n      }, Number.NEGATIVE_INFINITY)\n      // 将数组哪索引范围内跌元素替换为新的数组元素\n      const newCycle = cycle.map((item, index) => {\n        if (index < minIndex || index > maxIndex) {\n          return { ...item }\n        } else {\n          return newList[index - minIndex]\n        }\n      })\n      // 更新循环\n      setCycle(newCycle)\n    } else if (type === '整个轮次拖拽') {\n      const res: 循环基础技能数据类型[] = []\n      newList.forEach((item) => {\n        item.forEach((a) => {\n          if (a.技能名称) {\n            const 当前技能数据 = 模拟信息?.技能基础数据?.find((b) => b?.技能名称 === a.技能名称)\n            if (当前技能数据) {\n              res.push(当前技能数据)\n            }\n          }\n        })\n      })\n      setCycle(res)\n    }\n  }\n  // 向循环内新增技能\n  const 新增循环技能 = (item: 循环基础技能数据类型) => {\n    const 没箭了 =\n      item?.技能名称 !== '寒更晓箭' &&\n      模拟信息.角色状态信息.箭袋信息?.length === 0 &&\n      cycle?.[cycle.length - 1]?.技能名称 !== '寒更晓箭'\n    const 换箭 = 循环模拟技能基础数据?.find((a) => a.技能名称 === '寒更晓箭')\n    let newCycle\n    if (没箭了) {\n      newCycle = [...(cycle || []), 换箭, item]\n    } else {\n      newCycle = [...(cycle || []), item]\n    }\n    setCycle(newCycle)\n  }\n\n  const 批量新增循环 = (item: 循环基础技能数据类型[]) => {\n    let batchItem = [...item]\n    if (cycle?.[cycle.length - 1]?.技能名称 === '寒更晓箭' || !cycle.length) {\n      batchItem = batchItem.filter((item) => item.技能名称 !== '寒更晓箭')\n    }\n    const newCycle = [...(cycle || []), ...batchItem]\n    setCycle(newCycle)\n  }\n\n  // 从循环内删除技能\n  const 删除循环技能 = (index) => {\n    const newCycle = [...(cycle || [])]\n    newCycle.splice(index, 1)\n    setCycle(newCycle)\n  }\n\n  // 复制本轮到最后\n  const 复制本轮至最后 = (轮次) => {\n    const 没箭了 =\n      轮次?.[0]?.技能名称 !== '寒更晓箭' &&\n      模拟信息.角色状态信息.箭袋信息?.length === 0 &&\n      cycle?.[cycle.length - 1]?.技能名称 !== '寒更晓箭'\n\n    const 换箭 = 循环模拟技能基础数据?.find((a) => a.技能名称 === '寒更晓箭')\n    let newCycle\n    if (没箭了) {\n      newCycle = [...(cycle || []), 换箭].concat(轮次)\n    } else {\n      newCycle = [...(cycle || [])].concat(轮次)\n    }\n    setCycle(newCycle)\n  }\n\n  // 删除本轮次\n  const 删除本轮次 = (轮次) => {\n    const minIndex = 轮次.reduce(function (min, obj) {\n      return Math.min(min, obj.index)\n    }, Infinity)\n    // 获取最大的索引，判断拖拽生效范围\n    const maxIndex = 轮次.reduce(function (min, obj) {\n      return Math.max(min, obj.index)\n    }, Number.NEGATIVE_INFINITY)\n    // 将数组哪索引范围内跌元素替换为新的数组元素\n    const newCycle = cycle.filter((item, index) => {\n      return index < minIndex || index > maxIndex\n    })\n    // 更新循环\n    setCycle(newCycle)\n  }\n\n  // 删除本轮后全部循环\n  const 删除本轮后全部循环 = (轮次) => {\n    Modal.confirm({\n      title: '确认删除本轮后全部循环吗？',\n      onOk() {\n        // 获取最大的索引，判断生效范围\n        const maxIndex = 轮次.reduce(function (min, obj) {\n          return Math.max(min, obj.index)\n        }, Number.NEGATIVE_INFINITY)\n        // 将数组哪索引范围内跌元素替换为新的数组元素\n        const newCycle = cycle.filter((item, index) => {\n          return index <= maxIndex\n        })\n        // 更新循环\n        setCycle(newCycle)\n      },\n    })\n  }\n\n  // 确认保存自定义循环\n  const 确认保存循环 = (名称, 加速选项, 延迟选项) => {\n    // 获取各加速下 各网络延迟的循环\n    const 各延迟枚举 = 延迟选项?.length ? 延迟选项 : [0, 1, 2, 3]\n    const 各加速枚举 = 加速选项?.length ? 加速选项 : [0, 1, 2, 3, 4, 5]\n\n    const 保存循环结果: 循环详情[] = []\n\n    const 异常结果: any[] = []\n\n    各加速枚举.forEach((加速) => {\n      const 实际加速值 = 加速等级枚举[加速]\n      各延迟枚举.forEach((延迟) => {\n        // 保存循环数据的时候，把镇机和界破的数据一起保存，生成两套并存的数据，方便后续切换比较\n        const 模拟结果 = simulator({\n          传入加速: Number(实际加速值),\n          传入延迟: Number(延迟),\n          更新展示: false,\n          奇穴: [...奇穴信息],\n        })\n        const 本次日志 = 模拟结果?.最终日志\n        const 循环执行结果 = 模拟结果?.循环执行结果\n        // const 战斗时间 = 本次日志[本次日志.length - 1].日志时间 || 0\n        const 战斗秒 = 模拟结果?.当前时间 / 每秒郭氏帧\n        const 用于计算循环 = getDpsCycle(本次日志)\n        if (循环执行结果 === '成功') {\n          保存循环结果.push({\n            循环加速等级: 加速,\n            循环延迟要求: 延迟,\n            战斗时间: 战斗秒,\n            技能详情: 用于计算循环,\n          })\n        } else {\n          异常结果.push({\n            加速,\n            延迟,\n          })\n        }\n      })\n    })\n\n    if (异常结果?.length) {\n      message.error(\n        `以下条件循环异常，将不会保存该加速的循环。异常循环：${异常结果\n          .map((item) => {\n            return `[加速：${item.加速}，延迟：${item.延迟}]`\n          })\n          .join('、')}`\n      )\n    }\n\n    const 技能序列 = cycle.map((item) => item.技能名称)\n\n    const 新自定义循环 = 自定义循环列表?.some((item) => item?.名称 === 名称)\n      ? 自定义循环列表.map((item) => {\n          return item.名称 === 名称\n            ? {\n                名称,\n                标题: 名称,\n                类型: '自定义',\n                标记: '自定义',\n                循环详情: 保存循环结果,\n                奇穴: 奇穴信息,\n                技能序列,\n                额外配置信息: { 宠物顺序 },\n              }\n            : item\n        })\n      : (自定义循环列表 || []).concat([\n          {\n            名称,\n            标题: 名称,\n            类型: '自定义',\n            标记: '自定义',\n            循环详情: 保存循环结果,\n            奇穴: 奇穴信息,\n            技能序列,\n            额外配置信息: { 宠物顺序 },\n          },\n        ])\n\n    dispatch(更新当前自定义循环列表(新自定义循环))\n\n    设置自定义循环保存弹窗(false)\n    message.success('保存成功')\n  }\n\n  useEffect(() => {\n    // redux变动，更新storage信息\n    const 保存信息 = {}\n    ;(自定义循环列表 || []).forEach((item) => {\n      保存信息[item.名称] = {\n        ...item,\n      }\n    })\n    localStorage?.setItem(缓存映射.自定义循环, JSON.stringify(保存信息))\n  }, [自定义循环列表, 奇穴信息, 宠物顺序])\n\n  return (\n    <>\n      <Button\n        danger\n        size='small'\n        disabled={disabled}\n        onClick={() => {\n          setBasicModalOpen(true)\n          打开循环模拟器 && 打开循环模拟器()\n        }}\n      >\n        循环模拟\n      </Button>\n      <Modal\n        className='cycle-simulator-modal simulator-shxj'\n        maskClosable={false}\n        width={'100%'}\n        title={\n          <CycleModalHeader\n            cycle={cycle}\n            大橙武模拟={大橙武模拟}\n            设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n            清空循环={() => setCycle([])}\n            起手承契={起手承契}\n            设置起手承契={设置起手承契}\n            快速导入循环={(循环) => setCycle(循环)}\n            更新奇穴信息={更新奇穴信息}\n            更新奇穴弹窗展示={更新奇穴弹窗展示}\n            加速等级={加速等级}\n            更新加速等级={更新加速等级}\n            更新宠物顺序={更新宠物顺序}\n            网络延迟={网络延迟}\n            更新网络延迟={更新网络延迟}\n            模拟信息={模拟信息}\n            显示标鹄层数={显示标鹄层数}\n            更新显示标鹄层数={更新显示标鹄层数}\n          />\n        }\n        centered\n        footer={null}\n        open={basicModalOpen}\n        onCancel={() => setBasicModalOpen(false)}\n        destroyOnClose\n      >\n        <div className={'cycle-simulator-setting'}>\n          {/* 角色状态栏 */}\n          <StatusBar\n            模拟信息={模拟信息}\n            完整循环={处理循环结果对象?.完整循环 as any}\n            日志信息={logData}\n            模拟DPS结果={模拟DPS结果}\n            奇穴信息={奇穴信息}\n          />\n          {/* // 循环展示模块 */}\n          <div className={'cycle-simulator-setting-res'}>\n            {处理循环结果对象?.显示循环?.length ? (\n              (处理循环结果对象?.显示循环 || []).map((轮次, index) => {\n                return 轮次?.length ? (\n                  <div className={`cycle-simulator-setting-turn cycle-turn-drag`} key={`${index}`}>\n                    <ReactSortable\n                      list={轮次.map((i) =>\n                        Object.assign(i, { id: `${i?.技能名称}_${index}_${i?.index}` })\n                      )}\n                      setList={(e) => {\n                        拖拽更新循环(e, '轮次内')\n                      }}\n                      className='cycle-simulator-setting-turn-drop'\n                      animation={150}\n                      draggable={'.cycle-simulator-setting-skill-drag'}\n                    >\n                      {(轮次 || []).map((item) => {\n                        return (\n                          <CycleSkillItem\n                            技能={item}\n                            删除循环技能={删除循环技能}\n                            key={`${item?.技能名称}_${index}_${item?.index}`}\n                            模拟信息={模拟信息}\n                            buff覆盖数据={buff覆盖数据}\n                            更新buff覆盖数据={更新buff覆盖数据}\n                            显示标鹄层数={显示标鹄层数}\n                          />\n                        )\n                      })}\n                      <div className={'cycle-turn-operate'}>\n                        <Tooltip title='删除本轮后全部循环'>\n                          <AlertOutlined\n                            className={'cycle-turn-operate-btn'}\n                            style={{ color: '#FF0000' }}\n                            onClick={() => 删除本轮后全部循环(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='复制并添加到最后'>\n                          <CopyOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 复制本轮至最后(轮次)}\n                          />\n                        </Tooltip>\n                        <Tooltip title='删除此轮'>\n                          <DeleteOutlined\n                            className={'cycle-turn-operate-btn'}\n                            onClick={() => 删除本轮次(轮次)}\n                          />\n                        </Tooltip>\n                      </div>\n                    </ReactSortable>\n                  </div>\n                ) : (\n                  <div />\n                )\n              })\n            ) : (\n              <p className={'cycle-simulator-setting-tip'}>请点击下方技能按钮生成模拟技能序列</p>\n            )}\n          </div>\n        </div>\n        {/* 添加循环按钮组 */}\n        <AddCycleSkillBtns\n          新增循环技能={新增循环技能}\n          批量新增循环={批量新增循环}\n          处理循环结果对象={处理循环结果对象}\n          模拟信息={模拟信息}\n          大橙武模拟={大橙武模拟}\n          奇穴信息={奇穴信息}\n          宠物顺序={宠物顺序}\n          更新宠物顺序={更新宠物顺序}\n        />\n        {/* 保存自定义循环弹窗 */}\n        <SaveCustomCycleModal\n          自定义循环保存弹窗={自定义循环保存弹窗}\n          设置自定义循环保存弹窗={设置自定义循环保存弹窗}\n          保存自定义循环={确认保存循环}\n        />\n        {/* 循环自定义奇穴弹窗 */}\n        <QixueSetModal\n          奇穴信息={奇穴信息}\n          更新奇穴信息={更新奇穴信息}\n          奇穴弹窗展示={奇穴弹窗展示}\n          更新奇穴弹窗展示={更新奇穴弹窗展示}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default CycleSimulator\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Button } from 'antd'\nimport { 更新增益面板显示状态 } from '@/store/system'\nimport 保存方案 from './保存方案'\n\nfunction 基础设置标题() {\n  const 增益面板显示状态 = useAppSelector((state) => state?.system?.增益面板显示状态)\n  const dispatch = useAppDispatch()\n\n  const 切换增益面板显示状态 = () => {\n    dispatch(更新增益面板显示状态(!增益面板显示状态))\n  }\n\n  return (\n    <h1 className={'common-title'}>\n      基础设置\n      <div>\n        <保存方案 />\n        <Button\n          type='text'\n          size='small'\n          className={'common-title-zengyi'}\n          onClick={() => 切换增益面板显示状态()}\n        >\n          增益详情\n        </Button>\n      </div>\n    </h1>\n  )\n}\n\nexport default 基础设置标题\n","import { useAppSelector } from '@/hooks'\nimport React, { useMemo } from 'react'\nimport { 小药小吃数据类型 } from '@/@types/小药小吃'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport 小药小吃选择框 from './小药小吃选择框'\nimport './index.css'\n\nconst { 小药小吃 = [] } = 获取当前数据()\n\ninterface 小吃数据 {\n  type: string\n  data: 小药小吃数据类型[]\n}\n\nfunction XiaochiXuanze({ 保存数据并计算, 开启智能对比 }) {\n  const 增益数据 = useAppSelector((state) => state.data.增益数据)\n\n  const list: 小吃数据[] = useMemo(() => {\n    let res: 小吃数据[] = []\n    小药小吃.forEach((item) => {\n      if (res?.find((a) => a.type === item?.小吃部位)) {\n        res = res.map((a) => {\n          return {\n            ...a,\n            data: a.type === item?.小吃部位 ? (a?.data || []).concat([item]) : a?.data,\n          }\n        })\n      } else {\n        res.push({\n          type: item?.小吃部位,\n          data: [item],\n        })\n      }\n    })\n    return res\n  }, [])\n\n  const changeSelectedXiaochi = (e, type) => {\n    let newXiaochi = [...(增益数据?.小吃 || [])]\n\n    const existTypeXiaochi = (list.find((a) => a?.type === type)?.data || [])?.find((c) =>\n      newXiaochi?.includes(c?.小吃名称)\n    )\n\n    if (existTypeXiaochi) {\n      newXiaochi = newXiaochi.filter((item) => item !== existTypeXiaochi?.小吃名称)\n      newXiaochi.push(e)\n    } else {\n      newXiaochi.push(e)\n    }\n\n    const newZengyi = { ...增益数据, 小吃: newXiaochi.filter((item) => item) }\n\n    保存数据并计算(newZengyi)\n  }\n\n  return (\n    <div className='zengyi-xiaochi-xuanze'>\n      {(list || []).map((item) => {\n        const selectedValue =\n          item.data.find((a) => 增益数据?.小吃?.includes(a.小吃名称))?.小吃名称 || undefined\n\n        return (\n          <div className='zengyi-xiaochi-item' key={item.type}>\n            <h1 className='zengyi-xiaochi-title'>{item.type}</h1>\n            <小药小吃选择框\n              data={item?.data}\n              value={selectedValue}\n              onChange={(e) => changeSelectedXiaochi(e, item?.type)}\n              开启智能对比={开启智能对比}\n            />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default XiaochiXuanze\n","import { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Button, Checkbox, Dropdown, Menu, Tooltip } from 'antd'\nimport React, { useState } from 'react'\nimport 团队增益选择 from './团队增益选择'\nimport 小药小吃选择 from './小药小吃选择'\nimport 阵眼选择 from './阵眼选择'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新方案数据 } from '@/store/data'\nimport './index.css'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nconst { 默认数据 = {} } = 获取当前数据()\nconst { 增益快捷设置数据 = [] } = 默认数据\n\nfunction 增益面板() {\n  const dispatch = useAppDispatch()\n  const 增益数据 = useAppSelector((state) => state.data.增益数据)\n  const 增益启用 = useAppSelector((state) => state.data.增益启用)\n\n  const [开启智能对比, 设置开启智能对比] = useState<boolean>(false)\n\n  const 修改阵眼数据 = (e) => {\n    const newData = { ...增益数据, 阵眼: e }\n    保存数据并计算(newData)\n  }\n\n  const 保存数据并计算 = (newData) => {\n    dispatch(更新方案数据({ 数据: newData, 属性: '增益数据' }))\n    if (增益启用) {\n      dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n    }\n  }\n\n  const 切换增益启用状态 = (checked) => {\n    dispatch(更新方案数据({ 数据: checked ? true : false, 属性: '增益启用' }))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='zengyi-wrapper'>\n      <h1 className='zengyi-title'>\n        <div className='zengyi-title-text'>\n          增益设置\n          {增益快捷设置数据?.length ? (\n            <Dropdown\n              overlay={\n                <Menu>\n                  {增益快捷设置数据.map((item) => {\n                    return (\n                      <Menu.Item key={item?.快捷名称} onClick={() => 保存数据并计算({ ...item })}>\n                        {item?.快捷名称}\n                      </Menu.Item>\n                    )\n                  })}\n                </Menu>\n              }\n              placement='topLeft'\n            >\n              <Button size='small' style={{ marginLeft: 12 }}>\n                增益快捷设置\n              </Button>\n            </Dropdown>\n          ) : null}\n        </div>\n        <div className={'zengyi-operator'}>\n          <Checkbox checked={!!开启智能对比} onChange={(e) => 设置开启智能对比(e?.target?.checked)}>\n            <Tooltip title='对阵眼、小药做智能dps对比，仅在增益效果启用情况下生效，开启将增加性能损耗'>\n              智能对比\n            </Tooltip>\n          </Checkbox>\n          <Checkbox checked={!!增益启用} onChange={(e) => 切换增益启用状态(e?.target?.checked)}>\n            是否启用\n          </Checkbox>\n        </div>\n      </h1>\n      <阵眼选择\n        value={增益数据?.阵眼 || undefined}\n        开启智能对比={开启智能对比}\n        onChange={修改阵眼数据}\n      />\n      <小药小吃选择 保存数据并计算={保存数据并计算} 开启智能对比={开启智能对比} />\n      <团队增益选择 保存数据并计算={保存数据并计算} />\n    </div>\n  )\n}\n\nexport default 增益面板\n","import { Modal, Tabs } from 'antd'\nimport React, { useState } from 'react'\n\nimport Jx3BoxImport from './Jx3BoxImport'\nimport './index.css'\n\nfunction 魔盒配装方案导入({ visible, onClose, onOk }) {\n  const [active, setActive] = useState('jx3box')\n  const beforeClose = () => {\n    onClose()\n  }\n\n  const beforeOk = (e) => {\n    onOk(e)\n    beforeClose()\n  }\n\n  const items = [{ label: '魔盒导入', key: 'jx3box' }]\n\n  return (\n    <Modal\n      className={'pz-daoru-modal'}\n      title={\n        <div>\n          <Tabs className={'pz-daoru-tabs'} items={items} onChange={setActive} />\n        </div>\n      }\n      open={visible}\n      centered\n      onCancel={() => beforeClose()}\n      footer={null}\n    >\n      {active === 'jx3box' ? <Jx3BoxImport onOk={beforeOk} /> : null}\n    </Modal>\n  )\n}\n\nexport default 魔盒配装方案导入\n","import React from 'react'\nimport { Button, Checkbox, Tooltip } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons'\n\nfunction 配装组件标题({\n  开启装备智能对比,\n  设置开启装备智能对比,\n  form,\n  设置默认镶嵌宝石等级,\n  保存数据并计算,\n}) {\n  // 设置所有镶嵌为6/8级\n  const setAllXiangQian = (number) => {\n    form?.validateFields().then((values) => {\n      const res = { ...values }\n      Object.keys(values)\n        .filter(\n          (item) =>\n            res[item] &&\n            ![\n              '五彩石',\n              '大附魔_伤帽',\n              '大附魔_伤衣',\n              '大附魔_伤腰',\n              '大附魔_伤腕',\n              '大附魔_伤鞋',\n            ].includes(item)\n        )\n        .map((item) => {\n          return {\n            ...values[item],\n            key: item,\n            镶嵌孔数组: values[item]?.镶嵌孔数组?.map((a) => {\n              return {\n                ...a,\n                镶嵌宝石等级: number,\n              }\n            }),\n          }\n        })\n        .forEach((item) => {\n          if (res[item.key]) {\n            const newObj = { ...item }\n            delete newObj.key\n            res[item.key] = { ...newObj }\n          }\n        })\n      设置默认镶嵌宝石等级(number)\n      保存数据并计算(res)\n    })\n  }\n\n  return (\n    <div className='zhuangbei-form-header'>\n      <div className='zhuangbei-form-left-1'>\n        <h1 className='zhuangbei-form-title'>装备</h1>\n        <Checkbox\n          checked={开启装备智能对比}\n          onChange={(e) => 设置开启装备智能对比(e?.target?.checked)}\n          className={'zhuangbei-diff-btn'}\n        >\n          智能对比\n          <Tooltip\n            overlayInnerStyle={{ width: 350 }}\n            title={\n              <div>\n                <p>对比默认精炼等级下切换至另一件装备dps波动。</p>\n                <p>注意：目标为橙武时不会自动切换循环。</p>\n                <p>考虑性能，暂时只开放13200品以上装备的智能对比。</p>\n                <p>开启后打开装备选择框时会略微卡顿。</p>\n              </div>\n            }\n          >\n            <QuestionCircleOutlined className={'zhuangbei-diff-tip'} />\n          </Tooltip>\n        </Checkbox>\n      </div>\n      <div className='zhuangbei-form-left-2'>\n        <h1 className='zhuangbei-form-title'>精炼</h1>\n      </div>\n      <div className='zhuangbei-form-left-3'>\n        <h1 className='zhuangbei-form-title'>镶嵌孔</h1>\n        <div>\n          <Button\n            size='small'\n            onClick={() => setAllXiangQian(6)}\n            className={'zhuangbei-form-set-btn'}\n          >\n            全六级\n          </Button>\n          <Button\n            size='small'\n            onClick={() => setAllXiangQian(7)}\n            className={'zhuangbei-form-set-btn'}\n          >\n            全七级\n          </Button>\n          <Button\n            size='small'\n            onClick={() => setAllXiangQian(8)}\n            className={'zhuangbei-form-set-btn'}\n          >\n            全八级\n          </Button>\n        </div>\n      </div>\n      <div className='zhuangbei-form-left-4'>\n        <h1 className='zhuangbei-form-title'>附魔</h1>\n      </div>\n      <div className='zhuangbei-form-left-5'>\n        <h1 className='zhuangbei-form-title'>大附魔</h1>\n      </div>\n      <div className='zhuangbei-form-left-6'>\n        <h1 className='zhuangbei-form-title'>五彩石</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default 配装组件标题\n","import React, { useEffect, useState } from 'react'\nimport { Button, Form, Modal, ModalProps } from 'antd'\nimport { 装备信息数据类型, 装备位置部位枚举 } from '@/@types/装备'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 秒伤计算, 触发秒伤计算 } from '@/计算模块/计算函数'\nimport { 更新方案数据 } from '@/store/data'\nimport ValueCheckBox from '@/组件/ValueCheckBox'\n\nimport 根据表单选项获取装备信息 from './工具函数/根据表单选项获取装备信息'\nimport 魔盒配装方案导入 from './功能组件/魔盒配装方案导入'\nimport 配装组件标题 from './功能组件/配装组件标题'\nimport 五彩石选择 from './功能组件/五彩石选择'\nimport 装备选择 from './功能组件/装备选择'\nimport 面板展示 from './功能组件/面板展示'\nimport 装备增益展示 from './功能组件/装备增益展示'\nimport 秒伤结果对比 from './功能组件/秒伤结果对比'\n\nimport 头部组件 from './头部组件'\nimport './index.css'\n\nfunction 配装器(props: ModalProps) {\n  const { open, onCancel } = props\n  const dispatch = useAppDispatch()\n\n  const 当前计算结果 = useAppSelector((state) => state?.data?.当前计算结果)\n  const 装备信息 = useAppSelector((state) => state?.data?.装备信息)\n\n  const [当前装备信息, 更新当前装备信息] = useState<装备信息数据类型>()\n  const [更换装备后秒伤, 设置更换装备后秒伤] = useState<number>(0)\n  const [魔盒导入弹窗, 设置魔盒导入弹窗] = useState(false)\n  const [开启装备智能对比, 设置开启装备智能对比] = useState<boolean>(false)\n  const [默认镶嵌宝石等级, 设置默认镶嵌宝石等级] = useState<number>(8)\n\n  useEffect(() => {\n    if (open) {\n      更新当前装备信息(装备信息)\n      设置更换装备后秒伤(0)\n      设置魔盒导入弹窗(false)\n      设置开启装备智能对比(false)\n      设置默认镶嵌宝石等级(8)\n      初始化表单(装备信息)\n    }\n  }, [open])\n\n  const [form] = Form.useForm()\n\n  const 初始化表单 = (装备信息: 装备信息数据类型) => {\n    const newObj = {\n      五彩石: 装备信息.五彩石,\n      大附魔_伤帽: 装备信息?.装备增益?.大附魔_伤帽,\n      大附魔_伤衣: 装备信息?.装备增益?.大附魔_伤衣,\n      大附魔_伤腰: 装备信息?.装备增益?.大附魔_伤腰,\n      大附魔_伤腕: 装备信息?.装备增益?.大附魔_伤腕,\n      大附魔_伤鞋: 装备信息?.装备增益?.大附魔_伤鞋,\n    }\n    Object.keys(装备位置部位枚举).map((item, index) => {\n      const o = 装备信息.装备列表?.find(\n        (a, i) => a.装备部位 === 装备位置部位枚举[item] && index === i\n      )\n      if (o) {\n        newObj[`${item}`] = o\n      }\n    })\n    form.setFieldsValue(newObj)\n  }\n\n  const 更换装备计算秒伤 = (_, value) => {\n    try {\n      const 装备信息 = 根据表单选项获取装备信息(value)\n      const { 秒伤 } = dispatch(秒伤计算({ 更新装备信息: 装备信息 }))\n      设置更换装备后秒伤(秒伤)\n      更新当前装备信息(装备信息)\n    } catch (_) {\n      更新当前装备信息(undefined)\n      设置更换装备后秒伤(0)\n    }\n  }\n\n  // 导入配装数据\n  const 保存数据并计算 = (e) => {\n    form.setFieldsValue({ ...e })\n    更换装备计算秒伤(undefined, e)\n  }\n\n  const onOk = () => {\n    form.validateFields().then((value) => {\n      const 装备信息 = 根据表单选项获取装备信息(value)\n      dispatch(更新方案数据({ 数据: 装备信息, 属性: '装备信息' }))\n      dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n      onCancel?.({} as any)\n    })\n  }\n\n  return (\n    <Modal\n      title={\n        <头部组件\n          更换装备计算秒伤={更换装备计算秒伤}\n          对比秒伤={更换装备后秒伤 || 当前计算结果?.秒伤}\n          对比装备信息={当前装备信息 || 装备信息}\n          form={form}\n        />\n      }\n      className={'zhuangbei-input-set-modal'}\n      open={open}\n      width={1224}\n      destroyOnClose\n      footer={\n        <div>\n          <Button onClick={() => 设置魔盒导入弹窗(true)}>魔盒配装导入</Button>\n          <Button type='primary' onClick={() => onOk()}>\n            保存并计算\n          </Button>\n        </div>\n      }\n      centered\n      onCancel={(e) => onCancel?.(e)}\n    >\n      <配装组件标题\n        开启装备智能对比={开启装备智能对比}\n        设置开启装备智能对比={设置开启装备智能对比}\n        设置默认镶嵌宝石等级={设置默认镶嵌宝石等级}\n        保存数据并计算={保存数据并计算}\n        form={form}\n      />\n      <Form\n        colon={false}\n        onValuesChange={更换装备计算秒伤}\n        className='zhuangbei-input-set-modal-form'\n        form={form}\n      >\n        <div className='zhuangbei-input-set-modal-form-left'>\n          {Object.keys(装备位置部位枚举).map((部位索引) => {\n            const 部位名称 = 装备位置部位枚举[部位索引]\n            return (\n              <Form.Item label={部位名称} name={`${部位索引}`} key={`${部位索引}`}>\n                <装备选择\n                  form={form}\n                  默认镶嵌宝石等级={默认镶嵌宝石等级}\n                  部位={部位名称}\n                  部位索引={部位索引}\n                  开启装备智能对比={开启装备智能对比}\n                />\n              </Form.Item>\n            )\n          })}\n        </div>\n        <div className='zhuangbei-set-dafumo-wrapper'>\n          <Form.Item name={`大附魔_伤帽`}>\n            <ValueCheckBox>伤帽</ValueCheckBox>\n          </Form.Item>\n          <Form.Item name={`大附魔_伤衣`}>\n            <ValueCheckBox>伤衣</ValueCheckBox>\n          </Form.Item>\n          <Form.Item name={`大附魔_伤腰`}>\n            <ValueCheckBox>伤腰</ValueCheckBox>\n          </Form.Item>\n          <Form.Item name={`大附魔_伤腕`}>\n            <ValueCheckBox>伤腕</ValueCheckBox>\n          </Form.Item>\n          <Form.Item name={`大附魔_伤鞋`}>\n            <ValueCheckBox>伤鞋</ValueCheckBox>\n          </Form.Item>\n        </div>\n        <div className='zhuangbei-input-set-modal-form-right'>\n          <Form.Item name={`五彩石`}>\n            <五彩石选择 />\n          </Form.Item>\n          <面板展示 当前装备信息={当前装备信息 || 装备信息} />\n          <装备增益展示 装备增益={当前装备信息?.装备增益 || 装备信息?.装备增益} />\n          <秒伤结果对比 更换装备后秒伤={更换装备后秒伤} />\n        </div>\n      </Form>\n      <魔盒配装方案导入\n        visible={魔盒导入弹窗}\n        onClose={() => 设置魔盒导入弹窗(false)}\n        onOk={(e) => 保存数据并计算(e)}\n      />\n    </Modal>\n  )\n}\n\nexport default 配装器\n","/**\n * 装备选择\n */\nimport React, { forwardRef, useMemo } from 'react'\nimport 装备部位选择 from './装备部位选择'\nimport 精炼等级选择 from './精炼等级选择'\nimport 镶嵌孔选择 from './镶嵌孔选择'\nimport 附魔选择 from './附魔选择'\nimport { 装备部位枚举 } from '@/@types/枚举'\nimport { 装备位置部位枚举, 装备属性信息模型, 装备类型枚举, 选择装备数据类型 } from '@/@types/装备'\nimport './index.css'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\n\ninterface 装备选择入参 {\n  value?: 选择装备数据类型\n  onChange?: (e: 选择装备数据类型) => void\n  form: any\n  部位: 装备部位枚举\n  部位索引: string\n  默认镶嵌宝石等级: number\n  开启装备智能对比: boolean\n}\n\nconst { 装备数据, 附魔 } = 获取当前数据()\n\nfunction 装备选择(props: 装备选择入参, ref) {\n  const { value, onChange, 部位, 默认镶嵌宝石等级, 部位索引, form, 开启装备智能对比 } = props\n\n  const list: 装备属性信息模型[] = useMemo(() => {\n    return 装备数据[部位] || []\n  }, [部位])\n\n  // 选择装备\n  const 选择装备 = (e) => {\n    const obj = list.find((item) => item.id === e)\n    onChange &&\n      onChange({\n        ...value,\n        镶嵌孔数组: obj?.镶嵌孔数组?.map((item) => {\n          return {\n            ...item,\n            镶嵌宝石等级: 默认镶嵌宝石等级,\n          }\n        }),\n        当前精炼等级: 获取最大精炼等级(obj),\n        id: e,\n        装备部位: 装备位置部位枚举[部位索引],\n      } as any)\n  }\n\n  // 选择精炼等级\n  const 选择精炼等级 = (e) => {\n    onChange &&\n      onChange({\n        ...value,\n        当前精炼等级: e,\n      } as any)\n  }\n\n  // 选择精炼等级\n  const 选择镶嵌孔 = (e) => {\n    onChange &&\n      onChange({\n        ...value,\n        镶嵌孔数组: e,\n      } as any)\n  }\n\n  const onFumoSelect = (e) => {\n    onChange &&\n      onChange({\n        ...value,\n        附魔: e,\n      } as any)\n  }\n\n  const 当前选择装备数据: 装备属性信息模型 = useMemo(() => {\n    const obj = list.find((item) => item.id === value?.id)\n    return {\n      ...obj,\n      最大精炼等级: obj ? 获取最大精炼等级(obj) || 0 : undefined,\n    } as any\n  }, [value?.id])\n\n  const 当前装备支持附魔列表 = useMemo(() => {\n    return (附魔 || []).filter((item) => {\n      return item?.附魔支持部位?.some((a) => a === 部位)\n    })\n  }, [部位, 附魔])\n\n  return (\n    <div className={'zhuangbei-form-item'} ref={ref}>\n      <div className='zhuangbei-form-item-left-1'>\n        <装备部位选择\n          value={value?.id}\n          allValue={value}\n          onChange={选择装备}\n          form={form}\n          装备数据列表={list}\n          部位={部位}\n          部位索引={部位索引}\n          默认镶嵌宝石等级={默认镶嵌宝石等级}\n          开启装备智能对比={开启装备智能对比}\n        />\n      </div>\n      <div className='zhuangbei-form-item-left-2'>\n        <精炼等级选择\n          disabled={!当前选择装备数据?.id}\n          key={当前选择装备数据?.id}\n          value={value?.当前精炼等级}\n          defaultValue={当前选择装备数据?.最大精炼等级}\n          onChange={选择精炼等级}\n          装备数据={当前选择装备数据}\n        />\n      </div>\n      <div className='zhuangbei-form-item-left-3'>\n        <镶嵌孔选择\n          data={当前选择装备数据 as any}\n          value={value?.镶嵌孔数组}\n          onChange={选择镶嵌孔}\n          部位索引={部位索引}\n        />\n      </div>\n      {当前装备支持附魔列表?.length && 当前选择装备数据?.id ? (\n        <div className='zhuangbei-form-item-left-4'>\n          <附魔选择 list={当前装备支持附魔列表} value={value?.附魔} onChange={onFumoSelect} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default forwardRef(装备选择)\n\nexport const 获取最大精炼等级 = (data?: 装备属性信息模型) => {\n  switch (data?.装备类型) {\n    case 装备类型枚举.橙武:\n      return 8\n    case 装备类型枚举.副本精简:\n    case 装备类型枚举.特效武器:\n      return 4\n    case 装备类型枚举.试炼精简:\n      return 3\n    default:\n      return 6\n  }\n}\n","import { Button } from 'antd'\nimport React from 'react'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport { useAppDispatch } from '@/hooks'\nimport './index.css'\n\nfunction Footer() {\n  const dispatch = useAppDispatch()\n  const 计算伤害 = () => {\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n  return (\n    <div className={'basic-footer'}>\n      <Button className={'basic-footer-btn'} type='primary' onClick={() => 计算伤害()}>\n        计算\n      </Button>\n    </div>\n  )\n}\n\nexport default Footer\n","// 默认不展示在页面上的，但是鼠标移动上去可以点击\nimport React, { useState } from 'react'\nimport DeveloperModal from './开发者工具'\nimport './index.css'\n\nfunction 页面隐藏工具() {\n  const [visible, setVisible] = useState(false)\n  // const [skillVisible, setSkillVisible] = useState(false)\n\n  return (\n    <div className='tools-wrapper'>\n      <span className='tools-btn' onClick={() => setVisible(true)}>\n        开发者工具\n      </span>\n      {/* <span className='tools-btn' onClick={() => setSkillVisible(true)}>\n        技能详情\n      </span> */}\n      <DeveloperModal visible={visible} onClose={() => setVisible(false)} />\n      {/* 技能详情 */}\n      {/* <SkillDamageTable visible={skillVisible} onClose={() => setSkillVisible(false)} /> */}\n    </div>\n  )\n}\n\nexport default 页面隐藏工具\n","import React from 'react'\nimport 当前版本 from './当前版本'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 数据提供 } = 获取当前数据()\n\nfunction 顶部说明() {\n  return (\n    <>\n      <h1 className={'title-tip'}>{数据提供}</h1>\n      <当前版本 />\n    </>\n  )\n}\n\nexport default 顶部说明\n"],"names":["缓存映射","获取当前数据","加速等级枚举","props","打开循环模拟器","disabled","useState","logData","setLogData","秒伤","总伤","秒伤计算时间","计算结果技能列表","模拟DPS结果","更新模拟DPS结果","角色状态信息","箭袋信息","Array","from","length","箭形态","箭形态枚举","当前时间","当前自身buff列表","当前目标buff列表","循环执行结果","循环异常信息","技能基础数据","循环模拟技能基础数据","技能释放记录","当前各技能运行状态","当前DOT运行状态","当前GCD组","当前宠物数据","模拟信息","更新模拟信息","basicModalOpen","setBasicModalOpen","cycle","setCycle","自定义循环保存弹窗","设置自定义循环保存弹窗","外部加速值","useAppSelector","state","data","装备信息","装备基础属性","加速等级","外部延迟","网络延迟","大橙武模拟","装备增益","大橙武特效","更新加速等级","更新网络延迟","显示标鹄层数","更新显示标鹄层数","自定义循环列表","加速值","useMemo","起手承契","设置起手承契","Object","keys","宠物基础数据","宠物顺序","更新宠物顺序","reduxQixuedata","当前奇穴信息","奇穴信息","更新奇穴信息","奇穴弹窗展示","更新奇穴弹窗展示","buff覆盖数据","更新buff覆盖数据","dispatch","useAppDispatch","useEffect","获取加速等级","simulator","传入加速","传入延迟","更新展示","奇穴","res","模拟循环","测试循环","map","item","技能名称","undefined","最终日志","处理后自身buff","处理后目标buff","处理后角色状态信息","rest","计算dps","获取用于计算的技能组","getDpsCycle","秒伤计算","更新循环技能列表","更新计算时间","每秒郭氏帧","更新奇穴数据","处理循环结果对象","index","找到当前技能释放记录","显示循环","完整循环","删除循环技能","newCycle","splice","保存信息","forEach","名称","localStorage","setItem","自定义循环","JSON","stringify","danger","size","onClick","className","maskClosable","width","title","循环","centered","footer","open","onCancel","destroyOnClose","轮次","ReactSortable","list","i","assign","id","setList","e","newList","type","minIndex","reduce","min","obj","Math","Infinity","maxIndex","max","Number","NEGATIVE_INFINITY","a","当前技能数据","find","b","push","拖拽更新循环","animation","draggable","style","color","Modal","onOk","filter","删除本轮后全部循环","没箭了","换箭","concat","复制本轮至最后","删除本轮次","batchItem","加速选项","延迟选项","各延迟枚举","各加速枚举","保存循环结果","异常结果","加速","实际加速值","延迟","模拟结果","本次日志","战斗秒","用于计算循环","循环加速等级","循环延迟要求","战斗时间","技能详情","message","join","技能序列","新自定义循环","some","标题","类型","标记","循环详情","额外配置信息","更新当前自定义循环列表","增益面板显示状态","system","更新增益面板显示状态","小药小吃","保存数据并计算","开启智能对比","增益数据","小吃部位","selectedValue","小吃","includes","小吃名称","value","onChange","newXiaochi","existTypeXiaochi","c","newZengyi","changeSelectedXiaochi","默认数据","增益快捷设置数据","增益启用","设置开启智能对比","newData","更新方案数据","数据","属性","触发秒伤计算","是否更新显示计算结果","overlay","快捷名称","placement","marginLeft","checked","target","阵眼","visible","onClose","active","setActive","beforeClose","items","label","key","Jx3BoxImport","开启装备智能对比","设置开启装备智能对比","form","设置默认镶嵌宝石等级","setAllXiangQian","number","validateFields","then","values","镶嵌孔数组","镶嵌宝石等级","newObj","overlayInnerStyle","QuestionCircleOutlined","当前计算结果","当前装备信息","更新当前装备信息","更换装备后秒伤","设置更换装备后秒伤","魔盒导入弹窗","设置魔盒导入弹窗","默认镶嵌宝石等级","初始化表单","Form","五彩石","大附魔_伤帽","大附魔_伤衣","大附魔_伤腰","大附魔_伤腕","大附魔_伤鞋","装备位置部位枚举","o","装备列表","装备部位","setFieldsValue","更换装备计算秒伤","_","根据表单选项获取装备信息","更新装备信息","colon","onValuesChange","部位索引","部位名称","name","ValueCheckBox","装备数据","附魔","装备选择","ref","部位","当前选择装备数据","最大精炼等级","获取最大精炼等级","当前装备支持附魔列表","附魔支持部位","allValue","当前精炼等级","defaultValue","forwardRef","装备类型","装备类型枚举","setVisible","数据提供"],"sourceRoot":""}