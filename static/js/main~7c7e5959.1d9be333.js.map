{"version":3,"file":"static/js/main~7c7e5959.1d9be333.js","mappings":"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","sources":["功能模块/基础设置/公用设置/方案选择/index.tsx","功能模块/基础设置/公用设置/目标选择/index.tsx","功能模块/基础设置/公用设置/延迟选择/index.tsx","功能模块/基础设置/公用设置/秘籍选择/index.tsx","功能模块/基础设置/公用设置/index.tsx","功能模块/基础设置/属性录入/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/装备增益展示/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/面板展示/index.tsx","功能模块/基础设置/属性录入/配装器/头部组件/最佳附魔设置/index.tsx","功能模块/系统工具/页面隐藏工具/开发者工具/五彩石导入/index.tsx"],"sourcesContent":["import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新选中的方案数据 } from '@/store/data'\nimport { Select } from 'antd'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nfunction 方案选择() {\n  const dispatch = useAppDispatch()\n  const 当前方案名称 = useAppSelector((state) => state?.data?.当前方案名称)\n  const 全部方案数据 = useAppSelector((state) => state?.data?.全部方案数据)\n\n  const 切换方案 = (e) => {\n    dispatch(更新选中的方案数据(e))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='common-item'>\n      <h1 className='common-label'>方案</h1>\n      <div className='common-content'>\n        <Select\n          className='current-project'\n          value={当前方案名称}\n          onChange={(v) => {\n            切换方案(v)\n          }}\n        >\n          {Object.keys(全部方案数据).map((item) => {\n            return (\n              <Select.Option value={item} key={item}>\n                {item}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  )\n}\n\nexport default 方案选择\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select } from 'antd'\nimport { 更新当前输出计算目标名称 } from '@/store/data'\nimport { 目标集合 } from '@/数据/目标'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport classnames from 'classnames'\nimport './index.css'\n\nfunction 目标选择() {\n  const dispatch = useAppDispatch()\n  const 当前输出计算目标名称 = useAppSelector((state) => state?.data?.当前输出计算目标名称)\n\n  const 切换目标 = (v) => {\n    dispatch(更新当前输出计算目标名称(v))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='common-item'>\n      <h1 className='common-label'>目标</h1>\n      <div className='common-content'>\n        <Select\n          className='current-boss'\n          value={当前输出计算目标名称}\n          onChange={(v) => {\n            切换目标(v)\n          }}\n        >\n          {目标集合.map((item) => {\n            const cls = classnames(\n              'target-select-item-tag',\n              item.目标类型 === '试炼' ? 'target-select-item-tag-purple' : '',\n              item.目标类型 === '木桩' ? 'target-select-item-tag-orange' : ''\n            )\n            return (\n              <Select.Option value={item?.名称} key={item.名称} label={item.名称}>\n                <div className='target-select-item'>\n                  {item.名称}\n                  <span className={cls}>{item.目标类型}</span>\n                </div>\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  )\n}\n\nexport default 目标选择\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select } from 'antd'\nimport { 更新网络延迟 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport useCycle from '@/hooks/use-cycle'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nfunction 延迟选择() {\n  const dispatch = useAppDispatch()\n  const 网络延迟 = useAppSelector((state) => state?.data?.网络延迟)\n\n  // 当循环中有延迟的时候才展示延迟选择组件\n  const { 全部循环 = [] } = useCycle()\n\n  const 当前是否有循环包含延迟 = 全部循环?.some((item) =>\n    item?.循环详情?.some((循环) => !!循环?.循环延迟要求)\n  )\n\n  const 切换延迟 = (v) => {\n    dispatch(更新网络延迟(v))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return 当前是否有循环包含延迟 ? (\n    <div className='common-item'>\n      <h1 className='common-label'>延迟</h1>\n      <div className='common-content'>\n        <Select\n          className='current-boss'\n          value={网络延迟}\n          onChange={(v) => {\n            切换延迟(v)\n          }}\n        >\n          {延迟设定.map((item) => {\n            return (\n              <Select.Option value={item?.value} key={item.value}>\n                {item.label}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default 延迟选择\n","import React, { useState } from 'react'\nimport { Button, Checkbox, Col, Drawer, Row, message } from 'antd'\nimport { 技能秘籍信息 } from '@/@types/秘籍'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新当前秘籍信息 } from '@/store/data'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport { 获取当前职业的所有秘籍信息 } from './utils'\nimport './index.css'\n\nconst 当前职业的所有秘籍信息 = 获取当前职业的所有秘籍信息()\n\nfunction 秘籍选择() {\n  const [visible, setVisible] = useState<boolean>(false)\n  const dispatch = useAppDispatch()\n  const 当前秘籍信息 = useAppSelector((state) => state?.data?.当前秘籍信息)\n\n  const 选择秘籍 = (新秘籍列表: string[], 技能信息: 技能秘籍信息) => {\n    if (新秘籍列表?.length > 4) {\n      message.error('一个技能最多选择四个秘籍')\n      return\n    }\n    const newData = {\n      ...当前秘籍信息,\n      [技能信息?.技能名称]: 新秘籍列表,\n    }\n    dispatch(更新当前秘籍信息(newData))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <>\n      <Button size='small' className='miji-set-button' onClick={() => setVisible(true)}>\n        秘籍设置\n      </Button>\n      <Drawer\n        title={'秘籍设置'}\n        width={348 + 36}\n        open={visible}\n        mask={false}\n        placement='left'\n        onClose={() => {\n          setVisible(false)\n        }}\n      >\n        {当前职业的所有秘籍信息.map((技能) => {\n          return (\n            <div className={'miji-selected-item'} key={技能.技能名称}>\n              <h1 className={'miji-skill-title'}>{技能.技能名称}</h1>\n              <Checkbox.Group\n                value={当前秘籍信息?.[技能?.技能名称] || []}\n                onChange={(新秘籍列表) => 选择秘籍(新秘籍列表 as string[], 技能)}\n              >\n                <Row>\n                  {技能.技能秘籍列表.map((秘籍) => {\n                    return (\n                      <Col key={`${技能?.技能名称}${秘籍}`} span={8}>\n                        <Checkbox value={秘籍}>{秘籍}</Checkbox>\n                      </Col>\n                    )\n                  })}\n                </Row>\n              </Checkbox.Group>\n            </div>\n          )\n        })}\n      </Drawer>\n    </>\n  )\n}\n\nexport default 秘籍选择\n","import React from 'react'\n\nimport 方案选择 from './方案选择'\nimport 目标选择 from './目标选择'\nimport 循环选择 from './循环选择'\nimport 延迟选择 from './延迟选择'\nimport 秘籍选择 from './秘籍选择'\nimport 奇穴选择 from './奇穴选择'\nimport 循环模拟 from './循环模拟'\n\nimport './index.css'\n\nfunction 公用设置() {\n  return (\n    <div className={'common-set'}>\n      <方案选择 />\n      <目标选择 />\n      <循环选择 />\n      <延迟选择 />\n      <div className='common-item' style={{ height: 'unset' }}>\n        <秘籍选择 />\n        <奇穴选择 />\n        <循环模拟 />\n      </div>\n    </div>\n  )\n}\n\nexport default 公用设置\n","import { Button } from 'antd'\nimport React, { useState } from 'react'\nimport 配装器 from './配装器'\n\nimport './index.css'\n\nfunction 属性录入() {\n  const [配装器弹窗显示状态, 切换配装器弹窗显示状态] = useState<boolean>(false)\n\n  return (\n    <div className={'character-set'}>\n      <Button\n        onClick={() => {\n          切换配装器弹窗显示状态(true)\n        }}\n      >\n        配装器\n      </Button>\n      <配装器\n        open={配装器弹窗显示状态}\n        onCancel={() => {\n          切换配装器弹窗显示状态(false)\n        }}\n      />\n    </div>\n  )\n}\n\nexport default 属性录入\n","import React from 'react'\nimport { 装备增益类型 } from '@/@types/装备'\nimport 装备增益展示信息 from './装备增益展示信息'\nimport './index.css'\n\nfunction 装备增益展示({ 装备增益 }: { 装备增益: 装备增益类型 }) {\n  return 装备增益 ? (\n    <div className={'zhuangbei-zengyi-wrapper'}>\n      <div className='zhuangbei-zengyi-content'>\n        {Object.keys(装备增益)\n          .filter((item) => {\n            return !item?.includes('大附魔') && !!装备增益[item]\n          })\n          .map((item) => {\n            return <装备增益展示信息 key={item} 增益类型={item} data={装备增益[item]} />\n          })}\n      </div>\n    </div>\n  ) : null\n}\n\nexport default 装备增益展示\n","// 当前装备下的属性面板\nimport React, { useMemo, useState } from 'react'\nimport { Tooltip } from 'antd'\nimport classnames from 'classnames'\nimport { 装备信息数据类型 } from '@/@types/装备'\nimport { useAppSelector } from '@/hooks'\nimport { 获取角色需要展示的面板数据 } from '@/功能模块/基础设置/面板信息/工具'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取面板显示数据数值, 获取面板显示数据 } from '@/功能模块/基础设置/面板信息'\nimport './index.css'\n\ninterface 面板展示入参 {\n  当前装备信息: 装备信息数据类型\n}\n\nconst { 主属性 } = 获取当前数据()\n\nfunction 面板展示(props: 面板展示入参) {\n  const { 当前装备信息 } = props\n  // 原始最终属性\n  const 装备信息 = useAppSelector((state) => state?.data?.装备信息)\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const 增益数据 = useAppSelector((state) => state?.data?.增益数据)\n  const 增益启用 = useAppSelector((state) => state?.data?.增益启用)\n  const [显示增益后面板, 切换显示增益后面板] = useState<boolean>(false)\n\n  const 获取计算后原始属性 = (计算装备信息) => {\n    return 获取角色需要展示的面板数据({\n      装备信息: 计算装备信息,\n      当前奇穴信息,\n      增益数据,\n      增益启用,\n      显示增益后面板,\n    })\n  }\n\n  const 显示数据 = useMemo(() => {\n    const 计算后的原始最终属性 = 获取计算后原始属性(装备信息)\n    const 计算后的当前显示属性 = 获取计算后原始属性(当前装备信息)\n    const 对比枚举 = {}\n    Object.keys(计算后的当前显示属性).forEach((key) => {\n      const 原始属性数值 = 计算后的原始最终属性[key]\n      对比枚举[key] =\n        原始属性数值 > 计算后的当前显示属性[key]\n          ? '变低'\n          : 原始属性数值 < 计算后的当前显示属性[key]\n          ? '变高'\n          : '-1'\n    })\n    return { 数据: 计算后的当前显示属性, 对比枚举 }\n  }, [当前装备信息, 当前奇穴信息, 装备信息, 增益数据, 增益启用, 显示增益后面板])\n\n  const mapKeyList = [主属性, '攻击', '会心', '会效', '破防', '无双', '破招', '全能', '加速']\n\n  return (\n    <div\n      className={`${\n        显示增益后面板 ? 'zhuangbei-character-zengyi' : 'zhuangbei-character-wuzengyi'\n      } zhuangbei-character-show`}\n    >\n      <div className='zhuangbei-show-zengyi-tag'>\n        <div className='tag-active' />\n        <div\n          onClick={() => 切换显示增益后面板(false)}\n          className='show-zengyi-tag-item hide-zengyi-charactor'\n        >\n          无增益面板\n        </div>\n        <div\n          onClick={() => 切换显示增益后面板(true)}\n          className='show-zengyi-tag-item shouw-zengyi-charactor'\n        >\n          增益后面板\n        </div>\n      </div>\n      {mapKeyList.map((item, index) => {\n        const 对比枚举属性名 = 显示文案和实际属性枚举[item]\n        const 对比枚举结果 = 显示数据?.对比枚举?.[对比枚举属性名]\n        const 有变化 = 对比枚举结果 && 对比枚举结果 !== '-1'\n        const cls = classnames(\n          'zhuangbei-character-content-normal',\n          有变化\n            ? 对比枚举结果 === '变高'\n              ? 'zhuangbei-character-content-upper'\n              : 'zhuangbei-character-content-down'\n            : ''\n        )\n        return (\n          <div\n            id={`zhuangbei-character-item_${item}`}\n            className={`zhuangbei-character-item ${\n              index === mapKeyList.length - 1 ? 'zhuangbei-character-item-last' : ''\n            }`}\n            key={item}\n          >\n            <h1 className='zhuangbei-character-label'>{item}</h1>\n            <Tooltip\n              placement='left'\n              getPopupContainer={() =>\n                document.getElementById(`zhuangbei-character-item_${item}`) as any\n              }\n              title={\n                <div>\n                  <p>{获取面板显示数据数值(item, 显示数据?.数据)}</p>\n                  {有变化 ? <p>较原面板[{对比枚举结果}]</p> : null}\n                </div>\n              }\n            >\n              <div className='zhuangbei-character-content'>\n                <span className={cls}>{获取面板显示数据(item, 显示数据?.数据)}</span>\n              </div>\n            </Tooltip>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default 面板展示\n\nexport const 显示文案和实际属性枚举 = {\n  力道: '力道',\n  身法: '身法',\n  元气: '元气',\n  根骨: '根骨',\n  攻击: '面板攻击',\n  会心: '会心等级',\n  会效: '会心效果等级',\n  破防: '破防等级',\n  破招: '破招值',\n  无双: '无双等级',\n  全能: '全能等级',\n  加速: '加速等级',\n}\n","// 一键设置最佳附魔\nimport { Button, Checkbox, Col, Divider, Modal, Row, message } from 'antd'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useAppDispatch } from '@/hooks'\nimport { RiseOutlined } from '@ant-design/icons'\n// import { 装备部位枚举 } from '@/@types/枚举'\nimport { 角色基础属性类型 } from '@/@types/角色'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 装备位置部位枚举 } from '@/@types/装备'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\n\nimport 根据装备信息获取基础属性 from '../../工具函数/根据装备信息获取基础属性'\nimport { 修改装备属性, 初始化所有组合 } from './util'\nimport './index.css'\n\nconst { 默认数据 = {}, 性能功能关闭数组, 名称: 心法名称 } = 获取当前数据()\nconst { 一键附魔默认部位 = [] } = 默认数据\n\nconst 没有附魔的部位 = ['_7', '_8']\nconst 全部部位: 装备位置部位枚举[] = Object.keys(装备位置部位枚举).filter(\n  (key) => !没有附魔的部位?.includes(key)\n) as 装备位置部位枚举[]\n\nfunction 最佳附魔设置({ 一键替换附魔, 对比秒伤, 对比装备信息 }) {\n  const [open, setOpen] = useState<boolean>(false)\n  const [部位选择弹窗, 更新部位选择弹窗] = useState<boolean>(false)\n  const [最大组合, 更新最大组合] = useState<any>({})\n  const [最大Dps, 更新最大秒伤] = useState<number>(0)\n  const [计算用时, 更新计算用时] = useState<number>(0)\n  const [无附魔装备属性, 设置无附魔装备属性] = useState<角色基础属性类型>()\n\n  const [当前选择计算部位, 更新当前选择计算部位] = useState<装备位置部位枚举[]>(\n    一键附魔默认部位?.length ? 一键附魔默认部位 : 全部部位\n  )\n\n  const 是否选择部分 = useMemo(() => {\n    return !!(当前选择计算部位?.length && 当前选择计算部位?.length < 全部部位?.length)\n  }, [当前选择计算部位, 全部部位])\n\n  const 是否全选 = useMemo(() => {\n    return !全部部位?.some((key) => !当前选择计算部位?.includes(key))\n  }, [当前选择计算部位, 全部部位])\n\n  // 所有组合的缓存数据\n  const dispatch = useAppDispatch()\n  const dataRef = useRef<any>()\n\n  useEffect(() => {\n    初始化(当前选择计算部位)\n  }, [对比装备信息, 当前选择计算部位])\n\n  const 当前附魔信息 = useMemo(() => {\n    const res: any[] = []\n    const 不同部位: string[] = []\n    if (Object.keys(最大组合)?.length !== 0) {\n      const 列表 = 对比装备信息?.装备列表\n      Object.keys(最大组合).forEach((key) => {\n        const 装备位置 = 装备位置部位枚举[key]\n        const 当前附魔 = 列表?.find((item) => item?.装备部位 === 装备位置)?.附魔 || ''\n        res.push({\n          部位: 装备位置,\n          附魔: 当前附魔,\n        })\n\n        const 附魔属性 = Object.keys(最大组合[key])?.[0]\n        const 附魔值 = Object.values(最大组合[key])?.[0]\n        if (当前附魔 !== `${附魔属性}+${附魔值}`) {\n          不同部位.push(key)\n        }\n      })\n    }\n    return {\n      当前附魔: res,\n      不同部位,\n    }\n  }, [对比装备信息, 最大组合])\n\n  // 先根据当前的附魔列表，计算出最后计算dps时所需要的排列组合\n  const 初始化 = (计算部位) => {\n    const res = 初始化所有组合(计算部位)\n    获取当前装备信息去除附魔加成的面板(计算部位)\n    dataRef.current = res\n  }\n\n  const 获取当前装备信息去除附魔加成的面板 = (计算部位) => {\n    const { 装备基础属性 } = 根据装备信息获取基础属性(对比装备信息, { 过滤附魔部位: 计算部位 })\n    设置无附魔装备属性(装备基础属性)\n  }\n\n  const 计算前提示 = () => {\n    if (无附魔装备属性) {\n      Modal.confirm({\n        title: `确定开始计算吗`,\n        content: (\n          <div>\n            <p>共 {dataRef?.current?.length} 种组合，计算将造成一定卡顿</p>\n            {dataRef?.current?.length > 500 && 性能功能关闭数组?.length ? (\n              <p>「{心法名称}」玩家电脑性能不佳情况下请慎重使用</p>\n            ) : null}\n          </div>\n        ),\n        okText: '我要计算',\n        onOk: async () => {\n          开始计算()\n        },\n        cancelText: '重新选择',\n        onCancel: () => {\n          更新部位选择弹窗(true)\n        },\n        closable: true,\n      })\n    }\n  }\n\n  const 开始计算 = () => {\n    const 开始计算时间 = new Date().valueOf()\n    let 最大秒伤 = 0\n    let 最大组合: any = {}\n    if (dataRef?.current?.length) {\n      for (let i = 0; i < dataRef?.current?.length; i++) {\n        const 当前附魔数据 = dataRef?.current[i]\n        const 修改后装备属性 = 修改装备属性(无附魔装备属性 as 角色基础属性类型, 当前附魔数据)\n        const { 秒伤 } = dispatch(\n          秒伤计算({\n            更新装备信息: {\n              ...对比装备信息,\n              装备基础属性: 修改后装备属性,\n            } as any,\n          })\n        )\n        if (秒伤 > 最大秒伤) {\n          最大秒伤 = 秒伤\n          最大组合 = 当前附魔数据\n        }\n      }\n    }\n    更新最大组合(最大组合)\n    更新最大秒伤(最大秒伤)\n    const 结束计算时间 = new Date().valueOf()\n    const 计算用时 = 结束计算时间 - 开始计算时间\n    if (最大秒伤 > 对比秒伤) {\n      setOpen(true)\n      更新计算用时(计算用时)\n    } else {\n      message.success(`当前附魔已为最佳方案，无需替换。计算用时${计算用时}ms`)\n    }\n  }\n\n  const closeModal = () => {\n    setOpen(false)\n    更新最大组合({})\n    更新最大秒伤(0)\n  }\n\n  return (\n    <>\n      <Button type='primary' size='small' onClick={() => 更新部位选择弹窗(true)}>\n        一键设置附魔\n      </Button>\n      <Modal\n        title={'需计算的附魔部位'}\n        // centered\n        open={部位选择弹窗}\n        width={460}\n        okText={'计算选中部位'}\n        onOk={() => {\n          更新部位选择弹窗(false)\n          计算前提示()\n        }}\n        onCancel={() => 更新部位选择弹窗(false)}\n      >\n        <div className={'max-fumo-all-check'}>\n          <Checkbox\n            indeterminate={是否选择部分}\n            onChange={() => {\n              if (是否全选) {\n                更新当前选择计算部位([])\n              } else {\n                更新当前选择计算部位(全部部位)\n              }\n            }}\n            checked={是否全选}\n          >\n            全选\n          </Checkbox>\n        </div>\n        <Divider style={{ margin: '12px 0' }} />\n\n        <Checkbox.Group value={当前选择计算部位} onChange={(e) => 更新当前选择计算部位(e as any)}>\n          <Row>\n            {全部部位.map((key) => {\n              return (\n                <Col className={'max-fumo-check-col'} span={6} key={key}>\n                  <Checkbox value={key}>{装备位置部位枚举[key]}</Checkbox>\n                </Col>\n              )\n            })}\n          </Row>\n        </Checkbox.Group>\n      </Modal>\n      {/* 设置提醒和结果弹窗 */}\n      <Modal\n        title={\n          <div className={'max-fumo-modal-title'}>\n            <span>最佳附魔结果对比</span>\n            <span>计算用时：{计算用时}ms</span>\n          </div>\n        }\n        maskClosable={false}\n        centered\n        open={open}\n        width={500}\n        onCancel={() => setOpen(false)}\n        footer={\n          <Button\n            type='primary'\n            onClick={async () => {\n              await 一键替换附魔(最大组合)\n              closeModal()\n            }}\n          >\n            一键替换\n          </Button>\n        }\n      >\n        <div className={'max-fumo-wrap'}>\n          <div className='max-fumo-content'>\n            <h1 className={'max-fumo-title'}>替换前</h1>\n            <h1 className='max-fumo-dps'>{对比秒伤}</h1>\n            <div>\n              {(当前附魔信息?.当前附魔 || []).map((item, index) => {\n                return (\n                  <div className={`max-fumo-item`} key={`${item?.部位}_${index}`}>\n                    <span className='max-fumo-label'>{item?.部位}</span>\n                    <span className='max-fumo-value'>{item?.附魔}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          <div className='max-fumo-content'>\n            <h1 className={'max-fumo-title'}>替换后</h1>\n            <h1 className='max-fumo-dps max-fumo-dps-up'>\n              {最大Dps}\n              <RiseOutlined className='max-fumo-dps-icon' />\n            </h1>\n            <div>\n              {Object.keys(最大组合).map((key) => {\n                const 附魔属性 = Object.keys(最大组合[key])?.[0]\n                const 附魔值 = Object.values(最大组合[key])?.[0]\n                return (\n                  <div\n                    className={`max-fumo-item ${\n                      当前附魔信息?.不同部位?.includes(key) ? 'max-fumo-diff' : ''\n                    }`}\n                    key={key}\n                  >\n                    <span className='max-fumo-label'>{装备位置部位枚举[key]}</span>\n                    <span className='max-fumo-value'>{`${附魔属性}+${附魔值}`}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default 最佳附魔设置\n","import React, { useState } from 'react'\nimport { Button, Input, message } from 'antd'\nimport { 五彩石导入函数 } from './utils'\nimport './index.css'\n\nfunction WucaishiDaoru() {\n  const [inputValue, setInputValue] = useState<string>()\n  const [shuju, setShuju] = useState<any>()\n\n  const getDetail = () => {\n    if (inputValue) {\n      try {\n        const data = JSON.parse(inputValue)\n        const i = 五彩石导入函数(data?.list)\n        const strI = JSON.stringify(i)\n        setShuju(strI)\n      } catch (e) {\n        message.error(`转化失败e${e}`)\n      }\n    } else {\n      message.warning('请输入接口数据')\n    }\n  }\n\n  const copy = () => {\n    const res = document.getElementById('tools-daoru-wucaishi-result')\n    if (res) {\n      const text = res?.innerHTML\n      if (text) {\n        const input = document.createElement('input')\n        document.body.appendChild(input)\n        input.setAttribute('value', text)\n        input.select()\n        document.execCommand('copy') // 执行浏览器复制命令\n        if (document.execCommand('copy')) {\n          document.execCommand('copy')\n          message.success('复制成功')\n        }\n        if (text?.includes('未匹配')) {\n          message.warning('存在未匹配装备')\n        }\n        document.body.removeChild(input)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Input.TextArea\n        className={'tools-daoru-input'}\n        placeholder='输入接口数据'\n        value={inputValue}\n        onChange={(e) => setInputValue(e?.target?.value)}\n      />\n      <div className={'tools-daoru-btns'}>\n        <Button type='primary' disabled={!shuju} className='tools-daoru-btn' onClick={copy}>\n          复制\n        </Button>\n        <Button onClick={getDetail}>转换</Button>\n      </div>\n      {shuju && (\n        <div id='tools-daoru-wucaishi-result' className={'tools-daoru-result'}>\n          {shuju}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default WucaishiDaoru\n"],"names":["dispatch","useAppDispatch","当前方案名称","useAppSelector","state","data","全部方案数据","className","value","onChange","v","e","更新选中的方案数据","触发秒伤计算","是否更新显示计算结果","Object","keys","map","item","当前输出计算目标名称","更新当前输出计算目标名称","切换目标","目标集合","cls","classnames","目标类型","名称","label","网络延迟","useCycle","全部循环","some","循环详情","循环","循环延迟要求","更新网络延迟","切换延迟","延迟设定","当前职业的所有秘籍信息","获取当前职业的所有秘籍信息","useState","visible","setVisible","当前秘籍信息","size","onClick","title","width","open","mask","placement","onClose","技能","技能名称","新秘籍列表","技能信息","length","message","newData","更新当前秘籍信息","选择秘籍","技能秘籍列表","秘籍","span","style","height","配装器弹窗显示状态","切换配装器弹窗显示状态","onCancel","装备增益","filter","includes","主属性","获取当前数据","props","当前装备信息","装备信息","当前奇穴信息","增益数据","增益启用","显示增益后面板","切换显示增益后面板","获取计算后原始属性","计算装备信息","获取角色需要展示的面板数据","显示数据","useMemo","计算后的原始最终属性","计算后的当前显示属性","对比枚举","forEach","key","原始属性数值","数据","mapKeyList","index","对比枚举属性名","显示文案和实际属性枚举","对比枚举结果","有变化","id","getPopupContainer","document","getElementById","获取面板显示数据数值","获取面板显示数据","力道","身法","元气","根骨","攻击","会心","会效","破防","破招","无双","全能","加速","默认数据","性能功能关闭数组","心法名称","一键附魔默认部位","没有附魔的部位","全部部位","装备位置部位枚举","一键替换附魔","对比秒伤","对比装备信息","setOpen","部位选择弹窗","更新部位选择弹窗","最大组合","更新最大组合","最大Dps","更新最大秒伤","计算用时","更新计算用时","无附魔装备属性","设置无附魔装备属性","当前选择计算部位","更新当前选择计算部位","是否选择部分","是否全选","dataRef","useRef","useEffect","初始化","当前附魔信息","res","不同部位","列表","装备列表","装备位置","当前附魔","find","装备部位","附魔","push","部位","附魔属性","附魔值","values","计算部位","初始化所有组合","获取当前装备信息去除附魔加成的面板","current","装备基础属性","根据装备信息获取基础属性","过滤附魔部位","开始计算","开始计算时间","Date","valueOf","最大秒伤","i","当前附魔数据","修改后装备属性","修改装备属性","秒伤","秒伤计算","更新装备信息","type","okText","onOk","Modal","content","cancelText","closable","计算前提示","indeterminate","checked","margin","maskClosable","centered","footer","inputValue","setInputValue","shuju","setShuju","placeholder","target","disabled","text","innerHTML","input","createElement","body","appendChild","setAttribute","select","execCommand","removeChild","JSON","parse","五彩石导入函数","list","strI","stringify"],"sourceRoot":""}