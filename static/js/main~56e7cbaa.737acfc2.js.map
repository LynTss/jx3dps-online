{"version":3,"file":"static/js/main~56e7cbaa.737acfc2.js","mappings":"mHAAA,KAEEA,SAAU,CACR,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,GAAI,U,+LCPFC,EAAW,CAAC,qBAAO,sBAyFzB,MAvFA,WACE,OAAuBC,EAAAA,EAAAA,YAAvB,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACA,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAhD,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACJ,OAAJH,QAAI,IAAJA,GAAAA,EAAMI,eAAe,CACnBC,2BAAI,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAW,GACjBW,2BAAM,KAET,GAAE,CAACN,EAAML,IAEV,IAAMY,EAAM,yCAAG,mFACbP,EAAKQ,iBAAiBC,KAAtB,yCAA2B,WAAOC,GAAP,qFACzBR,GAAW,GADc,UAEPS,EAAAA,EAAAA,GAAK,CACrBC,eAAE,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAQL,yBACZQ,eAAE,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQG,aACZC,2BAAI,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAQJ,2BALS,OAOzB,QALMS,EAFmB,cAOzB,IAAIA,GAAJ,UAAIA,EAAKC,gCAAT,OAAI,EAAWC,OACbnB,EAAOiB,GAEPG,EAAAA,GAAAA,MAAc,4BAEhBhB,GAAW,GAZc,2CAA3B,uDADa,2CAAH,qDAuCZ,OACE,0BACE,UAAC,IAAD,CAAMiB,SAAUlB,EAAhB,WACE,UAAC,IAAD,CAAMD,KAAMA,EAAMoB,UAAW,mBAAoBC,OAAO,WAAxD,WACE,SAAC,SAAD,CAAWD,UAAW,sBAAuBE,KAAK,2BAAOC,MAAM,eAAKC,UAAQ,EAA5E,UACE,SAAC,IAAD,CACEJ,UAAW,0BACXK,QAAS9B,EAAS+B,KAAI,SAACC,GAAD,MAAW,CAAEC,MAAOD,EAAMJ,MAAOI,EAAjC,IACtBE,YAAa,kDAGjB,SAAC,SAAD,CAAWT,UAAW,wBAAyBE,KAAK,2BAAOC,MAAM,2BAAOC,UAAQ,EAAhF,UACE,SAAC,IAAD,CAAOM,MAAO,CAAEC,MAAO,aAEzB,SAAC,SAAD,CAAWT,KAAK,eAAKC,MAAM,eAAKC,UAAQ,EAAxC,UACE,SAAC,aAAD,CAAgBJ,UAAW,8BAG/B,iBAAKA,UAAW,iBAAhB,WACE,SAAC,IAAD,CAAQY,KAAK,UAAUZ,UAAU,gBAAgBa,QAAS1B,EAA1D,uCAGA,SAAC,IAAD,CAAQ2B,UAAWrC,EAAMuB,UAAU,gBAAgBa,QA5C9C,WACX,IAAMlB,EAAMoB,SAASC,eAAe,oBACpC,GAAIrB,EAAK,CACP,IAAMsB,EAAI,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAKuB,UAClB,GAAID,EAAM,CACR,IAAME,EAAQJ,SAASK,cAAc,SACrCL,SAASM,KAAKC,YAAYH,GAC1BA,EAAMI,aAAa,QAASN,GAC5BE,EAAMK,SACNT,SAASU,YAAY,QACjBV,SAASU,YAAY,UACvBV,SAASU,YAAY,QACrB3B,EAAAA,GAAAA,QAAgB,6BAKlBiB,SAASM,KAAKK,YAAYP,EAC3B,CACF,CACF,EAwBO,6BAID1C,IACC,gBAAKkD,GAAG,mBAAmB3B,UAAW,mBAAtC,SACG4B,KAAKC,UAAUpD,SAM3B,C","sources":["功能模块/系统工具/页面隐藏工具/开发者工具/JCL战斗记录解析/common.ts","功能模块/系统工具/页面隐藏工具/开发者工具/JCL战斗记录解析/index.tsx"],"sourcesContent":["export default {\n  // JCL中stack（层数）的枚举，常用语多层dot的使用。这里直接用\n  StackMap: {\n    1: '一',\n    2: '二',\n    3: '三',\n    4: '四',\n    5: '五',\n    6: '六',\n    7: '七',\n    8: '八',\n    9: '九',\n    10: '十',\n  },\n}\n","import React, { useEffect, useState } from 'react'\nimport { Button, Form, Input, Select, Spin, message } from 'antd'\nimport { 获取数据 } from './tool'\nimport './index.css'\n\nconst 支持导入心法列表 = ['凌海诀', '太玄经']\n\nfunction JCL战斗记录解析() {\n  const [结果数据, 更新结果数据] = useState<any>()\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    form?.setFieldsValue({\n      目标心法: 支持导入心法列表?.[0],\n      战斗时间: 301,\n    })\n  }, [form, 支持导入心法列表])\n\n  const 获取远程数据 = async () => {\n    form.validateFields().then(async (values) => {\n      setLoading(true)\n      const res = await 获取数据({\n        心法: values?.目标心法,\n        数据: values?.数据,\n        最大时间: values?.战斗时间,\n      })\n      if (res?.技能详情?.length) {\n        更新结果数据(res)\n      } else {\n        message.error('解析出错')\n      }\n      setLoading(false)\n    })\n  }\n\n  const copy = () => {\n    const res = document.getElementById('tools-jcl-result')\n    if (res) {\n      const text = res?.innerHTML\n      if (text) {\n        const input = document.createElement('input')\n        document.body.appendChild(input)\n        input.setAttribute('value', text)\n        input.select()\n        document.execCommand('copy') // 执行浏览器复制命令\n        if (document.execCommand('copy')) {\n          document.execCommand('copy')\n          message.success('复制成功')\n        }\n        // if (text?.includes('未匹配')) {\n        //   message.warning('存在未匹配装备')\n        // }\n        document.body.removeChild(input)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading}>\n        <Form form={form} className={'tools-jcl-params'} layout='vertical'>\n          <Form.Item className={'tools-jcl-form-item'} name='目标心法' label='心法' required>\n            <Select\n              className={'tools-jcl-params-select'}\n              options={支持导入心法列表.map((item) => ({ value: item, label: item }))}\n              placeholder={'请选择解析心法'}\n            />\n          </Form.Item>\n          <Form.Item className={'tools-jcl-form-item-2'} name='战斗时间' label='战斗时间' required>\n            <Input style={{ width: '100%' }} />\n          </Form.Item>\n          <Form.Item name='数据' label='数据' required>\n            <Input.TextArea className={'tool-jcl-input-area'} />\n          </Form.Item>\n        </Form>\n        <div className={'tools-jcl-btns'}>\n          <Button type='primary' className='tools-jcl-btn' onClick={获取远程数据}>\n            获取数据\n          </Button>\n          <Button disabled={!结果数据} className='tools-jcl-btn' onClick={copy}>\n            复制\n          </Button>\n        </div>\n        {结果数据 && (\n          <div id='tools-jcl-result' className={'tools-jcl-result'}>\n            {JSON.stringify(结果数据)}\n          </div>\n        )}\n      </Spin>\n    </div>\n  )\n}\n\nexport default JCL战斗记录解析\n"],"names":["StackMap","支持导入心法列表","useState","结果数据","更新结果数据","Form","form","loading","setLoading","useEffect","setFieldsValue","目标心法","战斗时间","获取远程数据","validateFields","then","values","获取数据","心法","数据","最大时间","res","技能详情","length","message","spinning","className","layout","name","label","required","options","map","item","value","placeholder","style","width","type","onClick","disabled","document","getElementById","text","innerHTML","input","createElement","body","appendChild","setAttribute","select","execCommand","removeChild","id","JSON","stringify"],"sourceRoot":""}