{"version":3,"file":"static/js/main~422f30dd.f2adf86f.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/AddCycleSkillBtn.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/快捷添加.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/AddPetBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/AddCycleSkillBtns/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/chongwu/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (技能?.技能类型 !== '其他' && 模拟信息?.角色状态信息?.体态 !== 技能?.技能类型) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.体态错误?.信息,\n      }\n    } else if (技能?.技能名称 === '断' && (模拟信息?.角色状态信息?.锐意 || 0) < 100) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.锐意不足?.信息,\n      }\n    } else if (技能?.技能名称 === '吃影子' && !模拟信息?.当前自身buff列表?.['身形']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.身形不足?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能?.图标} />\n          {技能运行状态?.当前层数 !== undefined ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能?.技能原始名称 || 技能?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: '三沧孤',\n    技能序列: ['沧', '沧', '沧', '孤'],\n    color: 'blue',\n  },\n  {\n    名称: '决留行',\n    技能序列: ['决', '留', '行'],\n    color: 'magenta',\n  },\n  {\n    名称: '行留断',\n    技能序列: ['行', '留', '断'],\n    color: 'green',\n  },\n  {\n    名称: '横三沧孤',\n    技能序列: ['横', '沧', '沧', '沧', '孤'],\n    color: 'purple',\n  },\n  {\n    名称: '行留行',\n    技能序列: ['行', '留', '行'],\n    color: 'volcano',\n  },\n  {\n    名称: '停留断',\n    技能序列: ['停', '留', '断'],\n    color: 'red',\n  },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const { 新增循环技能, 批量新增循环, 处理循环结果对象, 模拟信息, 大橙武模拟 } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>流云势法</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '单刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>破浪三式</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '双刀')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  style={大橙武模拟 ? { padding: '0 6px' } : { padding: '0 8px' }}\n                  className={'daozong-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'daozong-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={8} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length ? (\n          当前buff列表.map((item) => {\n            const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n            const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n            const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n            const 层数 = item.当前层数 || 0\n            return (\n              <div className={'cycle-status-bar-buff'} key={item.名称}>\n                <div className={'cycle-status-bar-buff-item'}>\n                  <Tooltip\n                    title={\n                      item.名称 === '流岚' ? (\n                        <>\n                          {item.名称}\n                          {((层数 - 1) * 20 + 剩余时间 / 每秒郭氏帧).toFixed(1)}秒\n                        </>\n                      ) : (\n                        <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                      )\n                    }\n                  >\n                    <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                  </Tooltip>\n                  {层数 > 1 ? (\n                    <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                  ) : null}\n                </div>\n                <p\n                  className={`cycle-status-bar-buff-second ${\n                    剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                  }`}\n                >\n                  {剩余时间秒}\n                </p>\n              </div>\n            )\n          })\n        ) : (\n          <p className={'cycle-buff-empty'}>无</p>\n        )}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '../../../../constant'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }, { 技能名称: '斩浪破锋' }]?.map(\n        (item) => {\n          return {\n            text: item?.技能名称,\n            value: item?.技能名称,\n          }\n        }\n      ),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useMemo } from 'react'\nimport { 循环基础技能数据类型, 技能GCD组, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport classNames from 'classnames'\nimport { Badge, Tooltip } from 'antd'\nimport { ERROR_ACTION } from '../../simulator/utils'\nimport moshiyinyu from '../../assets/Skill/moshiyinyu.png'\nimport chifengmingjiao from '../../assets/Skill/chifengmingjiao.png'\n\ninterface AddCycleSkillBtnProps {\n  技能: 循环基础技能数据类型\n  完整循环: 循环基础技能数据类型[]\n  onClick?: any\n  className?: string\n  模拟信息: 模拟信息类型\n  style?: any\n}\n\ninterface 异常信息数据 {\n  是否禁用?: boolean\n  角标数字?: number\n  异常描述?: string\n}\n\n// 添加循环技能按钮组件\nconst AddCycleSkillBtn: React.FC<AddCycleSkillBtnProps> = (props) => {\n  const { 技能, 模拟信息, onClick, className, ...rest } = props\n\n  const 释放等待CD = 计算可以释放时技能CD(模拟信息, 技能)\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const 异常信息: 异常信息数据 = useMemo(() => {\n    let 禁用信息 = {}\n    if (\n      技能?.技能名称 === '白羽流星' &&\n      !模拟信息?.当前自身buff列表?.['劲风簇追']?.当前层数 &&\n      !模拟信息?.当前自身buff列表?.['饮羽簇追']?.当前层数\n    ) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    } else if (技能?.技能名称 === '点掉橙武' && !模拟信息?.当前自身buff列表?.['橙武']?.当前层数) {\n      禁用信息 = {\n        是否禁用: true,\n        异常描述: ERROR_ACTION?.BUFF错误?.信息,\n      }\n    }\n    //  else if (技能?.消耗箭数 && 模拟信息?.角色状态信息?.箭数 < 技能?.消耗箭数) {\n    //   return {\n    //     是否禁用: true,\n    //     异常描述: ERROR_ACTION?.箭数不足?.信息,\n    //   }\n    // }\n    if (释放等待CD > 0 && 技能运行状态?.当前层数 >= 1) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于充能中，剩余${释放等待CD}秒`,\n      }\n    } else if (释放等待CD > 0) {\n      return {\n        ...禁用信息,\n        角标数字: 释放等待CD,\n        异常描述: `当前技能处于冷却中，剩余${释放等待CD}秒`,\n      }\n    } else {\n      return { ...禁用信息 }\n    }\n  }, [释放等待CD, 技能, 模拟信息])\n\n  // 点击前判断是否可以释放\n  const beforeOnClick = () => {\n    if (异常信息?.是否禁用) {\n      return\n    }\n    onClick()\n  }\n\n  const cls = classNames(className, 异常信息?.是否禁用 ? 'cycle-simulator-setting-btn-error' : '')\n\n  const 技能显示信息 = useMemo(() => {\n    if (技能?.技能名称 === '白羽流星') {\n      if (模拟信息?.当前自身buff列表?.['劲风簇追']?.当前层数) {\n        return {\n          ...技能,\n          技能原始名称: '弛风鸣角',\n          图标: chifengmingjiao,\n        }\n      } else if (模拟信息?.当前自身buff列表?.['饮羽簇追']?.当前层数) {\n        return {\n          ...技能,\n          技能原始名称: '没石饮羽',\n          图标: moshiyinyu,\n        }\n      } else {\n        return 技能\n      }\n    } else {\n      return 技能\n    }\n  }, [技能, 模拟信息])\n\n  return (\n    <div onClick={beforeOnClick} className={cls} {...rest}>\n      <Tooltip title={异常信息?.异常描述}>\n        <Badge count={异常信息?.角标数字} className={'cycle-add-btn-wrap'} offset={[0, 0]}>\n          <img className={`cycle-add-btn`} src={技能显示信息?.图标} />\n          {技能运行状态?.当前层数 !== undefined &&\n          技能?.最大充能层数 &&\n          技能?.最大充能层数 !== 1 ? (\n            <span className={'cycle-add-btn-count'}>{技能运行状态?.当前层数}</span>\n          ) : null}\n        </Badge>\n      </Tooltip>\n      <p className={'cycle-add-btn-text'}>{技能显示信息?.技能原始名称 || 技能显示信息?.技能名称}</p>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtn\n\nconst 计算可以释放时技能CD = (模拟信息: 模拟信息类型, 技能: 循环基础技能数据类型) => {\n  const 技能运行状态 = 模拟信息?.当前各技能运行状态?.[技能?.技能名称]\n\n  const GCD = 检查GCD(技能, 模拟信息.当前GCD组)\n\n  // 当前技能可以释放时间当前时间（为上一个技能释放结束时间）加上本技能释放前结算GCD\n  const 可以释放时间 = (模拟信息?.当前时间 || 0) + (GCD || 0)\n\n  const 技能CD = (技能运行状态?.计划下次充能时间点 || 0) - 可以释放时间\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((技能CD / 每秒郭氏帧) * 100) / 100\n  return 剩余秒\n}\n\nconst 检查GCD = (技能: 循环基础技能数据类型, GCD组: 技能GCD组) => {\n  let 校验GCD组: string = 技能.技能GCD组 as string\n  if (技能.技能GCD组 === '自身') {\n    校验GCD组 = 技能?.技能名称\n  }\n  if (校验GCD组) {\n    // 大部分技能只检查自己的GCD\n    const GCD = GCD组[校验GCD组]\n    return GCD\n  } else {\n    return 0\n  }\n}\n","export const 快捷添加数据: 快捷添加数据类型[] = [\n  {\n    名称: 'CBCA',\n    技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '劲风簇'],\n    color: 'blue',\n  },\n  // {\n  //   名称: 'AAABCA',\n  //   技能序列: [\n  //     '寒更晓箭',\n  //     '金乌见坠',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '饮羽簇',\n  //     '白羽流星',\n  //     '劲风簇',\n  //   ],\n  //   color: 'magenta',\n  // },\n  {\n    名称: 'CBC引A',\n    技能序列: ['寒更晓箭', '金乌见坠', '白羽流星', '饮羽簇', '白羽流星', '引风唤灵', '劲风簇'],\n    color: 'green',\n  },\n  // {\n  //   名称: 'AAABC引A',\n  //   技能序列: [\n  //     '寒更晓箭',\n  //     '金乌见坠',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '劲风簇',\n  //     '饮羽簇',\n  //     '白羽流星',\n  //     '引风唤灵',\n  //     '劲风簇',\n  //   ],\n  //   color: 'purple',\n  // },\n  // {\n  //   名称: '行留断',\n  //   技能序列: ['行', '留', '断'],\n  //   color: 'green',\n  // },\n  // {\n  //   名称: '横三沧孤',\n  //   技能序列: ['横', '沧', '沧', '沧', '孤'],\n  //   color: 'purple',\n  // },\n  // {\n  //   名称: '行留行',\n  //   技能序列: ['行', '留', '行'],\n  //   color: 'volcano',\n  // },\n  // {\n  //   名称: '停留断',\n  //   技能序列: ['停', '留', '断'],\n  //   color: 'red',\n  // },\n]\n\nexport interface 快捷添加数据类型 {\n  名称: string\n  技能序列: string[]\n  color?: string\n}\n","import React from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { 宠物基础数据 } from '../../../constant/skill'\nimport './index.css'\n\nfunction AddPetBtns(props) {\n  const { 宠物顺序, 更新宠物顺序 } = props\n  return (\n    <div className={'cycle-simulator-pet-btns'}>\n      <ReactSortable\n        list={宠物顺序.map((i) => Object.assign(i, { id: i }))}\n        setList={(e) => {\n          更新宠物顺序(e.map((item) => item.id))\n        }}\n        animation={150}\n      >\n        {(宠物顺序 || [])\n          .map((item) => {\n            const 宠物数据 = 宠物基础数据?.[item]\n            if (宠物数据) {\n              return <img className={'cycle-simulator-pets-btn'} src={宠物数据?.图标} key={item} />\n            } else {\n              return null\n            }\n          })\n          .filter((item) => item)}\n      </ReactSortable>\n    </div>\n  )\n}\n\nexport default AddPetBtns\n","import { Col, Row, Space, Tag } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport AddCycleSkillBtn from './AddCycleSkillBtn'\nimport { 快捷添加数据, 快捷添加数据类型 } from './快捷添加'\nimport './index.css'\nimport AddPetBtns from './AddPetBtns'\n\ninterface AddCycleSkillBtnsProps {\n  新增循环技能: (data: 循环基础技能数据类型) => void\n  批量新增循环: (data: 循环基础技能数据类型[]) => void\n  处理循环结果对象: { 完整循环: 循环基础技能数据类型[] }\n  模拟信息: 模拟信息类型\n  大橙武模拟: boolean\n  奇穴信息: string[]\n  宠物顺序: string[]\n  更新宠物顺序: (e: string[]) => void\n}\n\nfunction AddCycleSkillBtns(props: AddCycleSkillBtnsProps) {\n  const {\n    新增循环技能,\n    批量新增循环,\n    处理循环结果对象,\n    模拟信息,\n    大橙武模拟,\n    奇穴信息,\n    宠物顺序,\n    更新宠物顺序,\n  } = props\n\n  const 批量新增循环技能 = (数据: 快捷添加数据类型) => {\n    const 技能原始数据: 循环基础技能数据类型[] = 数据?.技能序列\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a.技能名称 === item) || ({} as any)\n      })\n      .filter((item) => item)\n    if (技能原始数据?.length) {\n      批量新增循环(技能原始数据)\n    }\n  }\n\n  const hrefDev = location.href?.includes('dev=1')\n  const DEV = hrefDev\n\n  return (\n    <div className={'cycle-simulator-setting-btns'}>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>箭系</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!奇穴信息?.includes('朝仪万汇') && item?.技能名称 === '朝仪万汇') {\n                return false\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '箭系'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>万方携游</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => !item?.创建循环不可选 && item?.技能类型 === '宠物')\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>其他</span>\n        <Space className={'cycle-simulator-setting-skills'} size={[8, 16]} wrap>\n          {模拟信息?.技能基础数据\n            ?.filter((item) => {\n              if (!大橙武模拟 && item?.显示类型 === '大橙武模拟') {\n                return false\n              }\n              if (!DEV && item?.技能名称 === '空弦惊雁') {\n                return false\n              }\n              if (item?.显示类型 === '奇穴技能') {\n                const 依赖名称 = item?.依赖奇穴名 || item?.技能名称\n                return 奇穴信息?.includes(依赖名称)\n              }\n              return !item?.创建循环不可选 && item?.技能类型 === '其他'\n            })\n            .map((item) => {\n              return (\n                <AddCycleSkillBtn\n                  onClick={() => 新增循环技能(item)}\n                  key={item?.技能名称}\n                  className={'wanling-cycle-simulator-setting-btn'}\n                  完整循环={处理循环结果对象?.完整循环 || []}\n                  技能={item}\n                  模拟信息={模拟信息}\n                />\n              )\n            })}\n        </Space>\n      </div>\n      {/* 添加宠物 */}\n      <div className={'cycle-simulator-setting-item'}>\n        <span className={'wanling-cycle-btn-type'}>宠物</span>\n        <AddPetBtns 宠物顺序={宠物顺序} 更新宠物顺序={更新宠物顺序} />\n      </div>\n      <div className={`cycle-simulator-setting-item cycle-simulator-setting-fast-item`}>\n        <span className={'wanling-cycle-btn-type'}>快捷添加</span>\n        <Row className={'cycle-simulator-setting-quick'} gutter={[16, 8]}>\n          {快捷添加数据.map((item) => {\n            return (\n              <Col span={24} key={item?.名称}>\n                <Tag\n                  color={item?.color || 'blue'}\n                  onClick={() => 批量新增循环技能(item)}\n                  className={'cycle-simulator-setting-quick-item'}\n                >\n                  {item?.名称}\n                </Tag>\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default AddCycleSkillBtns\n","import { Alert, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled:\n          !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入) ||\n          !延迟选项?.length ||\n          !加速选项?.length,\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","import React, { useMemo } from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n  奇穴信息?: string[]\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 奇穴信息, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 最终显示buff列表 = useMemo(() => {\n    const res = [...(当前buff列表 || [])]\n    // 判断诸怀\n    if (奇穴信息?.includes('诸怀') && buff列表?.['承契']?.当前层数) {\n      res.push(原始Buff数据?.['诸怀'])\n    }\n    return res\n  }, [当前buff列表, buff列表, 奇穴信息])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {最终显示buff列表?.length\n          ? 最终显示buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {+剩余时间秒 >= 0 ? 剩余时间秒 : null}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React, { useMemo } from 'react'\nimport { 宠物数据, 当前宠物数据 } from '../../../simulator/type'\n\nimport { Space, Tooltip } from 'antd'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport { 宠物基础数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface TitaiProps {\n  当前宠物数据: 当前宠物数据\n  当前时间点: number\n}\n\nfunction Chongwu(props: TitaiProps) {\n  const { 当前宠物数据, 当前时间点 } = props\n\n  const 当前宠物列表: 宠物数据[] = useMemo(() => {\n    return Object.keys(当前宠物数据)\n      .map((key) => {\n        const 数据 = 当前宠物数据[key]\n        if (数据) {\n          return 数据?.入场时间 <= 当前时间点 && 数据?.离场时间 > 当前时间点 ? 数据 : false\n        } else {\n          return false as any\n        }\n      })\n      .filter((item) => item)\n  }, [当前宠物数据, 当前时间点])\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>宠物</div>\n      <Space className={'cycle-status-bar-buff-list-chongwu'} size={[8, 8]} wrap>\n        {当前宠物列表?.length ? (\n          当前宠物列表.map((item) => {\n            const 剩余时间 = item.离场时间 - 当前时间点 || 0\n            const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n            const 宠物原始数据 = 宠物基础数据?.[item.宠物]\n            return (\n              <div className={'cycle-status-bar-buff'} key={item.宠物}>\n                <div className={'cycle-status-bar-buff-item'}>\n                  <Tooltip title={item.宠物}>\n                    <img className={'cycle-status-bar-buff-img'} src={宠物原始数据.图标} />\n                  </Tooltip>\n                </div>\n                <p\n                  className={`cycle-status-bar-buff-second ${\n                    剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                  }`}\n                >\n                  {剩余时间秒}\n                </p>\n              </div>\n            )\n          })\n        ) : (\n          <p className={'cycle-buff-empty'}>无</p>\n        )}\n      </Space>\n    </div>\n  )\n}\n\nexport default Chongwu\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '../../../../constant'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [\n        ...循环模拟技能基础数据,\n        { 技能名称: '贯穿' },\n        { 技能名称: '标鹄' },\n        { 技能名称: '引爆' },\n        { 技能名称: '没石饮羽' },\n      ]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n"],"names":["props","技能","模拟信息","onClick","className","rest","释放等待CD","计算可以释放时技能CD","技能运行状态","当前各技能运行状态","技能名称","异常信息","useMemo","禁用信息","技能类型","角色状态信息","体态","是否禁用","异常描述","ERROR_ACTION","信息","锐意","当前自身buff列表","当前层数","角标数字","cls","classNames","title","count","offset","src","图标","undefined","技能原始名称","GCD","检查GCD","当前GCD组","可以释放时间","当前时间","技能CD","计划下次充能时间点","Math","round","每秒郭氏帧","GCD组","校验GCD组","技能GCD组","快捷添加数据","名称","技能序列","color","新增循环技能","批量新增循环","处理循环结果对象","大橙武模拟","size","wrap","技能基础数据","filter","item","创建循环不可选","map","完整循环","显示类型","style","padding","gutter","span","数据","技能原始数据","find","a","length","批量新增循环技能","计算循环","获取当前数据","自定义循环保存弹窗","设置自定义循环保存弹窗","保存自定义循环","useState","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","自定义循环","useAppSelector","state","data","自定义循环列表","dispatch","useAppDispatch","全部循环","concat","useEffect","删除循环","更新当前自定义循环列表","centered","okButtonProps","disabled","open","onCancel","onOk","width","destroyOnClose","type","activeKey","onChange","tab","value","optionLabelProp","placeholder","label","e","stopPropagation","preventDefault","Modal","content","okText","删除循环前提示","rules","validator","_","callback","some","target","Array","from","v","i","延迟设定","message","buff列表","当前时间点","当前buff列表","Object","keys","剩余时间","刷新时间","最大持续时间","剩余时间秒","toFixed","层数","logData","columns","dataIndex","filters","循环模拟技能基础数据","text","onFilter","record","日志","includes","日志类型","日志类型数组","indexOf","render","row","其他数据","伤害次数","join","日志时间","footer","dataSource","pagination","pageSize","showTotal","total","总战斗用时","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","tooltip","crosshairs","getDataSource","source","time","tickCount","axis","textAlign","fontSize","coordinate","transpose","interval","position","获取Buff覆盖率","Buff枚举","格式化buff覆盖数组","id","技能显示信息","chifengmingjiao","moshiyinyu","最大充能层数","宠物顺序","更新宠物顺序","ReactSortable","list","assign","setList","animation","宠物数据","宠物基础数据","奇穴信息","DEV","location","href","依赖名称","依赖奇穴名","DOT列表","最终显示buff列表","res","push","原始Buff数据","当前Dot列表","原始数据","待生效数据","备注","最后一跳","生效时间","当前宠物数据","当前宠物列表","key","入场时间","离场时间","宠物原始数据","宠物"],"sourceRoot":""}