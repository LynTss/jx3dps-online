{"version":3,"file":"static/js/main~dbe4503b.c6371ab0.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleModalHeader/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/BuffItem.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/CycleSkillItem/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/ruiyi/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/components/StatusBar/index.tsx"],"sourcesContent":["import { Button, Dropdown, Menu, Popover, Select, Tooltip } from 'antd'\nimport React from 'react'\nimport { 循环基础技能数据类型, 模拟信息类型 } from '../../simulator/type'\nimport 快速导入默认循环 from '../../constant/快速导入默认循环'\nimport { useAppSelector } from '@/hooks'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\ninterface CycleModalHeaderProps {\n  cycle: 循环基础技能数据类型[]\n  设置自定义循环保存弹窗: (e: boolean) => void\n  清空循环: () => void\n  起手留层数: number\n  设置起手留层数: (e: number) => void\n  快速导入循环: (e: 循环基础技能数据类型[], 循环标记: string) => void\n  网络延迟: number\n  更新网络延迟: (e: number) => void\n  加速等级: number\n  更新加速等级: (e: number) => void\n  模拟信息: 模拟信息类型\n}\n\nfunction CycleModalHeader(props: CycleModalHeaderProps) {\n  const {\n    cycle,\n    设置自定义循环保存弹窗,\n    清空循环,\n    起手留层数,\n    设置起手留层数,\n    快速导入循环,\n    // 更新奇穴弹窗展示,\n    // 更新奇穴信息,\n    加速等级,\n    更新加速等级,\n    模拟信息,\n    网络延迟,\n    更新网络延迟,\n  } = props\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const 快捷添加循环 = (名称, 类型 = '默认') => {\n    const 数据源 = 类型 === '默认' ? 快速导入默认循环 : 自定义循环\n\n    const 当前循环数据 = 数据源?.find((item) => item.名称 === 名称)\n\n    const 技能序列信息 = (当前循环数据?.技能序列 || [])\n      .map((item) => {\n        return 模拟信息?.技能基础数据?.find((a) => a?.技能名称 === item) as 循环基础技能数据类型\n      })\n      .filter((item) => item)\n\n    快速导入循环(技能序列信息, 当前循环数据?.标记 || '')\n    // if (当前循环数据?.奇穴) {\n    //   更新奇穴信息(当前循环数据?.奇穴)\n    // }\n  }\n\n  return (\n    <div className={'cycle-simulator-modal-header space-between'}>\n      <div className={'cycle-simulator-modal-title-wrapper'}>\n        <h1 className={'cycle-simulator-modal-title'}>循环模拟</h1>\n        <Popover\n          content={\n            <div>\n              <p>1、点击下方技能按钮添加至循环内</p>\n              <p>2、可以整行删除、复制本行到最后一行</p>\n              <p>3、可以在单行内拖动改变技能顺序</p>\n              <p>\n                更多使用说明详见：\n                <a href='https://www.jx3box.com/tool/75292' target='_blank' rel='noreferrer'>\n                  使用手册及FAQ\n                </a>\n              </p>\n            </div>\n          }\n        >\n          <span className={'cycle-simulator-help'}>如何使用</span>\n        </Popover>\n        {/* <Popover\n          content={\n            <div>\n              目前未支持的功能\n            </div>\n          }\n        >\n          <span className={'cycle-not-support'}>未支持功能</span>\n        </Popover> */}\n      </div>\n      <div className={'cycle-simulator-header-btns'}>\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={起手留层数}\n          onChange={设置起手留层数}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}层披靡`,\n            }\n          })}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={网络延迟}\n          onChange={更新网络延迟}\n          options={延迟设定}\n        />\n        <Select\n          size='small'\n          className={'cycle-simulator-header-select'}\n          value={加速等级}\n          onChange={更新加速等级}\n          options={Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return {\n              value: a,\n              label: `${a}段加速`,\n            }\n          })}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              {快速导入默认循环?.map((item) => {\n                return (\n                  <Menu.Item key={item?.名称} onClick={() => 快捷添加循环(item?.名称)}>\n                    {item?.名称}\n                  </Menu.Item>\n                )\n              })}\n              {自定义循环?.length\n                ? 自定义循环.map((item, index) => {\n                    return (\n                      <Menu.Item key={index} onClick={() => 快捷添加循环(item?.名称, '自定义')}>\n                        {item?.名称}\n                      </Menu.Item>\n                    )\n                  })\n                : null}\n            </Menu>\n          }\n        >\n          <Button size='small'>导入循环</Button>\n        </Dropdown>\n        {/* <Tooltip title={'本奇穴设置只会在循环模拟器内生效，不影响外部'}>\n          <Button size='small' onClick={() => 更新奇穴弹窗展示(true)}>\n            奇穴设置\n          </Button>\n        </Tooltip> */}\n        <Button size='small' onClick={() => 清空循环()} danger>\n          清空循环\n        </Button>\n        <Tooltip title='自定义循环和原计算器其他循环的dps会心期望计算方式不同。会导致最终数值偏差。请勿进行跨循环比较。'>\n          <Button\n            size='small'\n            type='primary'\n            onClick={() => 设置自定义循环保存弹窗(true)}\n            disabled={cycle?.length < 1 || 模拟信息?.循环执行结果 === '异常'}\n          >\n            保存为自定义循环\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default CycleModalHeader\n","import React from 'react'\nimport { 原始Buff数据 } from '../../constant/skill'\n\nfunction BuffItem({ data, ...rest }) {\n  const buff = 原始Buff数据?.[data]\n  return buff ? <img src={buff.图标} {...rest} /> : null\n}\n\nexport default BuffItem\n","// 技能循环显示技能单元\nimport React, { useMemo } from 'react'\nimport { Badge, Space, Tooltip } from 'antd'\nimport { CloseCircleFilled } from '@ant-design/icons'\nimport classNames from 'classnames'\nimport { ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\nimport { 每秒郭氏帧 } from '../../constant'\nimport BuffItem from './BuffItem'\nimport './index.css'\ninterface CycleSkillItemProps {\n  技能: ShowCycleSingleSkill\n  删除循环技能: (e: number) => void\n  模拟信息: 模拟信息类型\n  buff覆盖数据: number[]\n  更新buff覆盖数据: (e: number[]) => void\n}\n\nfunction CycleSkillItem(props: CycleSkillItemProps) {\n  const { 技能, 删除循环技能, 模拟信息, buff覆盖数据, 更新buff覆盖数据 } = props\n\n  const 技能释放时间 = Math.round(((技能.实际释放时间 || 0) / 每秒郭氏帧) * 100) / 100\n  const 间隔CD = (技能.实际释放时间 || 0) - (技能.计划释放时间 || 0)\n  // 把帧转成秒，保留两位小数\n  const 剩余秒 = Math.round((间隔CD / 每秒郭氏帧) * 100) / 100\n  // 是否异常\n  // 存在异常索引\n  const 索引 = (模拟信息?.循环异常信息?.异常索引 || 0) + -1\n  const 是否异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) >= 索引 : false\n  const 当前异常 = 模拟信息?.循环执行结果 === '异常' ? (技能?.index || 0) === 索引 : false\n\n  const 技能释放结果 = 技能?.技能释放记录结果 || {}\n\n  const 判断有无重要buff标记 = () => {\n    if (技能释放结果?.造成buff数据?.buff名称) {\n      更新buff覆盖数据([\n        技能释放结果?.造成buff数据?.buff开始时间,\n        技能释放结果?.造成buff数据?.buff结束时间,\n      ])\n    }\n  }\n\n  const 卸除重要buff标记 = () => {\n    更新buff覆盖数据([])\n  }\n\n  const 当前是否需要高亮展示在buff覆盖中 = useMemo(() => {\n    if (\n      (技能?.实际释放时间 || 0) <= buff覆盖数据?.[1] &&\n      (技能?.实际释放时间 || 0) >= buff覆盖数据?.[0]\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }, [buff覆盖数据, 技能])\n\n  const cls = classNames(\n    'cycle-simulator-setting-skill',\n    是否异常 ? 'cycle-simulator-setting-skill-error' : '',\n    当前是否需要高亮展示在buff覆盖中 ? 'cycle-simulator-setting-skill-highlight' : ''\n  )\n\n  return (\n    <Badge count={剩余秒} offset={[-52, 8]} className={'cycle-simulator-setting-skill-drag'}>\n      <div className={cls} onMouseEnter={判断有无重要buff标记} onMouseLeave={卸除重要buff标记}>\n        <Tooltip\n          title={\n            <div>\n              <p>{技能?.技能名称}</p>\n              {技能释放结果.实际伤害技能 ? <p>伤害名称：{技能释放结果.实际伤害技能}</p> : null}\n              {技能释放时间 ? <p>释放时间：{技能释放时间}秒</p> : null}\n              {剩余秒 ? <p>释放等待CD：{剩余秒}秒</p> : null}\n              {技能释放结果?.重要buff列表?.length ? (\n                <Space className={'cycle-simulator-setting-buff'} size={[8, 8]} wrap>\n                  {技能释放结果?.重要buff列表.map((item) => {\n                    return (\n                      <BuffItem\n                        data={item}\n                        key={item}\n                        className={'cycle-simulator-setting-buff-item'}\n                      />\n                    )\n                  })}\n                </Space>\n              ) : null}\n              {是否异常 ? (\n                当前异常 ? (\n                  <p>异常：{模拟信息?.循环异常信息?.异常信息?.信息}</p>\n                ) : (\n                  <p>前置技能异常</p>\n                )\n              ) : null}\n            </div>\n          }\n        >\n          <img className={'daozong-cycle-simulator-setting-skill-img'} src={技能?.图标} />\n        </Tooltip>\n        <CloseCircleFilled\n          className={'cycle-simulator-setting-skill-close'}\n          onClick={() => 删除循环技能(技能?.index || 0)}\n        />\n        {技能释放结果?.伤害段数 ? (\n          <span className={`cycle-simulator-setting-skill-count count${技能释放结果?.伤害段数}`}>\n            {技能释放结果?.伤害段数}\n          </span>\n        ) : null}\n      </div>\n    </Badge>\n  )\n}\n\nexport default CycleSkillItem\n","import { Alert, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport './index.css'\nimport { 延迟设定 } from '@/数据/常量'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface RuiyiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Ruiyi(props: RuiyiProps) {\n  const { 角色状态信息 } = props\n  // console.log('角色状态信息', 角色状态信息)\n\n  const 当前锐意 = 角色状态信息?.锐意 || 0\n  // const 当前锐意 = 60\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>锐意</div>\n      <div className={'cycle-status-bar-body'}>\n        <Progress\n          className={'cycle-status-bar-ruiyi'}\n          percent={(当前锐意 / 60) * 100}\n          format={(percent) => `${Math.round((+(percent || 0) / 100) * 60)}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Ruiyi\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length\n          ? 当前buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '../../../../constant'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }, { 技能名称: '斩浪破锋' }]?.map(\n        (item) => {\n          return {\n            text: item?.技能名称,\n            value: item?.技能名称,\n          }\n        }\n      ),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import React from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\nimport '../../../../index.css'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList } = props\n\n  return (\n    <结果统计\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['长溯']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  // dps曲线\n  // const [dpsModal, setDpsModal] = useState<boolean>(false)\n\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Ruiyi from './ruiyi'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Ruiyi 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n"],"names":["props","cycle","设置自定义循环保存弹窗","清空循环","起手留层数","设置起手留层数","快速导入循环","加速等级","更新加速等级","模拟信息","网络延迟","更新网络延迟","自定义循环","useAppSelector","state","data","自定义循环列表","快捷添加循环","名称","类型","数据源","快速导入默认循环","当前循环数据","find","item","技能序列信息","技能序列","map","技能基础数据","a","技能名称","filter","标记","className","content","href","target","rel","size","value","onChange","options","Array","from","length","v","i","label","延迟设定","overlay","onClick","index","danger","title","type","disabled","循环执行结果","rest","buff","原始Buff数据","src","图标","技能","删除循环技能","buff覆盖数据","更新buff覆盖数据","技能释放时间","Math","round","实际释放时间","每秒郭氏帧","间隔CD","计划释放时间","剩余秒","索引","循环异常信息","异常索引","是否异常","当前异常","技能释放结果","技能释放记录结果","当前是否需要高亮展示在buff覆盖中","useMemo","cls","classNames","count","offset","onMouseEnter","造成buff数据","buff名称","buff开始时间","buff结束时间","onMouseLeave","实际伤害技能","重要buff列表","wrap","异常信息","信息","CloseCircleFilled","伤害段数","计算循环","获取当前数据","自定义循环保存弹窗","保存自定义循环","useState","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","dispatch","useAppDispatch","全部循环","concat","useEffect","undefined","删除循环","更新当前自定义循环列表","centered","okButtonProps","open","onCancel","onOk","width","destroyOnClose","activeKey","tab","optionLabelProp","placeholder","e","stopPropagation","preventDefault","Modal","okText","删除循环前提示","rules","validator","_","callback","some","message","角色状态信息","当前锐意","锐意","percent","format","buff列表","DOT列表","当前时间点","当前buff列表","Object","keys","当前Dot列表","原始数据","待生效数据","剩余时间","刷新时间","最大持续时间","剩余时间秒","toFixed","层数","当前层数","备注","最后一跳","生效时间","logData","columns","dataIndex","filters","循环模拟技能基础数据","text","onFilter","record","日志","includes","日志类型","日志类型数组","indexOf","render","row","其他数据","伤害次数","join","日志时间","footer","dataSource","pagination","pageSize","showTotal","total","dpsList","总伤","计算结果技能列表","visible","onClose","过滤的buff列表","总战斗用时","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","time","tickCount","axis","style","textAlign","fontSize","coordinate","transpose","interval","position","color","Buff枚举","logName","buffName","split","currentTime","push","forEach","key","总持续时间","获取Buff覆盖率","res","range","格式化buff覆盖数组","id","日志信息","模拟DPS结果","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","showIcon","秒伤","秒伤计算时间","placement","PieChartOutlined","CalendarOutlined","AlignLeftOutlined","当前时间","当前自身buff列表","当前目标buff列表","当前DOT运行状态"],"sourceRoot":""}