{"version":3,"file":"static/js/main~33731685.b96232c2.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/决云势二/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/横云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势一/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/技能类/行云势三/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀_悟/simulator/通用类/通用DOT类.ts"],"sourcesContent":["// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 最大层数 = this?.模拟循环?.Buff和Dot数据?.截辕?.最大层数 || 1\n    const 新层数 = Math.min(当前层数 + 1, 最大层数)\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(新层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n\n      if (生效时间) {\n        this.触发伤害行为('截辕·悟(DOT)', 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前最后一跳数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前层数 = 当前最后一跳数据?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 3\n    const 新流血层数 = Math.min(当前层数 + 1, 流血最大层数)\n\n    this.模拟循环.添加buff?.({\n      名称: '流血',\n      对象: '目标',\n      新增层数: 1,\n      只添加日志: true,\n    })\n    const 数据 = this.获取当前DOT数据('流血')\n\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      const 快照buff列表 = 数据.快照buff列表 || []\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, 快照buff列表, 生效时间, true)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·悟·一',\n  2: '流血·悟·二',\n  3: '流血·悟·三',\n}\n","/**\n * 定义模拟循环类\n */\n\nimport { 角色状态信息类型 } from '../simulator/type'\nimport 循环主类 from './main'\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  角色状态信息?: 角色状态信息类型\n  // 当前自身buff列表?: Buff枚举\n  // 当前目标buff列表?: Buff枚举\n  起手留层数: number\n  大橙武模拟: boolean\n  开启武学助手: boolean\n}\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n  }\n}\n\nexport default 模拟循环\n","// import 循环主类 from '../main'\nimport { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 决云势二 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 决链层数 = this.模拟循环.当前自身buff列表?.['决链']?.当前层数\n\n    if (!决链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前流血层数 =\n      this.模拟循环?.技能类实例集合?.流血?.DOT运行数据?.待生效数据?.[0]?.当前层数 || 0\n    const buff列表: string[] = []\n    if (当前流血层数 > 0) {\n      for (let i = 0; i < 当前流血层数; i++) {\n        buff列表.push('流血增伤')\n      }\n    }\n    this.触发伤害行为('决云势·悟·二', 1, buff列表)\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.卸除buff?.({ 名称: '决链', 对象: '自身' })\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 决云势二\n\nexport const 停云势类型 = typeof 决云势二\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 横云势一 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '横云势·悟·一')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    this.初始化技能运行数据(横云势一.技能数据)\n  }\n\n  减少调息时间(减少时间) {\n    const 层数 = this.技能运行数据.当前层数\n    const 计划下次充能时间点 = this.技能运行数据.计划下次充能时间点 || 0\n    // 没有层数才需要处理\n    if (!层数 && 计划下次充能时间点) {\n      const 减少后充能节点 = Math.max(计划下次充能时间点 - 每秒郭氏帧 * 减少时间, 0)\n      if (减少后充能节点 <= (this.模拟循环.当前时间 || 0)) {\n        this.技能运行数据 = {\n          当前层数: 1,\n        }\n      } else {\n        this.技能运行数据 = {\n          ...this.技能运行数据,\n          计划下次充能时间点: 减少后充能节点,\n        }\n      }\n      this.模拟循环.添加战斗日志?.({\n        日志: `行3触发满锐减CD，横云势释放CD时间变为${减少后充能节点}`,\n        日志类型: '技能释放结果',\n      })\n    }\n  }\n\n  命中() {\n    this.模拟循环.添加buff?.({ 名称: '横云一式', 对象: '自身' })\n  }\n\n  造成伤害() {\n    this.触发伤害行为('横云势·悟·一')\n  }\n\n  释放后() {\n    this.保存释放记录()\n    this.减少绝技技能CD(2)\n    this.对阵招式橙武减少绝技技能CD()\n    this.模拟循环.技能类实例集合?.流血?.获得和刷新流血?.()\n\n    const 当前锐意 = this.模拟循环.角色状态信息?.锐意 || 0\n    if (当前锐意 >= 30) {\n      this.触发消耗锐意(30, '横云势·悟·一')\n      this.模拟循环.添加buff?.({ 名称: '横链', 对象: '自身' })\n    }\n  }\n\n  保存释放记录() {\n    const 造成buff数据 = this.获取施加重要buff信息('横云一式')\n    this.本次释放记录 = {\n      造成buff数据: 造成buff数据 ? 造成buff数据 : undefined,\n      重要buff列表: this.获取当前重要buff列表([\n        '灭影追风·悟',\n        '披靡·悟',\n        '横云一式',\n        '大橙武增伤',\n        '流血增伤',\n      ]),\n    }\n  }\n}\n\nexport default 横云势一\n\nexport const 停云势类型 = typeof 横云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势一 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n\n    if (行链层数) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·一', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·一')\n    this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身' })\n  }\n}\n\nexport default 行云势一\n\nexport const 行云势一类型 = typeof 行云势一\n","import { ERROR_ACTION } from '../../utils'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势三 extends 技能统一类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  释放() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (行链层数 !== 2) {\n      return {\n        可以释放: false,\n        异常信息: ERROR_ACTION.BUFF错误,\n      }\n    }\n  }\n\n  造成伤害() {\n    const 当前是否满锐 = this.模拟循环.角色状态信息?.锐意 && this.模拟循环.角色状态信息?.锐意 >= 60\n\n    this.触发伤害行为('行云势·悟·三', 1, 当前是否满锐 ? ['满锐增伤'] : [])\n    this.保存释放记录()\n\n    if (当前是否满锐) {\n      this.减少对阵技能CD()\n    }\n  }\n\n  保存释放记录() {\n    this.本次释放记录 = {\n      重要buff列表: this.获取当前重要buff列表(['灭影追风·悟', '披靡·悟', '横云一式', '大橙武增伤']),\n    }\n  }\n\n  释放后() {\n    this.释放技能回复锐意(10, '行云势·悟·三')\n    this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n  }\n}\n\nexport default 行云势三\n\nexport const 行云势一类型 = typeof 行云势三\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    当前层数: -999,\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据(技能) {\n    if (this.技能运行数据.当前层数 === -999) {\n      this.技能运行数据.当前层数 = 技能?.最大充能层数 || 1\n    }\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import { 获取实际帧数 } from '../../../山海心诀/utils'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return {\n        结算数组,\n        未结算数组,\n      }\n    } else {\n      return {\n        结算数组: [],\n        未结算数组: [],\n      }\n    }\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    const 实际初次频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.初次频率 || DOT数据.伤害频率, 循环加速值)\n      : DOT数据.初次频率 || DOT数据.伤害频率\n\n    const 实际伤害频率 = DOT是否吃加速\n      ? 获取实际帧数(DOT数据.伤害频率, 循环加速值)\n      : DOT数据.伤害频率\n\n    const 当前时间 = this.模拟循环.当前时间 || 0\n\n    const 快照buff列表: string[] = []\n\n    if (this.模拟循环?.当前自身buff列表?.['灭影追风·悟']?.当前层数) {\n      快照buff列表.push('灭影追风·悟')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['大橙武增伤']?.当前层数) {\n      快照buff列表.push('大橙武增伤')\n    }\n    if (this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数) {\n      const 披靡层数 = this.模拟循环?.当前自身buff列表?.['披靡·悟']?.当前层数\n      快照buff列表.push(`披靡·悟·${披靡层数}`)\n    }\n\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数, 快照buff列表 }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n          快照buff列表,\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n          快照buff列表,\n        })\n      }\n    }\n\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n\n    // 每次刷新和更新时，删除前面的待生效数据\n    this.模拟循环.添加待生效事件队列?.(\n      [\n        {\n          事件名称: `卸除buff-${DOT数据?.名称}`,\n          事件时间: 待生效数据?.[待生效数据.length - 1]?.生效时间 || 0,\n          事件备注: { buff名称: DOT数据?.名称, buff类型: 'DOT', buff对象: '目标', 卸除层数: 9999 },\n        },\n      ],\n      true\n    )\n  }\n}\n\nexport default 通用DOT类\n"],"names":["截辕","模拟循环","当前最后一跳数据","this","DOT运行数据","待生效数据","length","当前层数","最大层数","Buff和Dot数据","新层数","Math","min","添加buff","名称","对象","新增层数","只添加日志","数据","获取当前DOT数据","更新待生效数据","结算并更新运行数据","结算数组","forEach","生效时间","快照buff列表","触发伤害行为","通用DOT类","流血","流血最大层数","新流血层数","层数","流血伤害名称枚举","props","模拟实例","循环主类","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","当前DOT运行状态","获取各DOT的运行状态","最终日志","战斗日志","当前自身buff列表","当前目标buff列表","角色状态信息","当前时间","循环执行结果","循环异常信息","技能释放记录","当前GCD组","GCD组","技能基础数据","决云势二","可以释放","异常信息","ERROR_ACTION","当前流血层数","技能类实例集合","buff列表","i","push","保存释放记录","对阵招式橙武减少绝技技能CD","卸除buff","本次释放记录","重要buff列表","获取当前重要buff列表","技能统一类","横云势一","初始化技能运行数据","技能数据","减少时间","技能运行数据","计划下次充能时间点","减少后充能节点","max","每秒郭氏帧","添加战斗日志","日志","日志类型","减少绝技技能CD","获得和刷新流血","锐意","触发消耗锐意","造成buff数据","获取施加重要buff信息","undefined","有CD技能通用类","循环模拟技能基础数据","item","技能名称","行云势一","当前是否满锐","释放技能回复锐意","行云势三","减少对阵技能CD","卸除层数","技能","最大充能层数","新数据","DOT名称","未结算数组","更新DOT运行数据","DOT数据","DOT是否吃加速","是否吃加速","循环加速值","根据加速等级获取虚拟加速值","加速等级","实际初次频率","获取实际帧数","初次频率","伤害频率","实际伤害频率","披靡层数","map","待添加次数","最大作用次数","原最后一次生效时间","添加待生效事件队列","事件名称","事件时间","事件备注","buff名称","buff类型","buff对象"],"sourceRoot":""}